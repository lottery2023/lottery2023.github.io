{"version":3,"sources":["webpack:///src/app/pipes/translate.pipe.ts","webpack:///src/app/views/bet/bet-alerts/bet-alerts.component.ts","webpack:///src/app/views/bet/bet-alerts/bet-alerts.component.html","webpack:///src/app/views/bet/bet-four-figure/bet-four-figure.component.ts","webpack:///src/app/views/bet/bet-four-figure/bet-four-figure.component.html","webpack:///src/app/views/bet/bet-routing.module.ts","webpack:///src/app/views/bet/bet-three-figure/bet-three-figure.component.ts","webpack:///src/app/views/bet/bet-three-figure/bet-three-figure.component.html","webpack:///src/app/views/bet/bet.module.ts","webpack:///src/app/views/bet/bet/bet.component.ts","webpack:///src/app/views/bet/bet/bet.component.html","webpack:///src/app/views/bet/bet2/bet2.component.ts","webpack:///src/app/views/bet/bet2/bet2.component.html","webpack:///src/app/views/bet/bets/bets.component.ts","webpack:///src/app/views/bet/bets/bets.component.html","webpack:///src/app/views/bet/forbidden-number/forbidden-number.component.ts","webpack:///src/app/views/bet/forbidden-number/forbidden-number.component.html","webpack:///src/app/views/bet/forbidden-numbers/forbidden-numbers.component.ts","webpack:///src/app/views/bet/forbidden-numbers/forbidden-numbers.component.html","webpack:///src/app/views/bet/lotteries/lotteries.component.ts","webpack:///src/app/views/bet/lotteries/lotteries.component.html","webpack:///src/app/views/bet/lottery/lottery.component.ts","webpack:///src/app/views/bet/lottery/lottery.component.html"],"names":["TranslatePipe","value","args","getMessage","words","lottery","firstThree","lastThree","chock","chockNumber","combined","number","price","employeeCode","created","userName","actions","accumulated","accumulatedTotal","word","find","o","name","pure","BetAlertsComponent","service","authService","router","entityApi","entityApiLotteries","lotteries","selectedIdLotteries","settings","showPreviewDialog","query","table","options","where","isFourFigure","lotteryId","$in","order","displayedColumns","filtersColumns","createdDate","Date","title","subtitle","d","n","getDay","dayName","get","play","$like","subscribe","res","enumLotteryTemporality","color","currLotteries","temp","lotteriesFount","filter","temporality","push","id","changes","loadChange","row","alert","event","charCode","which","keyCode","filename","text","getText","element","document","createElement","setAttribute","encodeURIComponent","style","display","body","appendChild","click","removeChild","dataSource","data","obj","difference","rows","numbers","numberFount","length","confirm","datestring","getDate","getMonth","getFullYear","save","urls","onPageChange","numberOnly","downloadFile","covered","onSortChange","onPaginatorChange","selector","templateUrl","BetFourFigureComponent","$gte","routes","path","canActivate","component","BetRoutingModule","forChild","imports","exports","BetThreeFigureComponent","BetModule","declarations","BetComponent","route","fb","changeDetectorRef","_snackBar","entityDetailApi","entityApiEmployees","entityNumbers","employees","configFormGroup","entityId","setting","field","ValidationError","entityForm","employeeId","required","checkLotteries","array","checkNumbers","firstThreePrice","lastThreePrice","checkCombined","checkChock","combinedThreeFigurePrice","total","takenValidator","iniEntity","params","getSelect","tasks","totalTasks","processTasks","lotteriesDetail","numbersDetail","entity","details","detail","lotteryFound","LotteriesThreeFigures","isThreeFigures","LotteriesFourFigures","numberFourFigures","stop","i","addCheckNumbers","isFirstThree","isLastThreem","lotteryDetail","check","lotteryChange","checked","source","setValidators","chockFourFigure","combinedFourFigure","betId","include","association","currEmployeeId","userId","chockFourFigurePrice","chockThreeFigurePrice","combinedFourFigurePrice","controls","removeAt","e","hastManyThreeFigures","hastThreeFigures","count","forEach","item","validateAllNumbers","numberControl","toString","valid","isLastThree","findThreeFigures","substring","refreshGrid","index","findIndex","calculateTotal","deleteDetails","detailFound","map","view","deleteOptions","disabled","done","currentUser","getItem","dbDetails","onlyThreeFigures","objl","currDetail","detailFount","splice","onDeleteCustom","clearValidators","fourFigures","numberToFind","objFount","updateValueAndValidity","detectChanges","ChockFourFigure","lotteriesFour","lotteriesThree","NumbersFour","NumbersThree","numbersThreeFirst","numbersThreeLast","add","firstThreeChange","chockChange","lastThreeChange","combinedChange","Bet2Component","forbiddenNumbers","sort","compare","isActive","a","b","bandA","bandB","comparison","newDetails","getNewDetail","newDetail","JSON","parse","stringify","currNumbers","hasCurrNumbersThreeFigures","currLotteryNumbers","concat","removeValFromIndex","hastFourFigures","numbersFound","numberFound","deleteIds","entityRes","open","duration","forbiddenFound","lotteryName","hasFourFigure","lotteryFourFigureId","hasThreeFigure","lotteryThreeFigureId","currDetails","addToThreeFigure","changePrice","BetsComponent","showCardHeader","navigate","$or","width","z","Array","join","numberChange","ForbiddenNumberComponent","entities","$ne","unshift","numberId","currEntity","loadNumbers","ForbiddenNumbersComponent","LotteriesComponent","LotteryComponent","weekDays","monday","tuesday","wednesday","thursday","friday","saturday","sunday","settingName","settingCode","code","checkArray","day","days","split","playDaysChange","closing","loadLotteries"],"mappings":"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","file":"views-bet-bet-module-es5.js","sourcesContent":["import {Pipe, PipeTransform} from '@angular/core';\n// import {GlobalizeService}    from '../services/globalize.service';\n\n@Pipe({\n    name: 'translate',\n    pure: false\n})\nexport class TranslatePipe implements PipeTransform {\n\n  constructor(\n    // private glService:GlobalizeService\n  ) {\n  }\n\n  transform(value: string, args?: string[]): any {\n\n    value = value || '';\n\n    return (this.getMessage(value) || value);\n\n  }\n\n  getMessage(value) {\n\n    let words: any = [\n      {lottery: 'Lotería'},\n      {firstThree: 'Tres primeras'},\n      {lastThree: 'Tres ultimas'},\n      {chock: 'Cuña'},\n      {chockNumber: 'Cuña'},\n      {combined: 'Combinado'},\n      {number: 'Numero'},\n      {price: 'Precio'},\n      {employeeCode: 'Código empleado'},\n      {created: 'Creado'},\n      {userName: 'Nombre usuario'},\n      {actions: 'Acciones'},\n      {accumulated: 'Acumulado'},\n      {accumulatedTotal: 'Acumulado Total'}\n    ];\n\n    let word = words.find((o:any) => value in o)\n\n    return word ? word[value] : '';\n  }\n}\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-bet-alerts',\n  templateUrl: './bet-alerts.component.html'\n})\nexport class BetAlertsComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n\n  entityApi = 'bets';\n  entityApiLotteries = 'lotteries';\n\n  lotteries: any[] = [];\n  selectedIdLotteries: string[] = [];\n\n  settings: any = {\n    showPreviewDialog: true,\n    query: {\n      table: 'vw_betAlerts'\n    },\n    options: {\n      where: {\n        isFourFigure: true,\n        lotteryId: {$in : this.selectedIdLotteries}\n      },\n      order: [['accumulated', 'desc'], ['accumulatedTotal', 'desc']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['lottery', 'number', 'accumulated', 'difference', 'createdDate', 'accumulatedTotal', 'actions'];\n  filtersColumns: string[] = ['lottery'];\n  dataSource: MatTableDataSource<any>;\n  price = 7000;\n  createdDate = new Date();\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Apuestas Alertas';\n    this.subtitle = 'Apuesta';\n\n    super.init(this);\n\n    let d = new Date();\n    let n = d.getDay();\n\n    let dayName = '';\n\n    switch (n) {\n      case 0:\n        dayName = 'sunday';\n        break;\n      case 1:\n        dayName = 'monday';\n        break;\n      case 2:\n        dayName = 'tuesday';\n        break;\n      case 3:\n        dayName = 'wednesday';\n        break;\n      case 4:\n        dayName = 'thursday';\n        break;\n      case 5:\n        dayName = 'friday';\n        break;\n      case 6:\n        dayName = 'saturday';\n        break;\n    }\n\n    this.service.get(this.entityApiLotteries, {options: { where:{play: { $like: '%'+ dayName +'%' }}, order:[['name', 'asc']]}})\n      .subscribe((res: any) => {\n\n        let enumLotteryTemporality = [\n          {\n            value: 'morning', color: 'green'\n          },\n          {\n            value: 'afternoon', color: 'crimson'\n          },\n          {\n            value: 'night', color: 'blue'\n          },\n          {\n            value: null, color: 'Ninguna'\n          }\n        ];\n\n        let currLotteries = res;\n\n        for (let temp of enumLotteryTemporality) {\n\n          let lotteriesFount = currLotteries.filter((o: any) => o.temporality == temp.value);\n\n          for (let lottery of lotteriesFount) {\n            lottery.color = temp.color;\n            this.lotteries.push(lottery);\n            this.selectedIdLotteries.push(lottery.id);\n          }\n        }\n\n        super.onPageChange();\n      });\n\n\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    // this.router.navigate(['/employee', {employeeId: row.id}]);\n  }\n\n  validateAlert(row: any): boolean {\n\n    let alert = false;\n\n    if (row.accumulated > this.price) {\n      alert = true;\n    }\n\n    return  alert;\n  }\n\n  numberOnly(event): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n\n    return true;\n\n  }\n\n  downloadFile() {\n\n    let filename = 'Numbers' + new Date();\n    let text = this.getText();\n\n    let element = document.createElement('a');\n    element.setAttribute('href', 'data:text/plain;charset=utf-8,' + encodeURIComponent(text));\n    element.setAttribute('download', filename);\n\n    element.style.display = 'none';\n    document.body.appendChild(element);\n\n    element.click();\n\n    document.body.removeChild(element);\n  }\n\n  getText(): string {\n\n    let text = '';\n\n    for (let obj of this.dataSource.data) {\n\n      if (obj.accumulated > this.price) {\n\n        text += obj.lottery + ' ' + obj.number + ' de ' + obj.difference + ' \\r\\n'\n      }\n    }\n\n    return text;\n  }\n\n  beforePrint(rows: any): any {\n\n    for (let row of rows) {\n\n      row.difference = row.accumulated - this.price;\n\n      if (row.difference < 1) {\n        row.difference = '';\n      }\n    }\n\n    return rows\n  }\n\n  covered() {\n\n    let numbers = [];\n\n    for (let obj of this.dataSource.data) {\n\n      if (obj.accumulated > this.price) {\n\n        let numberFount = numbers.find((o: any) => o == obj.number);\n\n        if (!numberFount) {\n          numbers.push({number: obj.number, lotteryId:  obj.lotteryId});\n        }\n      }\n    }\n\n    if (numbers.length) {\n\n      if (confirm('¿Ya descargo el archivo de números?')) {\n\n        var datestring = this.createdDate.getDate() + \"/\" + (this.createdDate.getMonth() + 1) + \"/\" + this.createdDate.getFullYear();\n\n        this.service.save('details', {numbers: numbers, accumulated: this.price, createdDate: datestring})\n          .subscribe((urls) => {\n\n            this.onPageChange();\n\n          });\n      }\n    }\n\n  }\n\n  beforePageChange(): void {\n\n    if (this.createdDate) {\n\n      var datestring = this.createdDate.getDate()  + \"/\" + (this.createdDate.getMonth()+1) + \"/\" + this.createdDate.getFullYear();\n      // + \" \" +         this.createdDate.getHours() + \":\" + this.createdDate.getMinutes();\n\n      this.settings.options.where.createdDate = datestring;\n    }\n    else {\n      delete this.settings.options.where.createdDate;\n    }\n\n    this.settings.options.where.lotteryId = this.selectedIdLotteries;\n  }\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n            <mat-checkbox [(ngModel)]=\"settings.options.where.isFourFigure\"\n                          [ngModelOptions]=\"{standalone: true}\"\n                          style=\"margin-right: 10px;\">Cuatro Cifras</mat-checkbox>\n          </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n            <mat-form-field style=\"float: left;width: 30%; margin-right: 10px;\">\n              <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n              <input matInput\n                     type = \"number\"\n                     placeholder=\"Entre precio\"\n                     (keypress)=\"numberOnly($event)\"\n                     onKeyPress=\"if(this.value.length==9) return false;\"\n                     autocomplete=\"off\"\n                     [(ngModel)]=\"price\"\n              >\n            </mat-form-field>\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Seleccione fecha</mat-label>\n              <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"createdDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Select an option</mat-label>\n              <mat-select [(value)]=\"selectedIdLotteries\" multiple>\n                <mat-option *ngFor=\"let lottery of lotteries\" [value]=\"lottery.id\" [ngStyle]=\"{color: lottery.color}\">\n                  {{lottery.name}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>\n            <button mat-fab color=\"basic\"  (click)=\"downloadFile()\" style=\"float: left;\">Archivo</button>\n            <button mat-fab color=\"warn\"  (click)=\"covered()\" style=\"float: right;\">Cubrir</button>\n          </div>\n        </div>\n<!--        <a href=\"data:application/octet-stream;charset=utf-16le;base64,//5mAG8AbwAgAGIAYQByAAoA\">text file</a>-->\n<!--        <a href=\"data:application/octet-stream,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A\">CSV Octet</a>-->\n<!--        <a href=\"data:application/octet-stream,Medellin %2C 1234 %0A Medellin %2C 1235\">CSV Octet</a>-->\n<!--        <a href=\"data:application/octet-stream,{{getFile()}}\">Create File</a>-->\n<!--        <form onsubmit=\"downloadF('test', 'test')\">-->\n<!--          <input type=\"text\" name=\"name\" value=\"test.txt\">-->\n<!--          <textarea name=\"text\"></textarea>-->\n<!--          <input type=\"submit\" value=\"Download\">-->\n<!--        </form>-->\n\n<!--        <button mat-fab color=\"basic\"  (click)=\"downloadF('test', 'test')\">Refresh</button>-->\n<!--        <a [href]=\"getFile()\">Create File</a>-->\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n<!--              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n<!--              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>-->\n              <span *ngIf=\"column === 'actions' && validateAlert(element)\" class=\"material-icons\">notification_important</span>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-bet-four-figure',\n  templateUrl: './bet-four-figure.component.html'\n})\nexport class BetFourFigureComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n\n  entityApi = 'bets';\n  price = 50000;\n\n  settings: any = {\n    query: {\n      table: 'vw_betAlerts'\n    },\n    options: {\n      where: {\n        isFourFigure: true,\n        accumulatedTotal : {$gte: this.price}\n      },\n      order: [['accumulated', 'desc'], ['accumulatedTotal', 'desc']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['lottery', 'number', 'accumulated', 'createdDate', 'accumulatedTotal', 'actions'];\n  filtersColumns: string[] = ['lottery'];\n  dataSource: MatTableDataSource<any>;\n\n  createdDate = new Date();\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Apuestas Alertas Cuantro Cifras Mayores A';\n    this.subtitle = 'Apuesta';\n\n    super.init(this);\n    super.onPageChange();\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    // this.router.navigate(['/employee', {employeeId: row.id}]);\n  }\n\n  validateAlert(row: any): boolean {\n\n    let alert = false;\n\n    if (row.accumulatedTotal >= this.price) {\n      alert = true;\n    }\n\n    return  alert;\n  }\n\n  numberOnly(event): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n\n    return true;\n\n  }\n\n  beforePageChange(): void {\n\n    this.settings = {\n      query: {\n        table: 'vw_betAlerts'\n      },\n      options: {\n        where: {\n          isFourFigure: true,\n          accumulatedTotal : {$gte: this.price}\n        },\n        order: [['accumulated', 'desc'], ['accumulatedTotal', 'desc']]\n      }\n    };\n\n    if (this.createdDate) {\n\n      var datestring = this.createdDate.getDate()  + \"/\" + (this.createdDate.getMonth()+1) + \"/\" + this.createdDate.getFullYear();\n      // + \" \" +         this.createdDate.getHours() + \":\" + this.createdDate.getMinutes();\n\n      this.settings.options.where.createdDate = datestring;\n    }\n    else {\n      delete this.settings.options.where.createdDate;\n    }\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n<!--        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">-->\n<!--          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">-->\n<!--            <mat-checkbox [(ngModel)]=\"settings.options.where.isFourFigure\"-->\n<!--                          [ngModelOptions]=\"{standalone: true}\"-->\n<!--                          style=\"margin-right: 10px;\">Cuatro Cifras</mat-checkbox>-->\n<!--          </div>-->\n<!--        </div>-->\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n            <mat-form-field style=\"float: left;width: 30%; margin-right: 10px;\">\n              <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n              <input matInput\n                     type = \"number\"\n                     placeholder=\"Entre precio\"\n                     (keypress)=\"numberOnly($event)\"\n                     onKeyPress=\"if(this.value.length==9) return false;\"\n                     autocomplete=\"off\"\n                     [(ngModel)]=\"price\"\n              >\n            </mat-form-field>\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Seleccione fecha</mat-label>\n              <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"createdDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>\n<!--            <button mat-fab color=\"basic\"  (click)=\"downloadFile()\" style=\"float: left;\">Archivo</button>-->\n<!--            <button mat-fab color=\"warn\"  (click)=\"covered()\" style=\"float: right;\">Cubrir</button>-->\n          </div>\n        </div>\n        <!--        <a href=\"data:application/octet-stream;charset=utf-16le;base64,//5mAG8AbwAgAGIAYQByAAoA\">text file</a>-->\n        <!--        <a href=\"data:application/octet-stream,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A\">CSV Octet</a>-->\n        <!--        <a href=\"data:application/octet-stream,Medellin %2C 1234 %0A Medellin %2C 1235\">CSV Octet</a>-->\n        <!--        <a href=\"data:application/octet-stream,{{getFile()}}\">Create File</a>-->\n        <!--        <form onsubmit=\"downloadF('test', 'test')\">-->\n        <!--          <input type=\"text\" name=\"name\" value=\"test.txt\">-->\n        <!--          <textarea name=\"text\"></textarea>-->\n        <!--          <input type=\"submit\" value=\"Download\">-->\n        <!--        </form>-->\n\n        <!--        <button mat-fab color=\"basic\"  (click)=\"downloadF('test', 'test')\">Refresh</button>-->\n        <!--        <a [href]=\"getFile()\">Create File</a>-->\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n              <!--              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n              <!--              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>-->\n              <span *ngIf=\"column === 'actions' && validateAlert(element)\" class=\"material-icons\">notification_important</span>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthGuard} from '../../services/security/auth.guard';\nimport {LotteryComponent} from './lottery/lottery.component';\nimport {BetComponent} from './bet/bet.component';\nimport {BetAlertsComponent} from './bet-alerts/bet-alerts.component';\nimport {BetsComponent} from './bets/bets.component';\nimport {ForbiddenNumberComponent} from \"./forbidden-number/forbidden-number.component\";\nimport {Bet2Component} from \"./bet2/bet2.component\";\nimport {BetFourFigureComponent} from \"./bet-four-figure/bet-four-figure.component\";\nimport {BetThreeFigureComponent} from \"./bet-three-figure/bet-three-figure.component\";\n\nconst routes: Routes = [\n  {\n    path: 'betalerts',\n    canActivate: [AuthGuard],\n    component: BetAlertsComponent\n  },\n  {\n    path: 'betfourfigure',\n    canActivate: [AuthGuard],\n    component: BetFourFigureComponent\n  },\n  {\n    path: 'betthreefigure',\n    canActivate: [AuthGuard],\n    component: BetThreeFigureComponent\n  },\n  {\n    path: 'lottery',\n    canActivate: [AuthGuard],\n    component: LotteryComponent\n  },\n  {\n    path: 'bet',\n    canActivate: [AuthGuard],\n    component: BetComponent\n  },\n  {\n    path: 'bet2',\n    canActivate: [AuthGuard],\n    component: Bet2Component\n  },\n  {\n    path: 'bets',\n    canActivate: [AuthGuard],\n    component: BetsComponent\n  },\n  {\n    path: 'forbidden',\n    canActivate: [AuthGuard],\n    component: ForbiddenNumberComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class BetRoutingModule { }\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n\n@Component({\n  selector: 'app-bet-three-figure',\n  templateUrl: './bet-three-figure.component.html'\n})\nexport class BetThreeFigureComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n\n  entityApi = 'bets';\n  price = 70000;\n\n  settings: any = {\n    query: {\n      table: 'vw_betAlerts'\n    },\n    options: {\n      where: {\n        isFourFigure: false,\n        accumulatedTotal : {$gte: this.price}\n      },\n      order: [['accumulated', 'desc'], ['accumulatedTotal', 'desc']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['lottery', 'number', 'accumulated', 'createdDate', 'accumulatedTotal', 'actions'];\n  filtersColumns: string[] = ['lottery'];\n  dataSource: MatTableDataSource<any>;\n\n  createdDate = new Date();\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Apuestas Alertas Tres Cifras Mayores A';\n    this.subtitle = 'Apuesta';\n\n    super.init(this);\n    super.onPageChange();\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    // this.router.navigate(['/employee', {employeeId: row.id}]);\n  }\n\n  validateAlert(row: any): boolean {\n\n    let alert = false;\n\n    if (row.accumulatedTotal >= this.price) {\n      alert = true;\n    }\n\n    return  alert;\n  }\n\n  numberOnly(event): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57)) {\n      return false;\n    }\n\n    return true;\n\n  }\n\n  beforePageChange(): void {\n\n    this.settings = {\n      query: {\n        table: 'vw_betAlerts'\n      },\n      options: {\n        where: {\n          isFourFigure: false,\n          accumulatedTotal : {$gte: this.price}\n        },\n        order: [['accumulated', 'desc'], ['accumulatedTotal', 'desc']]\n      }\n    };\n\n    if (this.createdDate) {\n\n      var datestring = this.createdDate.getDate()  + \"/\" + (this.createdDate.getMonth()+1) + \"/\" + this.createdDate.getFullYear();\n      // + \" \" +         this.createdDate.getHours() + \":\" + this.createdDate.getMinutes();\n\n      this.settings.options.where.createdDate = datestring;\n    }\n    else {\n      delete this.settings.options.where.createdDate;\n    }\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <!--        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">-->\n        <!--          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">-->\n        <!--            <mat-checkbox [(ngModel)]=\"settings.options.where.isFourFigure\"-->\n        <!--                          [ngModelOptions]=\"{standalone: true}\"-->\n        <!--                          style=\"margin-right: 10px;\">Cuatro Cifras</mat-checkbox>-->\n        <!--          </div>-->\n        <!--        </div>-->\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n            <mat-form-field style=\"float: left;width: 30%; margin-right: 10px;\">\n              <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n              <input matInput\n                     type = \"number\"\n                     placeholder=\"Entre precio\"\n                     (keypress)=\"numberOnly($event)\"\n                     onKeyPress=\"if(this.value.length==9) return false;\"\n                     autocomplete=\"off\"\n                     [(ngModel)]=\"price\"\n              >\n            </mat-form-field>\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Seleccione fecha</mat-label>\n              <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"createdDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>\n            <!--            <button mat-fab color=\"basic\"  (click)=\"downloadFile()\" style=\"float: left;\">Archivo</button>-->\n            <!--            <button mat-fab color=\"warn\"  (click)=\"covered()\" style=\"float: right;\">Cubrir</button>-->\n          </div>\n        </div>\n        <!--        <a href=\"data:application/octet-stream;charset=utf-16le;base64,//5mAG8AbwAgAGIAYQByAAoA\">text file</a>-->\n        <!--        <a href=\"data:application/octet-stream,field1%2Cfield2%0Afoo%2Cbar%0Agoo%2Cgai%0A\">CSV Octet</a>-->\n        <!--        <a href=\"data:application/octet-stream,Medellin %2C 1234 %0A Medellin %2C 1235\">CSV Octet</a>-->\n        <!--        <a href=\"data:application/octet-stream,{{getFile()}}\">Create File</a>-->\n        <!--        <form onsubmit=\"downloadF('test', 'test')\">-->\n        <!--          <input type=\"text\" name=\"name\" value=\"test.txt\">-->\n        <!--          <textarea name=\"text\"></textarea>-->\n        <!--          <input type=\"submit\" value=\"Download\">-->\n        <!--        </form>-->\n\n        <!--        <button mat-fab color=\"basic\"  (click)=\"downloadF('test', 'test')\">Refresh</button>-->\n        <!--        <a [href]=\"getFile()\">Create File</a>-->\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n              <!--              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n              <!--              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>-->\n              <span *ngIf=\"column === 'actions' && validateAlert(element)\" class=\"material-icons\">notification_important</span>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport {DemoMaterialModule} from '../../demo-material-module';\nimport { BetRoutingModule } from './bet-routing.module';\n\nimport {TranslatePipe} from \"../../pipes/translate.pipe\";\n\nimport { LotteryComponent } from './lottery/lottery.component';\nimport { LotteriesComponent } from './lotteries/lotteries.component';\nimport { BetComponent } from './bet/bet.component';\nimport { BetAlertsComponent } from './bet-alerts/bet-alerts.component';\nimport { BetsComponent } from './bets/bets.component';\nimport { ForbiddenNumberComponent } from './forbidden-number/forbidden-number.component';\nimport { ForbiddenNumbersComponent } from './forbidden-numbers/forbidden-numbers.component';\nimport { Bet2Component } from './bet2/bet2.component';\nimport { BetFourFigureComponent } from './bet-four-figure/bet-four-figure.component';\nimport { BetThreeFigureComponent } from './bet-three-figure/bet-three-figure.component';\n\n\n@NgModule({\n  declarations: [LotteryComponent, LotteriesComponent, BetComponent, BetAlertsComponent, BetsComponent,\n    TranslatePipe,\n    ForbiddenNumberComponent,\n    ForbiddenNumbersComponent,\n    Bet2Component,\n    BetFourFigureComponent,\n    BetThreeFigureComponent],\n  imports: [\n    CommonModule,\n    BetRoutingModule,\n    DemoMaterialModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class BetModule { }\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseEditView} from '../../baseEditView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { v4 as uuidv4 } from 'uuid';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-bet',\n  templateUrl: './bet.component.html'\n})\nexport class BetComponent extends BaseEditView implements OnInit {\n\n  entityApi = 'bets';\n  entityDetailApi = 'details';\n  entityApiEmployees = 'employees';\n  entityApiLotteries = 'lotteries';\n  entityNumbers = 'numbers';\n\n  title: any;\n  subtitle: any;\n  entity: any;\n\n  entityForm: FormGroup;\n\n  employees = [];\n  lotteries = [];\n\n  number = null;\n\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = ['number', 'price', 'actions'];\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private _snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Apuesta';\n    this.subtitle = 'Apuesta';\n\n    this.iniEntity();\n\n    super.init(this);\n\n    this.route.params.subscribe((params) => {\n\n      this.service.getSelect(this.entityApiEmployees, {value: 'id', text: 'code', options: {order:[['code', 'asc']]}})\n        .subscribe((res: any) => {\n          this.employees = res;\n        });\n\n      let d = new Date();\n      let n = d.getDay();\n\n      let dayName = '';\n\n      switch (n) {\n        case 0:\n          dayName = 'sunday';\n          break;\n        case 1:\n          dayName = 'monday';\n          break;\n        case 2:\n          dayName = 'tuesday';\n          break;\n        case 3:\n          dayName = 'wednesday';\n          break;\n        case 4:\n          dayName = 'thursday';\n          break;\n        case 5:\n          dayName = 'friday';\n          break;\n        case 6:\n          dayName = 'saturday';\n          break;\n      }\n\n      let tasks = 0;\n      let totalTasks = 0;\n\n      let processTasks = () => {\n        tasks++\n\n        if (tasks == totalTasks) {\n\n          let lotteriesDetail = []\n          let numbersDetail = [];\n\n          if (this.entity && this.entity.details && this.entity.details.length) {\n\n            for (let detail of this.entity.details) {\n\n              let lotteryFound = lotteriesDetail.find((o:any) => o.id == detail.lotteryId);\n\n              if (!lotteryFound){\n                lotteriesDetail.push(detail.lottery);\n              }\n            }\n\n            for (let detail of this.entity.details) {\n\n              let numberFount = numbersDetail.find((o: any) => o.number == detail.number)\n\n              if (!numberFount) {\n\n                let numbers = this.entity.details.filter((o: any) => o.number == detail.number);\n\n                let LotteriesThreeFigures = lotteriesDetail.filter((o:any) => o.isThreeFigures == true);\n                let LotteriesFourFigures = lotteriesDetail.filter((o:any) => o.isThreeFigures == false);\n\n                if (detail.number.length == 3) {\n\n                  if (numbers.length == LotteriesThreeFigures.length) {\n                    numbersDetail.push(detail);\n                  } else {\n\n                    let numberFourFigures = this.entity.details.filter((o: any) => o.number.length > 3);\n\n                    let stop = (numbers.length - (LotteriesFourFigures.length * LotteriesThreeFigures.length)) / LotteriesThreeFigures.length\n\n                    //todo revisar bien\n\n                    if (stop < 1) {\n                      stop = (numbers.length - (LotteriesFourFigures.length)) / LotteriesThreeFigures.length\n                    }\n\n                    for (let i = 0; i < stop; i++) {\n                      numbersDetail.push(detail);\n                    }\n                  }\n                }\n                else {\n                  if (numbers.length == LotteriesFourFigures.length) {\n                    numbersDetail.push(detail);\n                  } else {\n                    let stop = numbers.length / LotteriesFourFigures.length\n\n                    for (let i = 0; i < stop; i++) {\n                      numbersDetail.push(detail);\n                    }\n                  }\n                }\n              }\n            }\n\n            for (let detail of numbersDetail) {\n\n              this.addCheckNumbers(detail.number, detail.isFirstThree, detail.isLastThreem);\n            }\n\n            for (let lotteryDetail of lotteriesDetail) {\n\n              let lotteryFound = this.lotteries.find((o:any) => o.id == lotteryDetail.id);\n\n              if (lotteryFound){\n                lotteryFound.check = true;\n                this.lotteryChange({checked: true, source:{value: lotteryFound.id }})\n              }\n            }\n\n          }\n\n          if (this.entity.chock) {\n\n            const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n            this.entityForm.get('checkChock').setValidators([Validators.required]);\n\n            checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: true}));\n            checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: false}));\n          }\n\n          if (this.entity.combined) {\n\n            const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n            this.entityForm.get('checkCombined').setValidators([Validators.required]);\n\n            checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: true}));\n            checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: false}));\n          }\n        }\n      }\n\n      totalTasks ++\n      this.service.get(this.entityApiLotteries, {options: { where:{play: { $like: '%'+ dayName +'%' }}, order:[['name', 'asc']]}})\n        .subscribe((res: any) => {\n\n          let enumLotteryTemporality = [\n            {\n              value: 'morning', color: 'green'\n            },\n            {\n              value: 'afternoon', color: 'crimson'\n            },\n            {\n              value: 'night', color: 'blue'\n            },\n            {\n              value: null, color: 'Ninguna'\n            }\n          ];\n\n          let currLotteries = res;\n\n          for (let temp of enumLotteryTemporality) {\n\n            let lotteriesFount = currLotteries.filter((o: any) => o.temporality == temp.value);\n\n            for (let lottery of lotteriesFount) {\n              lottery.color = temp.color;\n              this.lotteries.push(lottery);\n            }\n          }\n\n          processTasks();\n        });\n\n      if (params && params.betId) {\n\n        totalTasks ++;\n\n        this.configFormGroup(params.betId);\n\n        super.getEntity(params.betId, {options: {\n            include: [{association: 'details', include: [{association: 'lottery'}]}\n              , {association: 'employee'}, ]\n          }}).subscribe(() => {\n\n          processTasks();\n        });\n      }\n      else {\n        this.configFormGroup();\n      }\n    });\n  }\n\n  configFormGroup = (entityId?:any) => {\n\n    let setting: any = {field: 'number', ValidationError: 'forbidden'}\n\n    // if (entityId) {\n    //\n    //   setting.options = {\n    //     where: {\n    //       id: { $ne: entityId }\n    //     }\n    //   }\n    // }\n\n    this.entityForm = new FormGroup({\n      employeeId: new FormControl('', [Validators.required]),\n      checkLotteries: this.fb.array([], [Validators.required]),\n      checkNumbers: this.fb.array([], [Validators.required]),\n      price: new FormControl('', [Validators.required]),\n      firstThreePrice: new FormControl(''),\n      lastThreePrice: new FormControl(''),\n      // chockPrice: new FormControl(''),\n      checkCombined: this.fb.array([]),\n      checkChock: this.fb.array([]),\n      // combinedFourFigurePrice: new FormControl(''),\n      combinedThreeFigurePrice: new FormControl(''),\n      total: new FormControl(''),\n      number: new FormControl('', null,\n        [this.service.takenValidator(this.entityNumbers, setting)])\n    });\n  }\n\n  iniEntity(): void {\n\n    let currEmployeeId = null;\n\n    if (this.entity && this.entity.employeeId) {\n      currEmployeeId = this.entity.employeeId;\n    }\n\n    this.entity = {\n      employeeId: null,\n      userId: null,\n      price: null,\n      firstThree: false,\n      firstThreePrice: null,\n      lastThree: false,\n      lastThreePrice: null,\n      chock: false,\n      chockFourFigurePrice: null,\n      chockThreeFigurePrice: null,\n      // chockPrice: null,\n      combined: false,\n      combinedFourFigurePrice: null,\n      combinedThreeFigurePrice: null,\n      total: null,\n      details: null\n    };\n\n    this.entity.employeeId = currEmployeeId;\n  }\n\n  new(): void {\n\n    this.iniEntity();\n\n    for (let lottery of this.lotteries) {\n\n      lottery.check = false;\n    }\n\n    if (this.entityForm) {\n\n      const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n      let stop =  checkNumbers.controls.length;\n\n      for (let i = 0; i < stop; i++) {\n        checkNumbers.removeAt(0);\n      }\n\n      const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n      stop =  checkLotteries.controls.length;\n\n      for (let i = 0; i < stop; i++) {\n        checkLotteries.removeAt(0);\n      }\n    }\n\n    this.dataSource = new MatTableDataSource<any>([]);\n  }\n\n  lotteryChange(e): void {\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    let lottery = this.lotteries.find((o:any) => o.id == e.source.value);\n\n    let hastManyThreeFigures = false;\n    let hastThreeFigures = false;\n\n    let count = 0;\n    for (let obj of checkLotteries.value) {\n      if (obj.isThreeFigures) {\n        count += 1;\n\n        hastThreeFigures = true;\n\n        if (count >= 2) {\n          hastManyThreeFigures = true;\n          break;\n        }\n      }\n    }\n\n    if (e.checked) {\n      checkLotteries.push(new FormControl({id: e.source.value, isThreeFigures: lottery.isThreeFigures}));\n    }\n    else {\n\n      let i: number = 0;\n      checkLotteries.controls.forEach((item: FormControl) => {\n        if (item.value.id == e.source.value) {\n          checkLotteries.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.validateAllNumbers(lottery, hastManyThreeFigures, hastThreeFigures);\n\n  }\n\n  add(): void {\n\n    const numberControl: FormControl = this.entityForm.get('number') as FormControl;\n\n    if (this.number && this.number.toString().length > 2 && numberControl.valid) {\n\n      let isFirstThree = false;\n      let isLastThree = false;\n\n      if (this.number.toString().length == 3) {\n        isLastThree = true;\n      }\n\n      this.addCheckNumbers(this.number, isFirstThree, isLastThree );\n\n      isLastThree = false;\n\n      let hastThreeFigures = this.findThreeFigures();\n\n      if (hastThreeFigures || this.entity.lastThree) {\n\n        isLastThree = true;\n\n        if (this.number.toString().length > 3) {\n\n          this.addCheckNumbers(this.number.substring(1, this.number.length), isFirstThree, isLastThree);\n        }\n\n        isLastThree = false;\n      }\n\n      if (this.entity.firstThree) {\n\n        isFirstThree = true;\n\n        if (this.number.toString().length > 3) {\n\n          this.addCheckNumbers(this.number.substring(0, this.number.length -1), isFirstThree, isLastThree);\n        }\n      }\n\n      this.number = null;\n    }\n  }\n\n  findThreeFigures(): boolean {\n\n    let hastThreeFigures = false;\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    if (checkLotteries.value) {\n\n      for (let obj of checkLotteries.value) {\n\n        let lottery = this.lotteries.find((o: any) => o.id == obj.id);\n\n        if (lottery.isThreeFigures) {\n          hastThreeFigures = true;\n          break;\n        }\n      }\n    }\n\n    return hastThreeFigures\n  }\n\n  addCheckNumbers(number: any, isFirstThree?: any, isLastThree?: any): void {\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    checkNumbers.push(new FormControl({id: uuidv4(), number: number, isFirstThree: isFirstThree, isLastThree: isLastThree, price: this.entity.price}));\n\n    this.refreshGrid();\n  }\n\n  onDeleteCustom(row: any): void {\n\n    // if (confirm('¿Está seguro de eliminar el registro?')) {\n\n      const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n      let index = checkNumbers.value.findIndex((o:any) => o.id == row.id);\n      checkNumbers.removeAt(index);\n\n      this.dataSource = new MatTableDataSource<any>(checkNumbers.value);\n\n      this.calculateTotal();\n\n\n      let details = [];\n      let deleteDetails = [];\n\n      if (this.entity && this.entity.details && this.entity.details.length) {\n        details = this.entity.details.filter((o: any) => o.number == row.number);\n      }\n\n      for (let detail of details) {\n\n        let detailFound = deleteDetails.find((o: any) => o.lotteryId == detail.lotteryId);\n\n        if (!detailFound) {\n          deleteDetails.push(detail);\n        }\n\n      }\n\n      deleteDetails = deleteDetails.map((o: any) => { return o.id});\n\n      this.view.service.deleteOptions(this.entityDetailApi, {\n        options: {\n        where: {id: deleteDetails}\n      }})\n        .subscribe((res: any) => {\n\n        });\n    // }\n  }\n\n  getDisabled(): boolean {\n\n    let disabled = true;\n\n    if (this.number && this.number.toString().length > 2) {\n      disabled = false;\n    }\n\n    return disabled\n  }\n\n  numberOnly(event: any): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\n\n  }\n\n  beforeSaved(): boolean {\n\n    let done = true;\n\n    let currentUser = this.authService.getItem('currentUser');\n    this.entity.userId = currentUser.id;\n\n    let dbDetails = this.entity.details || [];\n\n    this.entity.details = [];\n\n    let onlyThreeFigures = true;\n    let lottery;\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    for (let obj of checkLotteries.value) {\n\n      lottery = this.lotteries.find((o: any) => o.id == obj.id);\n\n      if (!lottery.isThreeFigures) {\n        onlyThreeFigures = false;\n        break;\n      }\n    }\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    if (onlyThreeFigures) {\n\n      for (let obj of checkNumbers.value) {\n\n        if (obj.number.length > 3) {\n          alert('Solo 3 cifras ' + lottery.name);\n          done = false;\n          break;\n        }\n      }\n    }\n\n    if (done == false) {\n      return done;\n    }\n\n    for (let objl of checkLotteries.value) {\n\n      for (let obj of checkNumbers.value) {\n\n        let isFourFigure = obj.number.length == 4;\n\n        lottery = this.lotteries.find((o: any) => o.id == objl.id);\n\n        if (lottery && lottery.isThreeFigures && isFourFigure) {\n\n        }\n        else {\n\n          let currDetail: any = {\n            lotteryId: lottery.id,\n            number: obj.number,\n            price: obj.price,\n            accumulated: obj.price,\n            isFourFigure: isFourFigure,\n            isFirstThree: obj.isFirstThree,\n            isLastThree: obj.isLastThree\n          }\n\n          let detailFount = dbDetails.find((o: any) => o.lotteryId == currDetail.lotteryId && o.number == currDetail.number);\n          let index = dbDetails.findIndex((o:any) => o.lotteryId == currDetail.lotteryId && o.number == currDetail.number);\n\n          if (detailFount) {\n            currDetail.id = detailFount.id\n            dbDetails.splice(index, 1);\n          }\n          else {\n            currDetail.id = uuidv4();\n          }\n\n          this.entity.details.push(currDetail);\n        }\n      }\n    }\n\n    if (onlyThreeFigures) {\n\n      for (let obj of this.entity.details) {\n\n        if (obj.number.length > 3) {\n          alert('Solo 3 cifras ' + lottery.name);\n          done = false;\n        }\n      }\n    }\n\n    this.entity;\n    return done;\n\n  }\n\n  validateAllNumbers(lottery: any, hastManyThreeFigures: any, hastThreeFigures: any): void {\n\n    if (lottery.isThreeFigures && !this.entity.lastThree && !hastManyThreeFigures) {\n\n      const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n      if (lottery.check) {\n        if (!hastThreeFigures) {\n\n          for (let obj of checkNumbers.value) {\n\n            if (obj.number.length == 4) {\n\n              let isFirstThree = false;\n              let isLastThree = true;\n\n              this.addCheckNumbers(obj.number.substring(1, obj.number.length), isFirstThree, isLastThree);\n            }\n          }\n        }\n      } else {\n\n        for (let obj of checkNumbers.value) {\n\n          if (obj.number.length == 3 && obj.isLastThree) {\n            this.onDeleteCustom({id: obj.id});\n          }\n        }\n      }\n    }\n\n    this.calculateTotal();\n  }\n\n  refreshGrid(): void {\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    for (let obj of checkNumbers.value) {\n\n      obj.price = this.entity.price\n\n      if (obj.isFirstThree && this.entity.firstThree) {\n        obj.price = this.entity.firstThreePrice;\n      }\n\n      if (obj.isLastThree && this.entity.lastThree) {\n        obj.price = this.entity.lastThreePrice;\n      }\n    }\n\n    this.dataSource = new MatTableDataSource<any>(checkNumbers.value);\n\n    this.calculateTotal();\n  }\n\n  preventEnter(): void {\n    //let a = '' //todo validar por que cuando se da enter se esta lanzando el evento click del primero control de accion en el grid\n  }\n\n  firstThreeChange(e: any): void {\n\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    if (e.checked) {\n\n      this.entity.firstThreePrice = this.entity.price;\n      this.entityForm.get('firstThreePrice').setValidators([Validators.required]);\n\n      for (let obj of checkNumbers.value) {\n\n        if (obj.number.length == 4) {\n\n          let isFirstThree = true;\n          let isLastThree = false;\n\n          this.addCheckNumbers(obj.number.substring(0, obj.number.length - 1), isFirstThree, isLastThree);\n        }\n      }\n    }\n    else {\n\n      this.entityForm.get('firstThreePrice').clearValidators();\n\n      let fourFigures = [];\n\n      for (let obj of checkNumbers.value) {\n        if (obj.number.length == 4) {\n\n          fourFigures.push(obj);\n        }\n      }\n\n      for (let obj of fourFigures) {\n\n        let numberToFind = obj.number.substring(0, obj.number.length - 1);\n\n        let objFount = checkNumbers.value.find((o: any) => o.number == numberToFind);\n\n        this.onDeleteCustom({id: objFount.id});\n      }\n    }\n\n    this.entityForm.get('firstThreePrice').updateValueAndValidity();\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  firstThreePriceChange(): void {\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    for (let obj of checkNumbers.value) {\n\n      if (obj.number.length == 3 && obj.isFirstThree) {\n\n        obj.price = this.entity.firstThreePrice;\n      }\n    }\n\n    this.calculateTotal();\n  }\n\n  lastThreeChange(e: any): void {\n\n    let hastThreeFigures = this.findThreeFigures();\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    if (e.checked) {\n\n      this.entity.lastThreePrice = this.entity.price;\n      this.entityForm.get('lastThreePrice').setValidators([Validators.required]);\n\n      if (!hastThreeFigures) {\n\n        for (let obj of checkNumbers.value) {\n\n          if (obj.number.length == 4) {\n            let isFirstThree = false;\n            let isLastThree = true;\n\n            this.addCheckNumbers(obj.number.substring(1, obj.number.length), isFirstThree, isLastThree);\n          }\n        }\n\n      }\n    }\n    else {\n\n      this.entityForm.get('lastThreePrice').clearValidators();\n\n      if (!hastThreeFigures) {\n\n        for (let obj of checkNumbers.value) {\n\n          if (obj.number.length == 3 && obj.isLastThree) {\n            this.onDeleteCustom({id: obj.id});\n          }\n        }\n      }\n    }\n\n    this.entityForm.get('lastThreePrice').updateValueAndValidity();\n\n    this.changeDetectorRef.detectChanges();\n  }\n\n  lastThreePriceChange(): void {\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    for (let obj of checkNumbers.value) {\n\n      if (obj.number.length == 3 && obj.isLastThree) {\n\n        obj.price = this.entity.lastThreePrice;\n      }\n    }\n\n    this.calculateTotal();\n  }\n\n  chockChange(e: any): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (e.checked) {\n\n      this.entityForm.get('checkChock').setValidators([Validators.required]);\n\n      if (this.entity.price) {\n\n        this.entity.chockFourFigurePrice = this.entity.price;\n        this.entity.chockThreeFigurePrice = this.entity.price;\n\n        checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: true}));\n        checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: false}));\n      }\n    }\n    else {\n\n      this.entity.chockFourFigurePrice = null;\n      this.entity.chockThreeFigurePrice = null;\n\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        checkChock.removeAt(i);\n        i++;\n      });\n\n      this.entityForm.get('checkChock').clearValidators();\n    }\n\n    this.entityForm.get('checkChock').updateValueAndValidity();\n\n    this.calculateTotal();\n  }\n\n  chockFourFigurePriceChange(): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (this.entity.chockFourFigurePrice) {\n\n      checkChock.push(new FormControl({id: uuidv4(), ChockFourFigure: true}));\n    }\n    else {\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        if (item.value.ChockFourFigure) {\n          checkChock.removeAt(i);\n          return;\n        }\n        else {\n          checkChock.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  chockThreeFigurePriceChange(): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (this.entity.chockThreeFigurePrice) {\n\n      checkChock.push(new FormControl({id: uuidv4(), ChockFourFigure: false}));\n    }\n    else {\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        if (item.value.ChockFourFigure) {\n          checkChock.removeAt(i);\n          return;\n        }\n        else {\n          checkChock.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  // chockPriceChange(): void {\n  //   this.calculateTotal();\n  // }\n\n  combinedChange(e: any): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (e.checked) {\n\n      this.entityForm.get('checkCombined').setValidators([Validators.required]);\n\n      if (this.entity.price) {\n\n        this.entity.combinedFourFigurePrice = this.entity.price;\n        this.entity.combinedThreeFigurePrice = this.entity.price;\n\n        checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: true}));\n        checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: false}));\n      }\n    }\n    else {\n\n      this.entity.combinedFourFigurePrice = null;\n      this.entity.combinedThreeFigurePrice = null;\n\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        checkCombined.removeAt(i);\n        i++;\n      });\n\n      this.entityForm.get('checkCombined').clearValidators();\n    }\n\n    this.entityForm.get('checkCombined').updateValueAndValidity();\n\n    this.calculateTotal();\n  }\n\n  combinedFourFigurePriceChange(): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (this.entity.combinedFourFigurePrice) {\n\n      checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: true}));\n    }\n    else {\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        if (item.value.combinedFourFigure) {\n          checkCombined.removeAt(i);\n          return;\n        }\n        else {\n          checkCombined.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  combinedThreeFigurePriceChange(): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (this.entity.combinedThreeFigurePrice) {\n\n      checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: false}));\n    }\n    else {\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        if (item.value.combinedFourFigure) {\n          checkCombined.removeAt(i);\n          return;\n        }\n        else {\n          checkCombined.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  calculateTotal(): void {\n\n    this.entity.total = 0;\n    let lotteriesFour = 0;\n    let lotteriesThree = 0;\n    let NumbersFour = 0;\n    let NumbersThree = 0;\n\n    let numbersThreeFirst = 0;\n    let numbersThreeLast = 0;\n\n    let firstThreePrice = this.entity.firstThreePrice || 0;\n    let lastThreePrice = this.entity.lastThreePrice || 0;\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n     let lottery;\n\n    for (let obj of checkLotteries.value) {\n\n      lottery = this.lotteries.find((o: any) => o.id == obj.id);\n\n      if (lottery.isThreeFigures) {\n        lotteriesThree += 1;\n      }\n      else {\n        lotteriesFour += 1;\n      }\n    }\n\n    const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    for (let obj of checkNumbers.value) {\n\n      if (obj.number.length == 3) {\n\n        NumbersThree += 1;\n\n        if (obj.isFirstThree) {\n          numbersThreeFirst += 1;\n        }\n        else {\n          numbersThreeLast += 1;\n        }\n      }\n      else {\n        NumbersFour +=1;\n      }\n    }\n\n    this.entity.total = this.entity.price * NumbersFour * lotteriesFour;\n\n    if (this.entity.firstThree) {\n      this.entity.total += this.entity.firstThreePrice * numbersThreeFirst * (lotteriesFour + lotteriesThree);\n\n      if (numbersThreeLast) {\n\n        if (this.entity.lastThree) {\n          this.entity.total += this.entity.lastThreePrice * numbersThreeLast * (lotteriesFour + lotteriesThree);\n        }\n        else {\n          this.entity.total += this.entity.price * numbersThreeLast * (lotteriesFour + lotteriesThree);\n        }\n      }\n    }\n    else if (this.entity.lastThree) {\n      this.entity.total += this.entity.lastThreePrice * numbersThreeLast * (lotteriesFour + lotteriesThree);\n\n    }\n    else {\n      this.entity.total += this.entity.price * NumbersThree * (lotteriesFour + lotteriesThree) ;\n    }\n\n    if (this.entity.chock) {\n\n      if (NumbersThree) {\n        this.entity.total += this.entity.chockFourFigurePrice * NumbersFour * (lotteriesFour);\n        this.entity.total += this.entity.chockThreeFigurePrice * NumbersThree * (lotteriesFour + lotteriesThree);\n      }\n      else {\n        this.entity.total += this.entity.chockFourFigurePrice * NumbersFour * (lotteriesFour + lotteriesThree);\n      }\n\n    }\n\n\n    if (this.entity.combined) {\n\n      if (NumbersThree) {\n        this.entity.total += this.entity.combinedFourFigurePrice * NumbersFour * (lotteriesFour);\n        this.entity.total += this.entity.combinedThreeFigurePrice * NumbersThree * (lotteriesFour + lotteriesThree);\n      }\n      else {\n        this.entity.total += this.entity.combinedFourFigurePrice * NumbersFour * (lotteriesFour + lotteriesThree);\n      }\n    }\n\n\n    // if (this.entity.firstThree && this.entity.lastThree) {\n    //   this.entity.total = (this.entity.price * lotteriesFour) + (firstThreePrice * (lotteriesFour + lotteriesThree)) + (lastThreePrice * (lotteriesFour + lotteriesThree));\n    // }\n    // else if (this.entity.firstThree && !this.entity.lastThree) {\n    //   this.entity.total = (this.entity.price * lotteriesFour) + (firstThreePrice * (lotteriesFour + lotteriesThree));\n    // }\n    // else if (this.entity.lastThree && !this.entity.firstThree) {\n    //   this.entity.total = (this.entity.price * lotteriesFour) + (lastThreePrice * (lotteriesFour + lotteriesThree));\n    // }\n    // else {\n    //   this.entity.total = (this.entity.price * (lotteriesFour + lotteriesThree));\n    // }\n\n    // this.entity.total = (this.entity.price * countLotteries) + (firstThreePrice * countLotteries) + (lastThreePrice * countLotteries);\n\n    this.changeDetectorRef.detectChanges();\n\n  }\n\n  lotteryAllChange(e: any): void {\n\n    if (e.checked) {\n\n      for (let obj of this.lotteries) {\n        obj.check = true;\n\n        this.lotteryChange({source:{value: obj.id }});\n      }\n    }\n    else {\n\n      for (let obj of this.lotteries) {\n        obj.check = false;\n        this.lotteryChange({source:{value: obj.id }});\n      }\n    }\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <form [formGroup]=\"entityForm\">\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"overflow: hidden;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-form-field style=\"width: 95%\">\n                <mat-label>Seleccione Código</mat-label>\n                <mat-select matNativeControl formControlName=\"employeeId\" [(ngModel)]=\"entity.employeeId\" required>\n                  <mat-option *ngFor=\"let option of employees\" [value]=\"option.value\">\n                    {{option.text}}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('employeeId')}}</mat-error>\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-form-field>\n                <input matInput formControlName=\"total\"\n                       type = \"number\"\n                       placeholder=\"Total\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.total\"\n                       [readonly]=\"true\"\n                >\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" >\n\n              <mat-checkbox *ngFor=\"let lottery of lotteries\" [(ngModel)]=\"lottery.check\" [ngModelOptions]=\"{standalone: true}\" [value]=\"lottery.id\"\n                            (change)=\"lotteryChange($event)\" style=\"margin-right: 25px;\" [ngStyle]=\"{color: lottery.color}\">{{lottery.name}}</mat-checkbox>\n\n              <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('checkLotteries')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n<!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n                <input matInput\n                       placeholder=\"Entre number\"\n                       formControlName=\"number\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length===4) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"number\"\n                       (keyup.enter)=\"add()\"\n                >\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('number')}}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n<!--          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">-->\n<!--            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">-->\n<!--              <button mat-fab color=\"basic\" [disabled]=\"getDisabled()\" (click)=\"add()\">Add</button>-->\n<!--            </div>-->\n<!--          </div>-->\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n                <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n                <input matInput formControlName=\"price\"\n                       type = \"number\"\n                       placeholder=\"Entre Precio\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.price\"\n                       (change)=\"refreshGrid()\"\n                       required\n                >\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px; overflow: hidden;\" >\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.firstThree\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"firstThreeChange($event)\"\n                            style=\"margin-right: 10px;\">Tres primeras\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.firstThree\" style=\"width: 95%;\">\n                <input matInput formControlName=\"firstThreePrice\"\n                       type = \"number\"\n                       placeholder=\"Entre precio, tres primeras\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.firstThreePrice\"\n                       (change)=\"firstThreePriceChange()\"\n                       required\n                >\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.chock\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"chockChange($event)\"\n                            style=\"margin-right: 10px;\">Cuña\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.chock\" style=\"width: 32%;margin-right: 10px;\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Cuatro cifras, cuña\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.chockFourFigurePrice\"\n                       (change)=\"chockFourFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-form-field *ngIf=\"entity.chock\" style=\"width: 32%\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Tres cifras, cuña\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.chockThreeFigurePrice\"\n                       (change)=\"chockThreeFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-error  *ngIf=\"entity.chock && entityForm.invalid\">{{getErrorMessage('checkChock')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px; overflow: hidden;\" >\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.lastThree\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"lastThreeChange($event)\"\n                            style=\"margin-right: 10px;\">Tres Ultimas\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.lastThree\" style=\"width: 95%;\">\n                <input matInput formControlName=\"lastThreePrice\"\n                       type = \"number\"\n                       placeholder=\"Entre precio, tres ultimas\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.lastThreePrice\"\n                       (change)=\"lastThreePriceChange()\"\n                       required\n                >\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.combined\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"combinedChange($event)\"\n                            style=\"margin-right: 10px;\">Combinado\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.combined\" style=\"width: 32%;margin-right: 10px;\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Cuatro cifras, combinado\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.combinedFourFigurePrice\"\n                       (change)=\"combinedFourFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-form-field *ngIf=\"entity.combined\" style=\"width: 32%\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Tres cifras, combinado\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.combinedThreeFigurePrice\"\n                       (change)=\"combinedThreeFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-error  *ngIf=\"entity.combined && entityForm.invalid\">{{getErrorMessage('checkCombined')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-top: 10px;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                <!-- id Column -->\n<!--                <ng-container matColumnDef=\"id\">-->\n<!--                  <th mat-header-cell *matHeaderCellDef> Id </th>-->\n<!--                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>-->\n<!--                </ng-container>-->\n\n                <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n                  <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <span>{{element[column]}}</span>\n                    <button *ngIf=\"column === 'actions'\" mat-button (click)=\"preventEnter()\"></button>\n<!--                    <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n                    <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDeleteCustom(element)\"><mat-icon>delete_outline</mat-icon></button>\n                  </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n              <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('checkNumbers')}}</mat-error>\n            </div>\n          </div>\n        </form>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-fab color=\"accent\" [disabled]=\"!entityForm.valid\" (click)=\"save()\">Salvar</button>\n        <button mat-fab color=\"primary\" (click)=\"new()\">Nuevo</button>\n      </mat-card-actions>\n<!--      <mat-card-footer>-->\n<!--        <mat-tab-group>-->\n<!--          <mat-tab>-->\n<!--            <ng-template mat-tab-label>-->\n<!--              <mat-icon>monetization_on</mat-icon>-->\n<!--              Employees-->\n<!--            </ng-template>-->\n<!--            <ng-template matTabContent>-->\n<!--              <div>-->\n<!--                <div>-->\n<!--&lt;!&ndash;                  <app-employees [loadChange]=\"loadEmployees\"></app-employees>&ndash;&gt;-->\n<!--                </div>-->\n<!--              </div>-->\n<!--            </ng-template>-->\n<!--          </mat-tab>-->\n<!--        </mat-tab-group>-->\n<!--      </mat-card-footer>-->\n    </mat-card>\n  </div>\n</div>\n\n\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {FormArray, FormBuilder, FormControl, FormGroup, ValidationErrors, Validators} from '@angular/forms';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {BaseEditView} from '../../baseEditView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport { v4 as uuidv4 } from 'uuid';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-bet2',\n  templateUrl: './bet2.component.html'\n})\nexport class Bet2Component extends BaseEditView implements OnInit {\n\n  entityApi = 'bets';\n  entityDetailApi = 'details';\n  entityApiEmployees = 'employees';\n  entityApiLotteries = 'lotteries';\n  entityNumbers = 'numbers';\n\n  title: any;\n  subtitle: any;\n  entity: any;\n\n  entityForm: FormGroup;\n\n  employees = [];\n  lotteries = [];\n\n  number = null;\n\n  dataSource: MatTableDataSource<any>;\n  displayedColumns: string[] = ['number', 'price', 'actions'];\n\n  // settingNumber: any = {field: 'number', ValidationError: 'forbidden', options: {\n  //     query: {\n  //       table: 'vw_forbiddenNumbers'\n  //     },\n  //     where: {\n  //       isActive: true\n  //     }\n  //   }}\n\n  forbiddenNumbers: any[] = [];\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private _snackBar: MatSnackBar) {\n    super();\n  }\n\n\n  ngOnInit(): void {\n\n    // this.title = 'Apuesta - [EN PRUEBA]';\n    this.title = 'Apuesta';\n    this.subtitle = 'Apuesta';\n\n    this.iniEntity();\n\n    super.init(this);\n\n    this.route.params.subscribe((params) => {\n\n      this.service.getSelect(this.entityApiEmployees, {value: 'id', text: 'code', options: {order:[['code', 'asc']]}})\n        .subscribe((res: any) => {\n          this.employees = res;\n        });\n\n      let d = new Date();\n      let n = d.getDay();\n\n      let dayName = '';\n\n      switch (n) {\n        case 0:\n          dayName = 'sunday';\n          break;\n        case 1:\n          dayName = 'monday';\n          break;\n        case 2:\n          dayName = 'tuesday';\n          break;\n        case 3:\n          dayName = 'wednesday';\n          break;\n        case 4:\n          dayName = 'thursday';\n          break;\n        case 5:\n          dayName = 'friday';\n          break;\n        case 6:\n          dayName = 'saturday';\n          break;\n      }\n\n      let tasks = 0;\n      let totalTasks = 0;\n\n      let processTasks = () => {\n        tasks++\n\n        let lotteriesDetail = []\n        if (tasks == totalTasks) {\n\n          if (this.entity && this.entity.details && this.entity.details.length) {\n\n            for (let detail of this.entity.details) {\n\n              let lotteryFound = lotteriesDetail.find((o:any) => o.id == detail.lotteryId);\n\n              if (!lotteryFound){\n                lotteriesDetail.push(detail.lottery);\n              }\n            }\n\n            const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n            for (let lotteryDetail of lotteriesDetail) {\n\n              let lotteryFound = this.lotteries.find((o:any) => o.id == lotteryDetail.id);\n\n              if (lotteryFound){\n                lotteryFound.check = true;\n                // this.lotteryChange({checked: true, source:{value: lotteryFound.id }})\n\n                checkLotteries.push(new FormControl({id: lotteryFound.id, isThreeFigures: lotteryFound.isThreeFigures}));\n              }\n            }\n\n          }\n\n          this.entity.details.sort(this.compare);\n          this.calculateTotal();\n        }\n      }\n\n      totalTasks ++\n      this.service.get(this.entityNumbers, {query: {\n          table: 'vw_forbiddenNumbers'\n        },\n        options: {\n          where: {\n            isActive: true\n          }\n        }})\n        .subscribe((res: any) => {\n\n          this.forbiddenNumbers = res.rows;\n\n          processTasks();\n        });\n\n      totalTasks ++\n      this.service.get(this.entityApiLotteries, {options: { where:{play: { $like: '%'+ dayName +'%' }}, order:[['name', 'asc']]}})\n        .subscribe((res: any) => {\n\n          let enumLotteryTemporality = [\n            {\n              value: 'morning', color: 'green'\n            },\n            {\n              value: 'afternoon', color: 'crimson'\n            },\n            {\n              value: 'night', color: 'blue'\n            },\n            {\n              value: null, color: 'Ninguna'\n            }\n          ];\n\n          let currLotteries = res;\n\n          for (let temp of enumLotteryTemporality) {\n\n            let lotteriesFount = currLotteries.filter((o: any) => o.temporality == temp.value);\n\n            for (let lottery of lotteriesFount) {\n              lottery.color = temp.color;\n              this.lotteries.push(lottery);\n            }\n          }\n\n          processTasks();\n        });\n\n      if (params && params.betId) {\n\n        totalTasks ++;\n\n        this.configFormGroup(params.betId);\n\n        super.getEntity(params.betId, {options: {\n            include: [{association: 'details', include: [{association: 'lottery'}]}\n              , {association: 'employee'}, ]\n          }}).subscribe(() => {\n\n          processTasks();\n        });\n      }\n      else {\n        this.configFormGroup();\n      }\n    });\n  }\n\n  configFormGroup = (entityId?:any) => {\n\n    // if (entityId) {\n    //\n    //   setting.options = {\n    //     where: {\n    //       id: { $ne: entityId }\n    //     }\n    //   }\n    // }\n\n    this.entityForm = new FormGroup({\n      employeeId: new FormControl('', [Validators.required]),\n      checkLotteries: this.fb.array([], [Validators.required]),\n      // number: new FormControl('', null,\n      //   [this.service.takenValidator(this.entityNumbers, this.settingNumber)]),\n      number: new FormControl(''),\n      total: new FormControl(''),\n      price: new FormControl('', [Validators.required]),\n      firstThreePrice: new FormControl(''),\n      lastThreePrice: new FormControl(''),\n      checkChock: this.fb.array([]),\n      checkCombined: this.fb.array([]),\n      checkNumbers: this.fb.array([], [Validators.required])\n\n      // // chockPrice: new FormControl(''),\n      //\n      //\n      // // combinedFourFigurePrice: new FormControl(''),\n      // combinedThreeFigurePrice: new FormControl(''),\n\n    });\n  }\n\n  iniEntity(): void {\n\n    let currEmployeeId = null;\n\n    if (this.entity && this.entity.employeeId) {\n      currEmployeeId = this.entity.employeeId;\n    }\n\n    let currentUser = this.authService.getItem('currentUser');\n\n    this.entity = {\n      employeeId: null,\n      userId: currentUser.id,\n      price: null,\n      firstThree: false,\n      firstThreePrice: null,\n      lastThree: false,\n      lastThreePrice: null,\n      chock: false,\n      chockFourFigurePrice: null,\n      chockThreeFigurePrice: null,\n      // chockPrice: null,\n      combined: false,\n      combinedFourFigurePrice: null,\n      combinedThreeFigurePrice: null,\n      total: null,\n      details: []\n    };\n\n    this.entity.employeeId = currEmployeeId;\n  }\n\n  compare(a, b) {\n    // Use toUpperCase() to ignore character casing\n    const bandA = a.lotteryId;\n    const bandB = b.lotteryId;\n\n    let comparison = 0;\n    if (bandA > bandB) {\n      comparison = 1;\n    } else if (bandA < bandB) {\n      comparison = -1;\n    }\n    return comparison;\n  }\n\n  getName(lotteryId: any) {\n\n    let lottery = this.lotteries.find((o: any) => o.id == lotteryId);\n\n    return lottery ? lottery.name : '';\n  }\n\n  numberOnly(event: any): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\n\n  }\n\n  preventEnter(): void {\n    //let a = '' //todo validar por que cuando se da enter se esta lanzando el evento click del primero control de accion en el grid\n  }\n\n  lotteryChange(e): void {\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    let lottery = this.lotteries.find((o: any) => o.id == e.source.value);\n\n    let hastManyThreeFigures = false;\n    let hastThreeFigures = false;\n\n    if (e.checked) {\n\n      checkLotteries.push(new FormControl({id: e.source.value, isThreeFigures: lottery.isThreeFigures}));\n\n      let count = 0;\n      for (let obj of checkLotteries.value) {\n\n        if (obj.isThreeFigures) {\n          count += 1;\n\n          hastThreeFigures = true;\n\n          if (count >= 2) {\n            hastManyThreeFigures = true;\n            break;\n          }\n        }\n      }\n\n      let newDetails = [];\n\n      let getNewDetail = (detail: any, lottery: any) => {\n\n        let newDetail = JSON.parse(JSON.stringify(detail));\n\n        newDetail.number = newDetail.number.substring(1, detail.number.length);\n        newDetail.lotteryId = lottery.id;\n        newDetail.isFourFigure = false;\n        newDetail.isLastThree = true;\n\n        return newDetail;\n      }\n\n      let currNumbers = this.entity.details.filter((o: any) => o.lotteryId == this.entity.details[0].lotteryId || !o.lotteryId );\n\n      let hasCurrNumbersThreeFigures = false;\n      for (let detail of this.entity.details) {\n\n        if (detail.number.length > 3) {\n          hasCurrNumbersThreeFigures = false;\n        }\n      }\n\n      for (let detail of currNumbers) {\n\n        if (detail.number.length == 3) {\n\n          if (!detail.isFirstThree) {\n            detail.isLastThree = true;\n          }\n\n          if (!detail.lotteryId) {\n            detail.lotteryId = lottery.id;\n          }\n          else {\n            let newDetail = JSON.parse(JSON.stringify(detail));\n\n            newDetail.lotteryId = lottery.id;\n            newDetail.isFourFigure = false;\n\n            newDetails.push(newDetail);\n          }\n        }\n        else {\n          if (!detail.lotteryId && !lottery.isThreeFigures) {\n            detail.lotteryId = lottery.id;\n\n            let currLotteryNumbers = this.lotteries.find((o: any) => o.id == this.entity.details[0].lotteryId);\n\n            if (hastThreeFigures && !currLotteryNumbers.isThreeFigures) {\n\n              newDetails.push(getNewDetail(detail, lottery));\n            }\n          }\n          else if (!detail.lotteryId && lottery.isThreeFigures) {\n\n            newDetails.push(getNewDetail(detail, lottery));\n          }\n          else {\n\n            if (lottery.isThreeFigures) {\n\n              if (!hastManyThreeFigures && !this.entity.lastThree) {\n\n                for (let obj of checkLotteries.value) {\n\n                  if (!obj.isThreeFigures && detail.number.length > 3) {\n\n                    newDetails.push(getNewDetail(detail, obj));\n                  }\n                }\n\n                newDetails.push(getNewDetail(detail, lottery));\n              }\n            }\n            else {\n              let newDetail = JSON.parse(JSON.stringify(detail));\n              newDetail.lotteryId = lottery.id;\n\n              if (newDetail.number.length == 3) {\n                newDetail.isFourFigure = false;\n              }\n              else {\n                newDetail.isFourFigure = true;\n              }\n\n              newDetails.push(newDetail);\n            }\n          }\n        }\n      }\n\n      this.entity.details = this.entity.details.concat(newDetails);\n\n    } else {\n\n      let count = 0;\n      for (let obj of checkLotteries.value) {\n\n        if (obj.isThreeFigures) {\n          count += 1;\n\n          hastThreeFigures = true;\n\n          if (count >= 2) {\n            hastManyThreeFigures = true;\n            break;\n          }\n        }\n      }\n\n      let i: number = 0;\n      checkLotteries.controls.forEach((item: FormControl) => {\n        if (item.value.id == e.source.value) {\n          checkLotteries.removeAt(i);\n          return;\n        }\n        i++;\n      });\n\n      let removeValFromIndex = [];\n\n      for (let i = 0; i < this.entity.details.length; i++) {\n\n        let detail = this.entity.details[i];\n\n        if (detail.lotteryId == lottery.id) {\n          removeValFromIndex.push(i);\n        }\n\n        if (lottery.isThreeFigures && !this.entity.lastThree && !hastManyThreeFigures) {\n          if (detail.lotteryId != lottery.id && detail.isLastThree) {\n            removeValFromIndex.push(i);\n          }\n        }\n      }\n\n      this.onDeleteCustom(removeValFromIndex);\n    }\n\n    this.entity.details.sort(this.compare);\n    this.calculateTotal();\n  }\n\n  add(): void {\n\n    const numberControl: FormControl = this.entityForm.get('number') as FormControl;\n\n    if (this.number && this.number.toString().length > 2 && numberControl.valid) {\n\n      const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n      let hastManyThreeFigures = false;\n      let hastThreeFigures = false;\n      let hastFourFigures = false;\n\n      let count = 0;\n      for (let obj of checkLotteries.value) {\n\n        if (obj.isThreeFigures) {\n          count += 1;\n\n          hastThreeFigures = true;\n\n          if (count >= 2) {\n            hastManyThreeFigures = true;\n            break;\n          }\n        }\n      }\n\n      for (let obj of checkLotteries.value) {\n\n        if (!obj.isThreeFigures) {\n          hastFourFigures = true;\n          break;\n        }\n      }\n\n      let isFourFigure = false;\n\n      if (this.number.toString().length == 4) {\n        isFourFigure = true;\n      }\n\n      if (!hastFourFigures && hastThreeFigures && isFourFigure) {\n        let currDetail: any = {\n          number: this.number,\n          price: this.entity.price,\n          accumulated: this.entity.price,\n          isFourFigure: isFourFigure,\n        }\n\n        this.entity.details.push(currDetail)\n      }\n\n      if (checkLotteries.value.length) {\n\n        for (let obj of checkLotteries.value) {\n\n          let currDetail: any = {\n            lotteryId: obj.id,\n            isFourFigure: isFourFigure,\n            price: this.entity.price,\n            accumulated: this.entity.price,\n          }\n\n          if (!isFourFigure) {\n            currDetail.isLastThree = true\n          }\n\n          if (obj.isThreeFigures) {\n\n            currDetail.isLastThree = true\n\n            if (this.number.length > 3) {\n              currDetail.isFourFigure = false;\n              currDetail.number = this.number.substring(1, this.number.length);\n            }\n            else {\n              currDetail.number = this.number;\n            }\n          }\n          else {\n            currDetail.number = this.number;\n\n            if (hastThreeFigures && this.number.length > 3) {\n\n              let newDetail = JSON.parse(JSON.stringify(currDetail));\n\n              newDetail.isFourFigure = false;\n              newDetail.isLastThree = true\n              newDetail.number = this.number.substring(1, this.number.length);\n\n              if (this.entity.lastThree) {\n                newDetail.price = this.entity.lastThreePrice;\n                newDetail.accumulated = this.entity.lastThreePrice;\n              }\n\n              this.entity.details.push(newDetail);\n            }\n          }\n\n          if ((currDetail.number.length == 3 && hastThreeFigures) || (currDetail.number.length == 3 && this.entity.lastThree)) {\n          // if ((currDetail.number.length == 3)) {\n            currDetail.isLastThree = true\n\n            if (this.entity.lastThree) {\n              currDetail.price = this.entity.lastThreePrice;\n              currDetail.accumulated = this.entity.lastThreePrice;\n            }\n          }\n\n          this.entity.details.push(currDetail);\n\n          if (this.entity.firstThree) {\n\n            if (this.number.toString().length > 3) {\n\n              let currDetail: any = {\n                lotteryId: obj.id,\n                number: this.number.substring(0, this.number.length -1),\n                price: this.entity.firstThreePrice,\n                accumulated: this.entity.firstThreePrice,\n                isFourFigure: false,\n                isFirstThree: true,\n              }\n\n              this.entity.details.push(currDetail);\n            }\n          }\n\n          if (this.entity.lastThree && !hastThreeFigures) {\n\n            if (this.number.toString().length > 3) {\n\n              let currDetail: any = {\n                lotteryId: obj.id,\n                number: this.number.substring(1, this.number.length),\n                price: this.entity.lastThreePrice,\n                accumulated: this.entity.lastThreePrice,\n                isFourFigure: false,\n                isLastThree: true,\n              }\n\n              this.entity.details.push(currDetail);\n            }\n          }\n        }\n      }\n      else {\n\n        let currDetail: any = {\n          number: this.number,\n          price: this.entity.price,\n          accumulated: this.entity.price,\n          isFourFigure: isFourFigure,\n        }\n\n        if (!isFourFigure) {\n          currDetail.isLastThree = true\n        }\n\n        // if (this.number.length == 3) {\n        if (this.number.length == 3 && this.entity.lastThree) {\n          currDetail.isLastThree = true;\n\n          if (this.entity.lastThree) {\n            currDetail.price = this.entity.lastThreePrice;\n            currDetail.accumulated = this.entity.lastThreePrice;\n          }\n        }\n\n        this.entity.details.push(currDetail);\n\n        if (this.entity.firstThree) {\n\n          if (this.number.toString().length > 3) {\n\n            let currDetail: any = {\n              number: this.number.substring(0, this.number.length -1),\n              price: this.entity.firstThreePrice,\n              accumulated: this.entity.firstThreePrice,\n              isFourFigure: false,\n              isFirstThree: true,\n              isLastThree: false\n            }\n\n            this.entity.details.push(currDetail);\n          }\n        }\n\n        if (this.entity.lastThree) {\n\n          if (this.number.toString().length > 3) {\n\n            let currDetail: any = {\n              number: this.number.substring(1, this.number.length),\n              price: this.entity.lastThreePrice,\n              accumulated: this.entity.lastThreePrice,\n              isFourFigure: false,\n              isLastThree: true,\n              isFirstThree: false\n            }\n\n            this.entity.details.push(currDetail);\n          }\n        }\n      }\n    }\n\n    this.number = null;\n    this.entity.details.sort(this.compare);\n    this.calculateTotal();\n  }\n\n  onDeleteCustomGrid(row: any): void {\n\n    let removeValFromIndex = [];\n    let numbersFound = [];\n\n    for (let i = 0; i < this.entity.details.length; i++) {\n\n      let detail = this.entity.details[i];\n\n      if (detail.number == row.number) {\n\n        let numberFound = numbersFound.find((o: any) => o.number == detail.number && o.lotteryId == detail.lotteryId);\n\n        if (!numberFound) {\n          numbersFound.push(detail);\n          removeValFromIndex.push(i);\n        }\n      }\n    }\n\n    this.onDeleteCustom(removeValFromIndex);\n  }\n\n  onDeleteCustom(removeValFromIndex: any): void {\n\n    let deleteIds = [];\n\n    for (let i = removeValFromIndex.length - 1; i >= 0; i--) {\n\n      let detail = this.entity.details[removeValFromIndex[i]];\n\n      if (detail.id) {\n        deleteIds.push(detail.id);\n      }\n\n      this.entity.details.splice(removeValFromIndex[i], 1);\n    }\n\n    if (deleteIds.length) {\n\n      this.view.service.deleteOptions(this.entityDetailApi, {\n        options: {\n          where: {id: deleteIds}\n        }})\n        .subscribe((res: any) => {\n\n          this.entity.details.sort(this.compare);\n          this.calculateTotal();\n\n          if (!this.entity.details.length) {\n\n            const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n            let stop =  checkNumbers.controls.length;\n\n            for (let i = 0; i < stop; i++) {\n              checkNumbers.removeAt(0);\n            }\n          }\n\n          this.view.service.save(this.view.entityApi, {\n            id: this.entity.id,\n            employeeId: this.entity.employeeId,\n            userId: this.entity.userId,\n            price: this.entity.price,\n            firstThree: this.entity.firstThree,\n            firstThreePrice: this.entity.firstThreePrice,\n            lastThree: this.entity.lastThree,\n            lastThreePrice: this.entity.lastThreePrice,\n            chock: this.entity.chock,\n            chockFourFigurePrice: this.entity.chockFourFigurePrice,\n            chockThreeFigurePrice: this.entity.chockThreeFigurePrice,\n            combined: this.entity.combined,\n            combinedFourFigurePrice: this.entity.combinedFourFigurePrice,\n            combinedThreeFigurePrice: this.entity.combinedThreeFigurePrice,\n            total:  this.entity.total,\n          }).subscribe((entityRes) => {\n\n            this.entity = entityRes ? entityRes : this.entity;\n\n            if (this.view._snackBar) {\n              this.view._snackBar.open('Salvo', 'Correctamente', {\n                duration: 2000,\n              });\n            }\n          });\n        });\n    }\n    else {\n      this.entity.details.sort(this.compare);\n      this.calculateTotal();\n\n      if (!this.entity.details.length) {\n\n        const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n        let stop =  checkNumbers.controls.length;\n\n        for (let i = 0; i < stop; i++) {\n          checkNumbers.removeAt(0);\n        }\n      }\n    }\n  }\n\n  beforeSaved(): boolean {\n\n    let done = true;\n\n    let onlyThreeFigures = true;\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    for (let obj of checkLotteries.value) {\n\n      let lottery = this.lotteries.find((o: any) => o.id == obj.id);\n\n      if (!lottery.isThreeFigures) {\n        onlyThreeFigures = false;\n        break;\n      }\n    }\n\n    if (onlyThreeFigures) {\n\n      for (let detail of this.entity.details) {\n\n        if (detail.number.length > 3) {\n          alert('Solo 3 cifras en las loterias seleccionadas');\n          done = false;\n        }\n      }\n    }\n\n    for (let detail of this.entity.details) {\n\n      let forbiddenFound = this.forbiddenNumbers.find((o: any) => o.number == detail.number && o.lotteryId == detail.lotteryId);\n\n      if (forbiddenFound) {\n        alert('El Número: ' + forbiddenFound.number + '; prohibido en ' + forbiddenFound.lotteryName);\n        done = false;\n      }\n    }\n\n    return done;\n  }\n\n  changePrice() {\n\n    for (let detail of this.entity.details) {\n\n      if (this.entity.firstThree && detail.isFirstThree) {\n        detail.price = this.entity.firstThreePrice\n        detail.accumulated = this.entity.firstThreePrice\n      }\n      else if (this.entity.lastThree && detail.isLastThree) {\n        detail.price = this.entity.lastThreePrice\n        detail.accumulated = this.entity.lastThreePrice\n      }\n      else {\n        detail.price = this.entity.price;\n        detail.accumulated = this.entity.price;\n      }\n    }\n\n    this.calculateTotal();\n  }\n\n  calculateTotal(): void {\n\n    if (this.entity.details.length) {\n      const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n      if (!checkNumbers.value.length) {\n        checkNumbers.push(new FormControl({id: uuidv4()}));\n      }\n    }\n\n    this.entity.total = 0;\n\n    let NumbersThree = 0;\n    let NumbersFour = 0;\n\n    let hasFourFigure = false;\n    let lotteryFourFigureId;\n\n    let hasThreeFigure = false;\n    let lotteryThreeFigureId;\n\n    for(let detail of this.entity.details) {\n      this.entity.total += detail.price;\n\n      if (detail.number.length == 3) {\n        NumbersThree++\n\n        if (!hasThreeFigure) {\n          hasThreeFigure = true;\n          lotteryThreeFigureId = detail.lotteryId;\n        }\n      }\n      else {\n        NumbersFour++\n\n        if (!hasFourFigure) {\n          hasFourFigure = true;\n          lotteryFourFigureId = detail.lotteryId;\n        }\n      }\n    }\n\n    if (this.entity.chock) {\n\n      if (NumbersThree) {\n        this.entity.total += this.entity.chockFourFigurePrice * NumbersFour;\n        this.entity.total += this.entity.chockThreeFigurePrice * NumbersThree;\n      }\n      else {\n        this.entity.total += this.entity.chockFourFigurePrice * NumbersFour;\n      }\n\n    }\n\n    if (this.entity.combined) {\n\n      if (NumbersThree) {\n        this.entity.total += this.entity.combinedFourFigurePrice * NumbersFour;\n        this.entity.total += this.entity.combinedThreeFigurePrice * NumbersThree;\n      }\n      else {\n        this.entity.total += this.entity.combinedFourFigurePrice * NumbersFour;\n      }\n    }\n\n    let data = [];\n\n    if (this.entity.details.length) {\n\n      if (hasFourFigure) {\n\n        if (lotteryFourFigureId) {\n          data = this.entity.details.filter((o: any) => o.lotteryId == lotteryFourFigureId);\n        }\n        else if (!lotteryThreeFigureId) {\n          data = this.entity.details.filter((o: any) => o.lotteryId == lotteryFourFigureId);\n        }\n        else {\n          data = this.entity.details.filter((o: any) => o.lotteryId == lotteryThreeFigureId || o.lotteryId == lotteryFourFigureId);\n        }\n      }\n      else {\n          data = this.entity.details.filter((o: any) => o.lotteryId == lotteryThreeFigureId);\n      }\n    }\n\n    this.dataSource = new MatTableDataSource<any>(data);\n\n  }\n\n  firstThreeChange(e: any): void {\n\n    // const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    if (e.checked) {\n\n      this.entityForm.get('firstThreePrice').setValidators([Validators.required]);\n\n      const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n      this.entity.firstThreePrice = this.entity.price;\n\n      let newDetails = [];\n      let currDetails = JSON.parse(JSON.stringify(this.entity.details));\n\n      let lotteryFourFigureId = null;\n\n      for (let detail of currDetails) {\n\n        if (detail.number.length == 4) {\n\n          let newDetail = JSON.parse(JSON.stringify(detail));\n\n          newDetail.isFourFigure = false;\n          newDetail.isLastThree = false;\n          newDetail.isFirstThree = true;\n          newDetail.number = newDetail.number.substring(0, newDetail.number.length - 1);\n\n          newDetails.push(newDetail);\n\n          if (!lotteryFourFigureId) {\n            lotteryFourFigureId = detail.lotteryId;\n          }\n        }\n      }\n\n      if (lotteryFourFigureId) {\n\n        let addToThreeFigure = this.entity.details.filter((o:any) => o.lotteryId == lotteryFourFigureId && o.number.length > 3);\n\n        for (let detail of addToThreeFigure) {\n\n          for (let obj of checkLotteries.value) {\n\n            if (obj.isThreeFigures) {\n              let newDetail = JSON.parse(JSON.stringify(detail));\n\n              newDetail.isFourFigure = false;\n              newDetail.isLastThree = false;\n              newDetail.isFirstThree = true;\n              newDetail.lotteryId = obj.id;\n              newDetail.number = newDetail.number.substring(0, newDetail.number.length - 1);\n\n              newDetails.push(newDetail);\n            }\n          }\n        }\n      }\n\n      this.entity.details = this.entity.details.concat(newDetails);\n    }\n    else {\n\n      this.entityForm.get('firstThreePrice').clearValidators();\n\n      let removeValFromIndex = [];\n\n      for (let i = 0; i < this.entity.details.length; i++) {\n\n        let detail = this.entity.details[i];\n\n        if (detail.isFirstThree) {\n          removeValFromIndex.push(i);\n        }\n      }\n\n      this.onDeleteCustom(removeValFromIndex);\n    }\n\n    this.entityForm.get('firstThreePrice').updateValueAndValidity();\n\n    this.entity.details.sort(this.compare);\n    this.calculateTotal();\n    // this.changeDetectorRef.detectChanges();\n  }\n\n  firstThreePriceChange(): void {\n\n    // const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n    for (let detail of this.entity.details) {\n\n      if (detail.number.length == 3 && detail.isFirstThree) {\n\n        detail.price = this.entity.firstThreePrice;\n        detail.accumulated = this.entity.firstThreePrice;\n      }\n    }\n\n    this.calculateTotal();\n  }\n\n  lastThreeChange(e: any): void {\n\n    const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n    let hastThreeFigures = false;\n    let hastManyThreeFigures = false;\n\n    let count = 0;\n    for (let obj of checkLotteries.value) {\n\n      if (obj.isThreeFigures) {\n        count += 1;\n\n        hastThreeFigures = true;\n\n        if (count >= 2) {\n          hastManyThreeFigures = true;\n          break;\n        }\n      }\n    }\n\n    if (e.checked) {\n\n      this.entity.lastThreePrice = this.entity.price;\n      this.entityForm.get('lastThreePrice').setValidators([Validators.required]);\n\n      if (!hastThreeFigures) {\n\n        let newDetails = [];\n        let currDetails = JSON.parse(JSON.stringify(this.entity.details));\n\n        for (let detail of currDetails) {\n\n          if (detail.number.length == 4) {\n\n            let newDetail = JSON.parse(JSON.stringify(detail));\n\n            newDetail.isFourFigure = false;\n            newDetail.isLastThree = true;\n            newDetail.isFirstThree = false;\n            newDetail.number = newDetail.number.substring(1, newDetail.number.length);\n\n            newDetails.push(newDetail);\n          }\n        }\n\n        this.entity.details = this.entity.details.concat(newDetails);\n\n      }\n    }\n    else {\n\n      this.entityForm.get('lastThreePrice').clearValidators();\n\n      if (!hastThreeFigures) {\n\n        let removeValFromIndex = [];\n\n        for (let i = 0; i < this.entity.details.length; i++) {\n\n          let detail = this.entity.details[i];\n\n          if (detail.isLastThree) {\n            removeValFromIndex.push(i);\n          }\n        }\n\n        this.onDeleteCustom(removeValFromIndex);\n      }\n    }\n\n    this.entityForm.get('lastThreePrice').updateValueAndValidity();\n\n    this.entity.details.sort(this.compare);\n    this.calculateTotal();\n  }\n\n  lastThreePriceChange(): void {\n\n    for (let detail of this.entity.details) {\n\n      if (detail.number.length == 3 && detail.isLastThree) {\n\n        detail.price = this.entity.lastThreePrice;\n        detail.accumulated = this.entity.lastThreePrice;\n      }\n    }\n\n    this.calculateTotal();\n\n  }\n\n  chockChange(e: any): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (e.checked) {\n\n      this.entityForm.get('checkChock').setValidators([Validators.required]);\n\n      if (this.entity.price) {\n\n        this.entity.chockFourFigurePrice = this.entity.price;\n        this.entity.chockThreeFigurePrice = this.entity.price;\n\n        checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: true}));\n        checkChock.push(new FormControl({id: uuidv4(), chockFourFigure: false}));\n      }\n    }\n    else {\n\n      this.entity.chockFourFigurePrice = null;\n      this.entity.chockThreeFigurePrice = null;\n\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        checkChock.removeAt(i);\n        i++;\n      });\n\n      this.entityForm.get('checkChock').clearValidators();\n    }\n\n    this.entityForm.get('checkChock').updateValueAndValidity();\n\n    this.calculateTotal();\n  }\n\n  chockFourFigurePriceChange(): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (this.entity.chockFourFigurePrice) {\n\n      checkChock.push(new FormControl({id: uuidv4(), ChockFourFigure: true}));\n    }\n    else {\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        if (item.value.ChockFourFigure) {\n          checkChock.removeAt(i);\n          return;\n        }\n        else {\n          checkChock.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  chockThreeFigurePriceChange(): void {\n\n    const checkChock: FormArray = this.entityForm.get('checkChock') as FormArray;\n\n    if (this.entity.chockThreeFigurePrice) {\n\n      checkChock.push(new FormControl({id: uuidv4(), ChockFourFigure: false}));\n    }\n    else {\n      let i: number = 0;\n      checkChock.controls.forEach((item: FormControl) => {\n        if (item.value.ChockFourFigure) {\n          checkChock.removeAt(i);\n          return;\n        }\n        else {\n          checkChock.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  combinedChange(e: any): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (e.checked) {\n\n      this.entityForm.get('checkCombined').setValidators([Validators.required]);\n\n      if (this.entity.price) {\n\n        this.entity.combinedFourFigurePrice = this.entity.price;\n        this.entity.combinedThreeFigurePrice = this.entity.price;\n\n        checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: true}));\n        checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: false}));\n      }\n    }\n    else {\n\n      this.entity.combinedFourFigurePrice = null;\n      this.entity.combinedThreeFigurePrice = null;\n\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        checkCombined.removeAt(i);\n        i++;\n      });\n\n      this.entityForm.get('checkCombined').clearValidators();\n    }\n\n    this.entityForm.get('checkCombined').updateValueAndValidity();\n\n    this.calculateTotal();\n  }\n\n  combinedFourFigurePriceChange(): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (this.entity.combinedFourFigurePrice) {\n\n      checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: true}));\n    }\n    else {\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        if (item.value.combinedFourFigure) {\n          checkCombined.removeAt(i);\n          return;\n        }\n        else {\n          checkCombined.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  combinedThreeFigurePriceChange(): void {\n\n    const checkCombined: FormArray = this.entityForm.get('checkCombined') as FormArray;\n\n    if (this.entity.combinedThreeFigurePrice) {\n\n      checkCombined.push(new FormControl({id: uuidv4(), combinedFourFigure: false}));\n    }\n    else {\n      let i: number = 0;\n      checkCombined.controls.forEach((item: FormControl) => {\n        if (item.value.combinedFourFigure) {\n          checkCombined.removeAt(i);\n          return;\n        }\n        else {\n          checkCombined.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    this.calculateTotal();\n  }\n\n  new(): void {\n\n    this.iniEntity();\n\n    this.number = null;\n\n    for (let lottery of this.lotteries) {\n\n      lottery.check = false;\n    }\n\n    if (this.entityForm) {\n\n      const checkNumbers: FormArray = this.entityForm.get('checkNumbers') as FormArray;\n\n      let stop =  checkNumbers.controls.length;\n\n      for (let i = 0; i < stop; i++) {\n        checkNumbers.removeAt(0);\n      }\n\n      const checkLotteries: FormArray = this.entityForm.get('checkLotteries') as FormArray;\n\n      stop =  checkLotteries.controls.length;\n\n      for (let i = 0; i < stop; i++) {\n        checkLotteries.removeAt(0);\n      }\n    }\n\n    this.dataSource = new MatTableDataSource<any>([]);\n\n    // this.router.navigate(['/bet2']);\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <form [formGroup]=\"entityForm\">\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"overflow: hidden;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-form-field style=\"width: 95%\">\n                <mat-label>Seleccione Código</mat-label>\n                <mat-select matNativeControl formControlName=\"employeeId\" [(ngModel)]=\"entity.employeeId\" required>\n                  <mat-option *ngFor=\"let option of employees\" [value]=\"option.value\">\n                    {{option.text}}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('employeeId')}}</mat-error>\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-form-field>\n                <input matInput formControlName=\"total\"\n                       type = \"number\"\n                       placeholder=\"Total\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.total\"\n                       [readonly]=\"true\"\n                >\n              </mat-form-field>\n            </div>\n          </div>\n<!--          style=\"height: 70px;\"-->\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" >\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" >\n\n              <mat-checkbox *ngFor=\"let lottery of lotteries\" [(ngModel)]=\"lottery.check\" [ngModelOptions]=\"{standalone: true}\" [value]=\"lottery.id\"\n                            (change)=\"lotteryChange($event)\" style=\"margin-right: 25px;\" [ngStyle]=\"{color: lottery.color}\">{{lottery.name}}</mat-checkbox>\n\n              <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('checkLotteries')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n                <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n                <input matInput\n                       placeholder=\"Entre number\"\n                       formControlName=\"number\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length===4) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"number\"\n                       (keyup.enter)=\"add()\"\n                >\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('number')}}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n                <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n                <!--                (change)=\"refreshGrid()\"-->\n                <input matInput formControlName=\"price\"\n                       type = \"number\"\n                       placeholder=\"Entre Precio\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.price\"\n                       required\n                       (change)=\"changePrice()\"\n                >\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px; overflow: hidden;\" >\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.firstThree\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"firstThreeChange($event)\"\n                            style=\"margin-right: 10px;\">Tres primeras\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.firstThree\" style=\"width: 77%;\">\n                <input matInput formControlName=\"firstThreePrice\"\n                       type = \"number\"\n                       placeholder=\"Entre precio, tres primeras\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.firstThreePrice\"\n                       (change)=\"firstThreePriceChange()\"\n                       required\n                >\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.chock\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"chockChange($event)\"\n                            style=\"margin-right: 10px;\">Cuña\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.chock\" style=\"width: 32%;margin-right: 10px;\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Cuatro cifras, cuña\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.chockFourFigurePrice\"\n                       (change)=\"chockFourFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-form-field *ngIf=\"entity.chock\" style=\"width: 32%\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Tres cifras, cuña\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.chockThreeFigurePrice\"\n                       (change)=\"chockThreeFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-error  *ngIf=\"entity.chock && entityForm.invalid\">{{getErrorMessage('checkChock')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px; overflow: hidden;\" >\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.lastThree\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"lastThreeChange($event)\"\n                            style=\"margin-right: 10px;\">Tres Ultimas\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.lastThree\" style=\"width: 77%;\">\n                <input matInput formControlName=\"lastThreePrice\"\n                       type = \"number\"\n                       placeholder=\"Entre precio, tres ultimas\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.lastThreePrice\"\n                       (change)=\"lastThreePriceChange()\"\n                       required\n                >\n              </mat-form-field>\n            </div>\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"float: left; width: 50%\">\n              <mat-checkbox [(ngModel)]=\"entity.combined\"\n                            [ngModelOptions]=\"{standalone: true}\"\n                            (change)=\"combinedChange($event)\"\n                            style=\"margin-right: 10px;\">Combinado\n              </mat-checkbox>\n              <mat-form-field *ngIf=\"entity.combined\" style=\"width: 32%;margin-right: 10px;\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Cuatro cifras, combinado\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.combinedFourFigurePrice\"\n                       (change)=\"combinedFourFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-form-field *ngIf=\"entity.combined\" style=\"width: 32%\">\n                <input matInput [ngModelOptions]=\"{standalone: true}\"\n                       type = \"number\"\n                       placeholder=\"Tres cifras, combinado\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length==9) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"entity.combinedThreeFigurePrice\"\n                       (change)=\"combinedThreeFigurePriceChange()\"\n                >\n              </mat-form-field>\n              <mat-error  *ngIf=\"entity.combined && entityForm.invalid\">{{getErrorMessage('checkCombined')}}</mat-error>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-top: 10px;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <table mat-table [dataSource]=\"dataSource\" matSort class=\"mat-elevation-z8\">\n\n                <!-- id Column -->\n                <!--                <ng-container matColumnDef=\"id\">-->\n                <!--                  <th mat-header-cell *matHeaderCellDef> Id </th>-->\n                <!--                  <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>-->\n                <!--                </ng-container>-->\n\n                <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n                  <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n                  <td mat-cell *matCellDef=\"let element\">\n                    <span>{{element[column]}}</span>\n                    <button *ngIf=\"column === 'actions'\" mat-button (click)=\"preventEnter()\"></button>\n                    <!--                    <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n                    <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDeleteCustomGrid(element)\"><mat-icon>delete_outline</mat-icon></button>\n                  </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n              </table>\n              <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('checkNumbers')}}</mat-error>\n            </div>\n          </div>\n<!--          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" *ngFor=\"let detail of entity.details\">-->\n<!--            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">-->\n<!--              {{detail.number + ' IsFF=' + detail.isFourFigure + ' LId=' + getName(detail.lotteryId)-->\n<!--            + ' Pri=' + detail.price + ' Acc=' + detail.accumulated + ' IsFT=' + detail.isFirstThree + ' IsLT=' + detail.isLastThree-->\n<!--              }}-->\n<!--            </div>-->\n<!--          </div>-->\n        </form>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-fab color=\"accent\" [disabled]=\"!entityForm.valid\" (click)=\"save()\">Salvar</button>\n                <button mat-fab color=\"primary\" (click)=\"new()\">Nuevo</button>\n      </mat-card-actions>\n    </mat-card>\n  </div>\n</div>\n\n\n\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-bets',\n  templateUrl: './bets.component.html'\n})\nexport class BetsComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n  @Input() showCardHeader: boolean = true;\n\n  entityApi = 'bets';\n  settings: any = {\n    showPreviewDialog: true,\n    query: {\n      table: 'vw_bets'\n    },\n    options: {\n      where: {\n      },\n      order: [['created', 'desc']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['lottery', 'firstThree', 'lastThree', 'combined',\n    'number', 'price', 'employeeCode', 'chockNumber', 'created', 'userName', 'actions'];\n  filtersColumns: string[] = ['lottery', 'employeeCode'];\n  dataSource: MatTableDataSource<any>;\n\n  lotteryId: any;\n  lotteries = [];\n  createdDate: any;\n\n  number: any;\n  filter: any;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Apuestas';\n    this.subtitle = 'Apuesta';\n\n    this.service.getSelect('lotteries', {value: 'id', text: 'name'})\n      .subscribe((res: any) => {\n        // res.unshift({value: null, text: 'Ninguna'})\n        this.lotteries = res;\n        this.lotteryId = this.lotteries[0].value;\n\n        super.init(this);\n        super.onPageChange();\n      });\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    this.router.navigate(['/bet2', { betId: row.id }]);\n  }\n\n  beforePageChange(): void {\n\n    if (this.lotteryId) {\n      this.settings.options.where.lotteryId = this.lotteryId;\n    }\n    else {\n      delete this.settings.options.where.lotteryId;\n    }\n\n    if (this.createdDate) {\n\n      var datestring = this.createdDate.getDate()  + \"/\" + (this.createdDate.getMonth()+1) + \"/\" + this.createdDate.getFullYear();\n      // + \" \" +         this.createdDate.getHours() + \":\" + this.createdDate.getMinutes();\n\n      this.settings.options.where.createdDate = datestring;\n    }\n    else {\n      delete this.settings.options.where.createdDate;\n    }\n  }\n\n  numberOnly(event: any): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\n\n  }\n\n  numberChange(): void {\n\n    if (this.number) {\n      this.settings.options.where.$or = [{number: this.number}, {chockNumber: this.number}];\n    }\n    else {\n      this.settings.options.where.$or = [];\n    }\n  }\n\n  padNumber(value: any, width: any, z?:any) {\n    z = z || '0';\n    value = value + '';\n\n    return value.length >= width ? value : new Array(width - value.length + 1).join(z) + value;\n  };\n\n  // deleteForDate() {\n  //\n  //   if (!this.createdDate) {\n  //     confirm('Seleccione una fecha');\n  //   }\n  //   else {\n  //     var datestring = this.createdDate.getFullYear() + \"-\" + this.padNumber((this.createdDate.getMonth()+1), 2 )+\n  //       \"-\" + this.padNumber(this.createdDate.getDate(), 2);\n  //\n  //     if (confirm('Eliminara los registros de esta fecha: ' + datestring)) {\n  //\n  //       this.service.deleteOptions(this.view.entityApi, {options: {\n  //           where: {\n  //             createdAt: {\n  //               $gt: this.createdDate.setMilliseconds(0),\n  //               $lt: this.createdDate.setHours(23,59,59)\n  //             }\n  //           }\n  //         }})\n  //         .subscribe((res: any) => {\n  //\n  //           this.onPageChange();\n  //\n  //           if (this.view.deletedEvent) {\n  //             this.view.deletedEvent.emit(new Date().toString());\n  //           }\n  //         });\n  //     }\n  //   }\n  //\n  // }\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header *ngIf=\"showCardHeader\">\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n            <mat-label>Seleccione fecha</mat-label>\n            <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"createdDate\">\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n            <mat-datepicker #picker></mat-datepicker>\n          </mat-form-field>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <mat-form-field style=\"float: left;width: 30%; margin-right: 10px;\">\n              <input matInput (keyup.enter)=\"onPageChange()\" [(ngModel)]=\"filter\" placeholder=\"Filtrar\">\n            </mat-form-field>\n\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Seleccione Loteria</mat-label>\n              <mat-select matNativeControl [(ngModel)]=\"lotteryId\" required>\n                <mat-option *ngFor=\"let option of lotteries\" [value]=\"option.value\">\n                  {{option.text}}\n                </mat-option>\n              </mat-select>\n            </mat-form-field>\n\n            <mat-form-field style=\"width: 30%\">\n              <!--                oninput=\"javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);\"-->\n<!--              (keypress)=\"numberOnly($event)\"-->\n<!--              [(ngModel)]=\"number\" [ngModelOptions]=\"{standalone: true}\"-->\n<!--              (keyup.enter)=\"add()\"-->\n              <input matInput\n                     placeholder=\"Entre number\"\n                     onKeyPress=\"if(this.value.length===4) return false;\"\n                     autocomplete=\"off\"\n                     (change)=\"numberChange()\"\n                     (keypress)=\"numberOnly($event)\"\n                     [(ngModel)]=\"number\"\n              >\n            </mat-form-field>\n\n<!--            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>-->\n<!--            <button mat-fab color=\"basic\"  (click)=\"downloadFile()\" style=\"float: left;\">Archivo</button>-->\n<!--            <button mat-fab color=\"warn\"  (click)=\"covered()\" style=\"float: right;\">Cubrir</button>-->\n          </div>\n        </div>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>\n<!--            <button mat-fab color=\"basic\"  (click)=\"downloadFile()\" style=\"float: left;\">Archivo</button>-->\n<!--            <button mat-fab color=\"warn\"  (click)=\"deleteForDate()\" style=\"float: right;\">Eliminar</button>-->\n          </div>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.betId}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column | translate}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n<!--              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n<!--              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>-->\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {BaseEditView} from \"../../baseEditView\";\nimport {FormBuilder, FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ApiService} from \"../../../services/api.service\";\nimport {AuthService} from \"../../../services/security/auth.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n@Component({\n  selector: 'app-forbidden-number',\n  templateUrl: './forbidden-number.component.html'\n})\nexport class ForbiddenNumberComponent extends BaseEditView implements OnInit {\n\n  entityApi = 'numbers';\n  title: any;\n  subtitle: any;\n  currEntity: any;\n  entities: any[] = [];\n\n  entityForm: FormGroup;\n\n  loadNumbers: string;\n\n  lotteries = [];\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private _snackBar: MatSnackBar) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Prohibido'; //+ this.service.getUrl();\n    this.subtitle = 'Apuesta';\n\n    this.service.getSelect('lotteries', {value: 'id', text: 'name'})\n      .subscribe((res: any) => {\n        this.lotteries = res;\n\n        this.lotteries.unshift({value: 'all', text: 'Todas'})\n      });\n\n    this.iniEntity();\n\n    super.init(this);\n\n    this.route.params.subscribe((params) => {\n\n      if (params && params.numberId) {\n\n        this.configFormGroup(params.numberId);\n\n        super.getEntity(params.numberId).subscribe(() => {\n\n        });\n      }\n      else {\n        this.configFormGroup();\n      }\n    });\n\n  }\n\n  configFormGroup = (entityId?:any) => {\n\n    let setting: any = {field: 'number'}\n\n    if (entityId) {\n\n      setting.options = {\n        where: {\n          id: { $ne: entityId }\n        }\n      }\n    }\n\n    this.entityForm = new FormGroup({\n      number: new FormControl('', [Validators.required]),\n      lotteryId: new FormControl('', [Validators.required])\n    });\n  }\n\n  iniEntity(): void {\n    this.currEntity = {\n      number: null,\n      isActive: true,\n      lotteryId: null\n    };\n  }\n\n  new(): void {\n\n    this.iniEntity();\n\n    this.router.navigate(['/forbidden']);\n  }\n\n  afterSaved(): void {\n    this.loadNumbers = new Date().toString();\n  }\n\n  numberOnly(event: any): boolean {\n\n    const charCode = (event.which) ? event.which : event.keyCode;\n    return !(charCode > 31 && (charCode < 48 || charCode > 57));\n\n  }\n\n  beforeSaved(): boolean {\n    let done = true;\n\n    this.entities = [];\n\n    if (this.currEntity.lotteryId == 'all') {\n\n      for (let lottery of this.lotteries) {\n\n        if (lottery.value != 'all') {\n\n          this.entities.push(\n            {\n              number: this.currEntity.number,\n              isActive: true,\n              lotteryId: lottery.value\n            }\n          );\n        }\n      }\n    }\n    else {\n      this.entities = [this.currEntity];\n    }\n\n    return done;\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <form [formGroup]=\"entityForm\">\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n                <input matInput\n                       placeholder=\"Entre number\"\n                       formControlName=\"number\"\n                       (keypress)=\"numberOnly($event)\"\n                       onKeyPress=\"if(this.value.length===4) return false;\"\n                       autocomplete=\"off\"\n                       [(ngModel)]=\"currEntity.number\"\n                       required\n                >\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('number')}}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-checkbox [(ngModel)]=\"currEntity.isActive\" [ngModelOptions]=\"{standalone: true}\"\n                            style=\"margin-right: 10px;\">Esta Activo</mat-checkbox>\n            </div>\n          </div>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field>\n                <mat-label>Seleccione loteria</mat-label>\n                <mat-select matNativeControl formControlName=\"lotteryId\" [(ngModel)]=\"currEntity.lotteryId\" required>\n                  <mat-option *ngFor=\"let option of lotteries\" [value]=\"option.value\">\n                    {{option.text}}\n                  </mat-option>\n                </mat-select>\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('lotteryId')}}</mat-error>\n              </mat-form-field>\n            </div>\n          </div>\n        </form>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-fab color=\"accent\" [disabled]=\"!entityForm.valid\" (click)=\"save()\">Salvar</button>\n        <button mat-fab color=\"primary\" (click)=\"new()\">Nuevo</button>\n      </mat-card-actions>\n      <mat-card-footer>\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <mat-icon>block</mat-icon>\n              Numeros\n            </ng-template>\n            <ng-template matTabContent>\n              <div>\n                <div>\n                  <app-forbidden-numbers [loadChange]=\"loadNumbers\" [showCardHeader]=\"false\"></app-forbidden-numbers>\n                </div>\n              </div>\n            </ng-template>\n          </mat-tab>\n        </mat-tab-group>\n      </mat-card-footer>\n    </mat-card>\n  </div>\n</div>\n\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from \"../../baseSearchView\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {ApiService} from \"../../../services/api.service\";\nimport {AuthService} from \"../../../services/security/auth.service\";\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-forbidden-numbers',\n  templateUrl: './forbidden-numbers.component.html'\n})\nexport class ForbiddenNumbersComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n  @Input() showCardHeader: boolean = true;\n\n  entityApi = 'numbers';\n  settings: any = {\n    query: {\n      table: 'vw_forbiddenNumbers'\n    },\n    options: {\n      order: [['number']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['number', 'isActive', 'lotteryName', 'actions'];\n  filtersColumns: string[] = ['number'];\n  dataSource: MatTableDataSource<any>;\n  filter: any;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Numeros Prohibido';\n    this.subtitle = 'Apuesta';\n\n    super.init(this);\n    super.onPageChange();\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    this.router.navigate(['/forbidden', { numberId: row.id }]);\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header *ngIf=\"showCardHeader\">\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n\n        <mat-form-field>\n          <input matInput (keyup.enter)=\"onPageChange()\" [(ngModel)]=\"filter\" placeholder=\"Filtrar\">\n        </mat-form-field>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n<!--              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>-->\n              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-lotteries',\n  templateUrl: './lotteries.component.html'\n})\nexport class LotteriesComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n  @Input() showCardHeader: boolean = true;\n\n  entityApi = 'lotteries';\n  settings: any = {\n    options: {\n      order: [['name']]\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['code', 'name', 'play', 'isThreeFigures', 'actions'];\n  filtersColumns: string[] = ['name', 'code'];\n  dataSource: MatTableDataSource<any>;\n  filter: any;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n    this.title = 'Loterias';\n    this.subtitle = 'Apuesta';\n\n    // const company  = this.authService.getItem('company');\n    // this.settings.options.where = {companyId: company.id};\n\n    super.init(this);\n    super.onPageChange();\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    this.router.navigate(['/lottery', { lotteryId: row.id }]);\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header *ngIf=\"showCardHeader\">\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n\n        <mat-form-field>\n          <input matInput (keyup.enter)=\"onPageChange()\" [(ngModel)]=\"filter\" placeholder=\"Filtrar\">\n        </mat-form-field>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>\n              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>\n            </td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n","import {ChangeDetectorRef, Component, OnInit} from '@angular/core';\nimport {BaseEditView} from '../../baseEditView';\nimport {FormArray, FormBuilder, FormControl, FormGroup, Validators} from '@angular/forms';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {ApiService} from '../../../services/api.service';\nimport {MatSnackBar} from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-lottery',\n  templateUrl: './lottery.component.html'\n})\nexport class LotteryComponent extends BaseEditView implements OnInit {\n\n  entityApi = 'lotteries';\n  title: any;\n  subtitle: any;\n  entity: any;\n\n  entityForm: FormGroup;\n\n  weekDays = {\n    monday: false,\n    tuesday: false,\n    wednesday: false,\n    thursday: false,\n    friday: false,\n    saturday: false,\n    sunday : false\n  };\n\n  loadLotteries: string;\n  enumLotteryTemporality = [\n    {\n      value: null, text: 'Ninguna'\n    },\n    {\n      value: 'morning', text: 'Mañana'\n    },\n    {\n      value: 'afternoon', text: 'Tarde'\n    },\n    {\n      value: 'night', text: 'Noche'\n    }\n  ];\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private route: ActivatedRoute,\n              private fb: FormBuilder,\n              private router: Router,\n              private changeDetectorRef: ChangeDetectorRef,\n              private _snackBar: MatSnackBar) {\n    super();\n\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Loteria';\n    this.subtitle = 'Apuesta';\n\n    // this.new();\n    this.iniEntity();\n\n    super.init(this);\n\n    this.route.params.subscribe((params) => {\n\n      if (params && params.lotteryId) {\n\n        this.configFormGroup(params.lotteryId);\n\n        super.getEntity(params.lotteryId).subscribe(() => {\n\n          for (let day in this.weekDays) {\n\n            this.weekDays[day] = false;\n          }\n\n          let days = this.entity.play.split(',');\n\n          for (let day of days) {\n            this.weekDays[day] = true;\n            this.playDaysChange({checked: true, source: {value: day }});\n          }\n        });\n      }\n      else {\n        this.configFormGroup();\n      }\n    });\n  }\n\n  configFormGroup = (entityId?:any) => {\n\n    let settingName: any = {field: 'name'}\n\n    let settingCode: any = {field: 'code'}\n\n    if (entityId) {\n      settingName.options = {\n        where: {\n          id: { $ne: entityId }\n        }\n      }\n\n      settingCode.options = {\n        where: {\n          id: { $ne: entityId }\n        }\n      }\n    }\n\n    this.entityForm = new FormGroup({\n      name: new FormControl('', [Validators.required],\n        [this.service.takenValidator(this.entityApi, settingName)]),\n      code: new FormControl('', [Validators.required],\n        [this.service.takenValidator(this.entityApi, settingCode)]),\n      checkArray: this.fb.array([], [Validators.required])\n    });\n\n  }\n\n  iniEntity(): void {\n    this.entity = {\n      code: null,\n      name: null,\n      play: null,\n      isThreeFigures: false,\n      temporality: null,\n      closing: null\n    };\n  }\n\n  new(): void {\n\n    for (let day in this.weekDays) {\n\n      this.weekDays[day] = false;\n    }\n\n    if (this.entityForm) {\n\n      const checkArray: FormArray = this.entityForm.get('checkArray') as FormArray;\n\n      let stop =  checkArray.controls.length;\n\n      for (let i = 0; i < stop; i++) {\n        checkArray.removeAt(0);\n      }\n    }\n\n    this.iniEntity();\n\n    // this.configFormGroup();\n    this.router.navigate(['/lottery']);\n  }\n\n  playDaysChange(e): void {\n    const checkArray: FormArray = this.entityForm.get('checkArray') as FormArray;\n\n    if (e.checked) {\n      checkArray.push(new FormControl(e.source.value));\n    } else {\n      let i: number = 0;\n      checkArray.controls.forEach((item: FormControl) => {\n        if (item.value == e.source.value) {\n          checkArray.removeAt(i);\n          return;\n        }\n        i++;\n      });\n    }\n\n    let days = '';\n\n    checkArray.controls.forEach((item: FormControl) => {\n      days += item.value + ',';\n    });\n    days = days.substring(0, days.length - 1);\n\n    this.entity.play = days || null;\n  }\n\n  afterSaved(): void {\n    this.loadLotteries = new Date().toString();\n  }\n\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header>\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n        <form [formGroup]=\"entityForm\">\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-form-field style=\"float: left;width: 20%; margin-right: 10px;\">\n                <input matInput placeholder=\"Entre código\" formControlName=\"code\" [(ngModel)]=\"entity.code\" required>\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('code')}}</mat-error>\n              </mat-form-field>\n              <mat-form-field style=\"width: 20%; margin-right: 10px;\">\n                <input matInput placeholder=\"Entre nombre\" formControlName=\"name\" [(ngModel)]=\"entity.name\" required>\n                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('name')}}</mat-error>\n              </mat-form-field>\n              <mat-form-field style=\"width: 20%; margin-right: 10px;\">\n                <mat-label>Seleccione temporalidad</mat-label>\n                <mat-select matNativeControl [(ngModel)]=\"entity.temporality\" [ngModelOptions]=\"{standalone: true}\">\n                  <mat-option *ngFor=\"let option of enumLotteryTemporality\" [value]=\"option.value\">\n                    {{option.text}}\n                  </mat-option>\n                </mat-select>\n              </mat-form-field>\n              <mat-form-field style=\"width: 20%;\">\n                <input matInput placeholder=\"Entre hora de cierre\"\n                       type=\"time\"\n\n                       [(ngModel)]=\"entity.closing\" [ngModelOptions]=\"{standalone: true}\">\n<!--                <input type=\"time\" id=\"time\" name=\"bday\" pattern=\"([1]?[0-9]|2[0-3]):[0-5][0-9]\"/>-->\n              </mat-form-field>\n              {{entity.closing}}\n            </div>\n          </div>\n<!--          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">-->\n<!--            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">-->\n<!--              <mat-form-field style=\"width: 30%; margin-right: 10px;\">-->\n<!--                <input matInput placeholder=\"Entre nombre\" formControlName=\"name\" [(ngModel)]=\"entity.name\" required>-->\n<!--                <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('name')}}</mat-error>-->\n<!--              </mat-form-field>-->\n<!--            </div>-->\n<!--          </div>-->\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" >\n              {{'Juega: '}}\n\n              <mat-checkbox [(ngModel)]=\"weekDays.monday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'monday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Lunes</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.tuesday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'tuesday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Martes</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.wednesday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'wednesday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Miércoles</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.thursday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'thursday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Jueves</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.friday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'friday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Viernes</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.saturday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'saturday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Sabado</mat-checkbox>\n              <mat-checkbox [(ngModel)]=\"weekDays.sunday\" [ngModelOptions]=\"{standalone: true}\" [value]=\"'sunday'\"\n                            (change)=\"playDaysChange($event)\" style=\"margin-right: 10px;\">Domingo</mat-checkbox>\n\n              <mat-error *ngIf=\"entityForm.invalid\">{{getErrorMessage('checkArray')}}</mat-error>\n            </div>\n          </div>\n\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\" style=\"margin-text-outline: 10px;margin-top: 10px;\">\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              <mat-checkbox [(ngModel)]=\"entity.isThreeFigures\" [ngModelOptions]=\"{standalone: true}\"\n                            style=\"margin-right: 10px;\">Es tres cifras</mat-checkbox>\n            </div>\n          </div>\n        </form>\n      </mat-card-content>\n      <mat-card-actions>\n        <button mat-fab color=\"accent\" [disabled]=\"!entityForm.valid\" (click)=\"save()\">Salvar</button>\n        <button mat-fab color=\"primary\" (click)=\"new()\">Nuevo</button>\n      </mat-card-actions>\n      <mat-card-footer>\n        <mat-tab-group>\n          <mat-tab>\n            <ng-template mat-tab-label>\n              <mat-icon>monetization_on</mat-icon>\n              Loterias\n            </ng-template>\n            <ng-template matTabContent>\n              <div>\n                <div>\n                  <app-lotteries [loadChange]=\"loadLotteries\" [showCardHeader]=\"false\"></app-lotteries>\n                </div>\n              </div>\n            </ng-template>\n          </mat-tab>\n        </mat-tab-group>\n      </mat-card-footer>\n    </mat-card>\n  </div>\n</div>\n"]}