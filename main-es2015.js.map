{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/app.routing.ts","./src/app/demo-material-module.ts","./src/app/layouts/full/full.component.ts","./src/app/layouts/full/full.component.html","./src/app/layouts/full/header-controls/header-controls.component.ts","./src/app/layouts/full/header/header.component.ts","./src/app/layouts/full/header/header.component.html","./src/app/layouts/full/sidebar/sidebar.component.ts","./src/app/layouts/full/sidebar/sidebar.component.html","./src/app/services/api.service.ts","./src/app/services/config.service.ts","./src/app/services/file-preview-overlay.service.ts","./src/app/services/security/auth.service.ts","./src/app/shared/accordion/accordion.directive.ts","./src/app/shared/accordion/accordionanchor.directive.ts","./src/app/shared/accordion/accordionlink.directive.ts","./src/app/shared/accordion/index.ts","./src/app/shared/preview-overlay/file-preview-overlay-ref.ts","./src/app/shared/preview-overlay/file-preview-overlay.component.ts","./src/app/shared/preview-overlay/file-preview-overlay.tokens.ts","./src/app/shared/shared.module.ts","./src/app/shared/spinner.component.ts","./src/app/views/security-login/login/login.component.ts","./src/app/views/security-login/login/login.component.html","./src/app/views/security-login/security-login-routing.module.ts","./src/app/views/security-login/security-login.module.ts","./src/app/views/widgets/dialog-overviews/basic.dialog.ts","./src/app/views/widgets/dialog-overviews/basic.dialog.html","./src/app/views/widgets/widgets-routing.module.ts","./src/app/views/widgets/widgets.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\n\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport {AppHeaderComponent} from './layouts/full/header/header.component';\nimport {AppHeaderControlsComponent} from './layouts/full/header-controls/header-controls.component';\nimport {AppSidebarComponent} from './layouts/full/sidebar/sidebar.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './demo-material-module';\n\nimport {FilePreviewOverlayComponent} from './shared/preview-overlay/file-preview-overlay.component';\nimport { FilePreviewOverlayService } from './services/file-preview-overlay.service';\nimport {ConfigService} from './services/config.service';\n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\n\nimport {SecurityLoginModule} from './views/security-login/security-login.module';\nimport {WidgetsModule} from './views/widgets/widgets.module';\nimport {BasicDialog} from './views/widgets/dialog-overviews/basic.dialog';\n// import {StarterModule} from './starter/starter.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilePreviewOverlayComponent,\n    FullComponent,\n    AppHeaderComponent,\n    AppHeaderControlsComponent,\n    AppSidebarComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    WidgetsModule,\n    FormsModule,\n    // FlexLayoutModule,\n    HttpClientModule,\n    SharedModule,\n    RouterModule.forRoot(AppRoutes),\n    SecurityLoginModule\n    // StarterModule,\n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy,\n    },\n    FilePreviewOverlayService,\n    ConfigService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    // Needs to be added here because otherwise we can't     // dynamically render this component at runtime\n    FilePreviewOverlayComponent,\n    BasicDialog\n  ]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\n\nimport { FullComponent } from './layouts/full/full.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      // {\n      //   path: ``, loadChildren: () =>\n      //     import('./starter/starter.module').then(o => o.StarterModule)\n      // },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/bet/bet.module').then(o => o.BetModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/biznet/biznet.module').then(o => o.BiznetModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/finance/finance.module').then(o => o.FinanceModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/graphics/graphics.module').then(o => o.GraphicsModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/security/security.module').then(o => o.SecurityModule)\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatFormFieldModule,\n    CdkAccordionModule,\n    BidiModule,\n    OverlayModule,\n    PlatformModule,\n    ObserversModule\n  ]\n})\nexport class DemoMaterialModule {}\n","import * as $ from 'jquery';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit\n} from '@angular/core';\n// import { MenuItems } from '../../shared/menu-items/menu-items';\n// import {AppHeaderControlsComponent} from './header-controls/header-controls.component';\n// import { AppHeaderComponent } from './header/header.component';\n// import { AppSidebarComponent } from './sidebar/sidebar.component';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    // public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {}\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\"> \n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\" *ngIf=\"false\">\n            <a class=\"navbar-brand\" href=\"index.html\">\n                <!-- Logo icon --><b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                 <!-- dark Logo text -->\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                 <!-- Light Logo text -->    \n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span> </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n        \n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n\n        <app-header-controls></app-header-controls>\n\n        <app-header></app-header>\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\n            \n                <app-sidebar></app-sidebar>\n               \n            \n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        \n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n                 \n                <div class=\"page-content\">\n                   \n                        <router-outlet><app-spinner></app-spinner></router-outlet>\n                    \n                </div>    \n               \n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>\n","import { Component } from '@angular/core';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header-controls',\n  templateUrl: './header-controls.component.html',\n  styleUrls: []\n})\nexport class AppHeaderControlsComponent {\n\n  // companies: any[] = [];\n  // companyId = null;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router\n             ) {\n\n    this.onPageChange();\n  }\n\n  onPageChange() {\n\n    // this.service.getSelect('users', {value: 'id', text: 'name'})\n    //   .subscribe((res: any) => {\n    //     this.companies = res;\n    //\n    //     if (this.companies.length && !this.companyId) {\n    //\n    //       const company  = this.authService.getItem('company');\n    //\n    //       if (!company) {\n    //         this.companyId = this.companies[0].value;\n    //         this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //       }\n    //       else if (company && !company.id) {\n    //         this.companyId = this.companies[0].value;\n    //         this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //       }\n    //       else {\n    //         this.companyId = company.id;\n    //       }\n    //     }\n    //\n    //     // this.onChange();\n    //   });\n  }\n\n  onChange() {\n\n    // const company  = this.authService.getItem('company');\n    //\n    // if (company && company.id !== this.companyId) {\n    //   this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //   this.router.navigate(['/betalerts']);\n    // }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {}\n","        \n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!--<a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\" *ngIf=\"false\">Upgrade To Pro</a>-->\n<!--<button  mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\" class=\"profile-pic\"> </button>-->\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\" class=\"profile-pic\"> </button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>settings</mat-icon> Settings </button>-->\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>account_box</mat-icon> Profile </button>-->\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n    <button mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon><a routerLink=\"/login\" class=\"nav-link\">Sign Out</a></button>\n</mat-menu>\n\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit, OnInit\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n// import { MenuItems } from '../../../shared/menu-items/menu-items';\n\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\nimport {ApiService} from \"../../../services/api.service\";\n\n// interface FoodNode {\n//   name: string;\n//   children?: FoodNode[];\n// }\n\n// const TREE_DATA: any[] = [\n//   {\n//     name: 'Business Network',\n//     children: [\n//       { state: 'starter', type: 'link', name: 'Model Up', icon: 'av_timer'},\n//       { state: 'company', type: 'link', name: 'Company', icon: 'equalizer', show: true },\n//       { state: 'companies', type: 'link', name: 'Companies', icon: 'equalizer', show: true },\n//       // {name: 'Banana'},\n//       // {name: 'Fruit loops'},\n//     ]\n//   },\n//   // {\n//   //   name: 'Vegetables',\n//   //   children: [\n//   //     {\n//   //       name: 'Green',\n//   //       children: [\n//   //         {name: 'Broccoli'},\n//   //         {name: 'Brussel sprouts'},\n//   //       ]\n//   //     }, {\n//   //       name: 'Orange',\n//   //       children: [\n//   //         {name: 'Pumpkins'},\n//   //         {name: 'Carrots'},\n//   //       ]\n//   //     },\n//   //   ]\n//   // },\n// ];\n\n/** Flat node with expandable and level information */\n// interface ExampleFlatNode {\n//   expandable: boolean;\n//   name: string;\n//   level: number;\n// }\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy, OnInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  currentUser: any;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    // public menuItems: MenuItems,\n    private authService: AuthService,\n    private router: Router,\n    private service: ApiService,\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n  }\n\n  ngOnInit() {\n\n    this.currentUser = this.authService.getItem('currentUser');\n\n    if (this.currentUser.menu) {\n      this.dataSource.data = JSON.parse(this.currentUser.menu.setting);\n    }\n    else {\n\n      this.service.get('menus', {options: {where: {$or: [{name: 'Default'}, {name: 'Default2'}]}}})\n        .subscribe((entityRes) => {\n\n          let menu: any;\n          if (entityRes.length) {\n            menu = entityRes[0];\n          }\n\n          this.dataSource.data = menu.setting;\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  private _transformer = (node: any, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      state: node.state,\n      icon: node.icon,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<any>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  hasChild = (_: number, node: any) => node.expandable;\n\n  routerLink(node: any) {\n\n    let indexIni = this.router.url.indexOf('/');\n    let indexEnd = this.router.url.indexOf(';');\n\n    let url = \"\";\n    if (indexIni != -1 && indexEnd != -1) {\n      url = this.router.url.substring(indexIni + 1, indexEnd);\n    }\n    else {\n      url = this.router.url.substring(indexIni + 1, this.router.url.length);\n    }\n\n    if (url != node.state) {\n\n      this.router.navigate(['/' + node.state]);\n    }\n  }\n}\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\"> </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\"><a class=\"\">{{currentUser.name}}<i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\n<!--    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Kamadeva <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>-->\n<!--    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>settings</mat-icon> Settings </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>account_box</mat-icon> Profile </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>exit_to_app</mat-icon> Sign Out </button>-->\n<!--    </mat-menu>-->\n\n</div>\n<!--<mat-nav-list appAccordion>-->\n<!--    <mat-list-item appAccordionLink *ngFor=\"let menuItem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuItem.state}}\">-->\n<!--        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuItem.state]\" *ngIf=\"menuItem.type === 'link' && menuItem.show\">-->\n<!--            <mat-icon>{{ menuItem.icon }}</mat-icon>-->\n<!--            <span>{{ menuItem.name }}</span>-->\n<!--            <span fxFlex></span> -->\n<!--            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuItem.badge\">{{ badge.value }}</span>-->\n<!--        </a>-->\n<!--    </mat-list-item>-->\n<!--</mat-nav-list>-->\n\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- This is the tree node template for leaf nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled><mat-icon>{{ node.icon }}</mat-icon></button>\n    <mat-nav-list appAccordion>\n<!--      <mat-list-item appAccordionLink routerLinkActive=\"selected\" group=\"{{node.state}}\">-->\n      <mat-list-item appAccordionLink>\n        <a appAccordionToggle (click)=\"routerLink(node)\">\n          <span>{{ node.name }}</span>\n        </a>\n      </mat-list-item>\n    </mat-nav-list>\n  </mat-tree-node>\n\n\n  <!-- This is the tree node template for expandable nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon>\n<!--        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}-->\n        {{ node.icon }}\n      </mat-icon>\n<!--      <span>{{ node.name }}</span>-->\n    </button>\n\n    <span mat-icon-button matTreeNodeToggle\n          [attr.aria-label]=\"'toggle ' + node.name\"\n          style=\"cursor: pointer\"\n    >\n      {{ node.name }}\n    </span>\n\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon>\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n  </mat-tree-node>\n</mat-tree>\n\n<!--<mat-tree>-->\n<!--  <mat-nested-tree-node>-->\n<!--    parent node-->\n<!--    <mat-nested-tree-node> &#45;&#45; child node1 </mat-nested-tree-node>-->\n<!--    <mat-nested-tree-node> &#45;&#45; child node2 </mat-nested-tree-node>-->\n<!--  </mat-nested-tree-node>-->\n<!--</mat-tree>-->\n","import {Injectable} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport {catchError, finalize, map, take} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { environment } from '../../environments/environment';\n// import {ConfigService} from './config.service';\nimport {AuthService} from './security/auth.service';\nimport {FilePreviewOverlayService} from './file-preview-overlay.service';\nimport {AsyncValidatorFn, ValidationErrors} from '@angular/forms';\n\n// const configService: ConfigService = new ConfigService();\n\n\nconst routes = [ 'api', 'globalize', 'socket', 'image', 'export', 'file', 'pdf' ];\n\nlet environmentUrl;\n\nconst buildUrl = (url: string) => {\n\n  const route = url.split('/')[0];\n\n  if (routes.indexOf(route) < 0) {\n    url = 'api/' + url;\n  }\n\n  url = environment.api_url + '/' + url;\n\n  // url = process.env.api_url;\n  return url;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private readonly host: string;\n  // private url: string;\n  // private module = '/companies';\n\n  constructor(private http: HttpClient,\n              private authService: AuthService,\n              private previewDialog: FilePreviewOverlayService) {\n\n    environmentUrl = environment.api_url;\n  }\n\n  public messagesErrors = {\n    required: 'Required',\n    email: 'Invalid email',\n    taken: 'Already exists',\n    forbidden: 'Número Prohibido'\n  };\n\n  getUrl() {\n    return environmentUrl\n  }\n\n   /** GET Data from the server */\n  get(url: string, settings?: any): Observable<any[]> {\n\n    settings = settings || {};\n\n    let previewDialogRef: any = null;\n\n    if (settings.showPreviewDialog) {\n      previewDialogRef = this.previewDialog.open();\n    }\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    return this.http.post<any[]>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any[]>('get ' + url)),\n      finalize(() => { if (previewDialogRef)  {previewDialogRef.close(); } })\n    );\n  }\n\n  /** GET Data from the server and map in array of {value: 'id', text: 'field'} */\n  getSelect(url: string, settings?: any): Observable<any[]> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    settings = settings || {};\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    return this.http.post<any[]>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      map(value => {\n        return value.map(value => { return {value: value[settings.value], text: value[settings.text]}})\n      }),\n      catchError(this.handleError<any[]>('getSelect ' + url)),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getEntity<Data>(url, id: any, settings?: any): Observable<any> {\n\n    let previewDialogRef: any;\n\n    if (settings && settings.previewDialog == false) {\n      // const previewDialogRef = this.previewDialog.open();\n    }\n    else {\n      previewDialogRef = this.previewDialog.open();\n    }\n\n    if (settings) {\n      settings.id = id;\n    }\n    else {\n      settings = {\n        id\n      };\n    }\n\n    return this.http.post<any>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>(`getEntity id=${id}`)),\n      finalize(() => { if (previewDialogRef) {previewDialogRef.close()} })\n    );\n  }\n\n  /** POST: add a new hero to the server */\n  save(url, entity: any): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    let addId = (entity: any) => {\n\n      if (Array.isArray(entity)) {\n\n        for (let variable of entity) {\n          addId(variable);\n        }\n      }\n      else {\n\n        for (let variable in entity) {\n\n          if (Array.isArray(entity[variable])) {\n            addId(entity[variable]);\n          }\n        }\n\n        entity.id = entity.id || uuidv4();\n        entity.appSubscriptionId = this.authService.getAppSubscriptionId();\n      }\n    }\n\n    addId(entity);\n\n    return this.http.put<any>(buildUrl(url), entity, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError('add')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  delete(url, entity: any | number): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    const id = typeof entity === 'string' ? entity : entity.id;\n    const _url = `${buildUrl(url)}/${id}`;\n\n    return this.http.delete<any>(_url, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>('delete')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteOptions(url, settings?: any): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    // const id = typeof entity === 'string' ? entity : entity.id;\n    // const _url = `${buildUrl(url)}/${id}`;\n\n    settings = settings || {};\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    // let options: any = {};\n    //\n    // options = this.authService.getHttpOptions();\n    // options.settings = settings\n\n    // const _url = `${buildUrl(url)}/${settings}`;\n\n    return this.http.post<any[]>(buildUrl(url) + '/delete', settings, this.authService.getHttpOptions()).pipe(\n    // return this.http.delete<any>(_url, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>('deleteOptions')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  takenValidator(url: string, settings?: any): AsyncValidatorFn {\n    return (control: any): Observable<{ [key: string]: any } | null> => {\n\n      settings = settings || {};\n\n      const text = `${control.value}`.toLowerCase();\n      let validationError: ValidationErrors = {'taken': true};\n\n      if (settings.ValidationError == 'forbidden') {\n        validationError = {'forbidden': true};\n      }\n\n      settings.showPreviewDialog = false;\n\n      return this.get(url, settings).pipe(\n        take(1),\n        map((data: any) => data.map((o:any) => o[settings.field].toLowerCase()).indexOf(text) === -1),\n        map(valid => valid ? null : validationError)\n      )\n    };\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (res: any): Observable<T> => {\n\n      // if (error && !error.auth) {\n      //\n      //   this.authService.logout();\n      // }\n\n      let message = res.message;\n\n      if (res.error && res.error.msg) {\n        message += ` ${res.error.msg}`;\n      }\n\n      if (res.error && res.error.message) {\n        message += ` ${res.error.message}`;\n      }\n\n      message += ` ${res.error.message}`;\n\n      this.previewDialog.open({message});\n\n      // Let the app keep running by returning an empty result.\n      return of(res as T);\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n\n  public hostApi: string;\n\n  constructor() {\n    // let wnd: any = window;\n    // this.env =  wnd.traze.config.env;\n\n    // this.hostApi = 'https://lottery153-api.herokuapp.com';\n    this.hostApi = '//lotteryapi-staging.eba-tmkm7pg3.us-east-1.elasticbeanstalk.com';\n    // this.hostApi = 'https://lottery153-api-dev.herokuapp.com';\n    // this.hostApi = 'http://localhost:3000';\n  }\n\n}\n","import { Injectable, Inject, OnInit, Injector, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\n\nimport { FilePreviewOverlayComponent } from '../shared/preview-overlay/file-preview-overlay.component';\n\nimport { FilePreviewOverlayRef } from '../shared/preview-overlay/file-preview-overlay-ref';\nimport { FILE_PREVIEW_DIALOG_DATA } from '../shared/preview-overlay/file-preview-overlay.tokens';\n\nexport interface Image {\n  name: string;\n  url: string;\n}\n\ninterface FilePreviewDialogConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n  image?: Image;\n  message?: string;\n}\n\nconst DEFAULT_CONFIG: FilePreviewDialogConfig = {\n  hasBackdrop: true,\n  backdropClass: 'dark-backdrop',\n  panelClass: 'tm-file-preview-dialog-panel',\n  image: null,\n  message: null\n};\n\n@Injectable()\nexport class FilePreviewOverlayService {\n\n  constructor(\n    private injector: Injector,\n    private overlay: Overlay) {\n  }\n\n  open(config: FilePreviewDialogConfig = {}) {\n\n    if (!config.image && !config.message) {\n\n      const max: any = 8;\n      const min: any = 1;\n      const id: any = Math.round(Math.random() * (max - min) + min);\n\n      config.image = {name: id, url: 'assets/images/users/' + id + '.jpg'};\n    }\n\n    // Override default configuration\n    const dialogConfig = {...DEFAULT_CONFIG, ...config};\n\n    // Returns an OverlayRef which is a PortalHost\n    const overlayRef = this.createOverlay(dialogConfig);\n\n    // Instantiate remote control\n    const dialogRef = new FilePreviewOverlayRef(overlayRef);\n\n    const overlayComponent = this.attachDialogContainer(overlayRef, dialogConfig, dialogRef);\n\n    // overlayRef.backdropClick().subscribe(_ => dialogRef.close());\n\n    return dialogRef;\n  }\n\n  private createOverlay(config: FilePreviewDialogConfig) {\n    const overlayConfig = this.getOverlayConfig(config);\n    return this.overlay.create(overlayConfig);\n  }\n\n  private attachDialogContainer(overlayRef: OverlayRef, config: FilePreviewDialogConfig, dialogRef: FilePreviewOverlayRef) {\n    const injector = this.createInjector(config, dialogRef);\n\n    const containerPortal = new ComponentPortal(FilePreviewOverlayComponent, null, injector);\n    const containerRef: ComponentRef<FilePreviewOverlayComponent> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createInjector(config: FilePreviewDialogConfig, dialogRef: FilePreviewOverlayRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(FilePreviewOverlayRef, dialogRef);\n    injectionTokens.set(FILE_PREVIEW_DIALOG_DATA, config);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: FilePreviewDialogConfig): OverlayConfig {\n    const positionStrategy = this.overlay.position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n\n    return overlayConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private host: string;\n  // private url: string;\n  // private module = '/users';\n\n  constructor(private http: HttpClient\n              // private messageService: MessageService) {\n  ) {\n\n  }\n\n  redirectUrl: string;\n\n  isLoggedIn() {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n    return false;\n  }\n\n  getAuthorizationToken() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser ? currentUser.token : null;\n  }\n\n  getAppSubscriptionId() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser.appSubscriptionId;\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n  }\n\n  getHttpOptions = () => {\n\n    const token = this.getAuthorizationToken();\n\n    const headers = {'Content-Type': 'application/json; charset=UTF-8'};\n\n    if (token) {\n      headers['X-Access-Token'] = token;\n    }\n\n    return {\n      headers: new HttpHeaders(headers)\n    };\n  }\n\n\n  setItem(settings: any) {\n    localStorage.setItem(settings.key, JSON.stringify(settings.object));\n  }\n\n  getItem(key: any) {\n    const object = JSON.parse(localStorage.getItem(key));\n    return object ? object : null;\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (result: any): Observable<T> => {\n\n      // if (error && !error.auth) {\n      //\n      //   this.authService.logout();\n      // }\n\n      let message = result.message;\n\n      if (result.error && result.error.msg) {\n        message += ` ${result.error.msg}`;\n      }\n\n      console.log(message);\n      // this.previewDialog.open({message: message});\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    //todo para resaltar el item del menu seleccionado... pro no esta desactivando los otros.\n    // this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","import { OverlayRef } from '@angular/cdk/overlay';\n\nexport class FilePreviewOverlayRef {\n\n  constructor(private overlayRef: OverlayRef) { }\n\n  close(): void {\n    this.overlayRef.dispose();\n  }\n}\n","import { Component, Input, Inject } from '@angular/core';\n\nimport { FilePreviewOverlayRef } from './file-preview-overlay-ref';\nimport { FILE_PREVIEW_DIALOG_DATA } from './file-preview-overlay.tokens';\n\n@Component({\n  selector: 'file-preview-overlay',\n  template: `\n    <div class=\"overlay-content\">\n      <img *ngIf=\"data.image\" class=\"avatar\" [src]=\"data.image.url\">\n      <p *ngIf=\"data.message\" style=\"color: #f44336;\">{{data.message}}</p>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    h1 {\n      margin: 0;\n      padding: 1em;\n    }\n\n    img {\n      width: 100%;\n      max-width: 500px;\n      height: auto;\n    }\n\n    .overlay-content {\n      padding: 1em;\n    }\n\n    .avatar {\n      /* cambia estos dos valores para definir el tamaño de tu círculo */\n      height: 300px;\n      width: 300px;\n      /* los siguientes valores son independientes del tamaño del círculo */\n      background-repeat: no-repeat;\n      background-position: 50%;\n      border-radius: 50%;\n      background-size: 100% auto;\n    }\n  `]\n})\nexport class FilePreviewOverlayComponent {\n\n  constructor(\n    public dialogRef: FilePreviewOverlayRef,\n    @Inject(FILE_PREVIEW_DIALOG_DATA) public data: any) { }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Image } from '../../services/file-preview-overlay.service';\n\nexport const FILE_PREVIEW_DIALOG_DATA = new InjectionToken<Image>('FILE_PREVIEW_DIALOG_DATA');\n","import { NgModule } from '@angular/core';\n\n// import { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n   ],\n  // providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  Router,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  entityApi = 'login';\n  title: any;\n  subtitle: any;\n  entity: any;\n\n  loginForm: FormGroup;\n\n  constructor(private router: Router,\n              private service: ApiService,\n              private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.title = 'Login';\n    this.subtitle = 'security';\n\n    this.entity = {\n      user: null,\n      password: null,\n      options : {where : {appSubscriptionId: 'login'}}\n    };\n\n    this.loginForm = new FormGroup({\n      user: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    });\n\n    this.authService.logout();\n  }\n\n  getErrorMessage() {\n\n    // return this.loginForm.controls.user.hasError('required') ? this.service.messagesErrors.required :\n    //   this.loginForm.controls.password.hasError('required') ? this.service.messagesErrors.required : '';\n\n  }\n\n  login() {\n\n    if (this.loginForm.valid) {\n\n      this.service.get(this.entityApi, this.entity).subscribe((entityRes: any) => {\n\n        if (entityRes && entityRes.auth) {\n\n          this.authService.setItem({key: 'currentUser', object: entityRes});\n          this.router.navigate(['/forbidden']);\n        }\n      });\n    }\n  }\n}\n","\n<mat-card>\n  <mat-card-header>\n    <mat-card-title>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <!-- column -->\n        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n          {{title}}\n        </div>\n      </div>\n    </mat-card-title>\n    <mat-card-subtitle>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <!-- column -->\n        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n          {{subtitle}}\n        </div>\n      </div>\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"loginForm\">\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"25\">\n          <mat-form-field>\n            <input matInput placeholder=\"Enter your user\" formControlName=\"user\" [(ngModel)]=\"entity.user\" required>\n            <mat-error *ngIf=\"loginForm.invalid\">{{getErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"25\">\n          <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"Enter your password\"  formControlName=\"password\" [(ngModel)]=\"entity.password\" required>\n            <mat-error *ngIf=\"loginForm.invalid\">{{getErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-fab color=\"accent\" [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n  </mat-card-actions>\n</mat-card>\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecurityLoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DemoMaterialModule } from '../../demo-material-module';\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { SecurityLoginRoutingModule } from './security-login-routing.module';\nimport { LoginComponent } from '../security-login/login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    SecurityLoginRoutingModule,\n    DemoMaterialModule,\n    // FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SecurityLoginModule { }\n","import {Component, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'basic-dialog',\n  templateUrl: './basic.dialog.html',\n})\nexport class BasicDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<BasicDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"data.name\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">{{data.cancel || 'Cancel'}} </button>\n  <button mat-button [mat-dialog-close]=\"data.name\" cdkFocusInitial>{{data.ok || 'Ok'}}</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WidgetsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {DemoMaterialModule} from '../../demo-material-module';\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport { WidgetsRoutingModule } from './widgets-routing.module';\n\nimport {BasicDialog} from './dialog-overviews/basic.dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    BasicDialog\n  ],\n  exports: [\n    BasicDialog\n  ],\n  imports: [\n    CommonModule,\n    WidgetsRoutingModule,\n    DemoMaterialModule,\n    // FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class WidgetsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // api_url: 'https://lottery153-api.herokuapp.com'\n  // api_url: 'https://lottery153-api-dev.herokuapp.com'\n  api_url: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}