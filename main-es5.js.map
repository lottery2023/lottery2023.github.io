{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/app.routing.ts","webpack:///src/app/demo-material-module.ts","webpack:///src/app/layouts/full/full.component.ts","webpack:///src/app/layouts/full/full.component.html","webpack:///src/app/layouts/full/header-controls/header-controls.component.ts","webpack:///src/app/layouts/full/header/header.component.ts","webpack:///src/app/layouts/full/header/header.component.html","webpack:///src/app/layouts/full/sidebar/sidebar.component.ts","webpack:///src/app/layouts/full/sidebar/sidebar.component.html","webpack:///src/app/services/api.service.ts","webpack:///src/app/services/config.service.ts","webpack:///src/app/services/file-preview-overlay.service.ts","webpack:///src/app/services/security/auth.service.ts","webpack:///src/app/shared/accordion/accordion.directive.ts","webpack:///src/app/shared/accordion/accordionanchor.directive.ts","webpack:///src/app/shared/accordion/accordionlink.directive.ts","webpack:///src/app/shared/accordion/index.ts","webpack:///src/app/shared/preview-overlay/file-preview-overlay-ref.ts","webpack:///src/app/shared/preview-overlay/file-preview-overlay.component.ts","webpack:///src/app/shared/preview-overlay/file-preview-overlay.tokens.ts","webpack:///src/app/shared/shared.module.ts","webpack:///src/app/shared/spinner.component.ts","webpack:///src/app/views/security-login/login/login.component.ts","webpack:///src/app/views/security-login/login/login.component.html","webpack:///src/app/views/security-login/security-login-routing.module.ts","webpack:///src/app/views/security-login/security-login.module.ts","webpack:///src/app/views/widgets/dialog-overviews/basic.dialog.ts","webpack:///src/app/views/widgets/dialog-overviews/basic.dialog.html","webpack:///src/app/views/widgets/widgets-routing.module.ts","webpack:///src/app/views/widgets/widgets.module.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AppComponent","selector","templateUrl","styleUrls","AppModule","provide","useClass","forRoot","declarations","imports","providers","bootstrap","entryComponents","AppRoutes","path","component","children","redirectTo","pathMatch","loadChildren","o","BetModule","BiznetModule","FinanceModule","GraphicsModule","SecurityModule","DemoMaterialModule","FullComponent","changeDetectorRef","media","mobileQuery","matchMedia","_mobileQueryListener","detectChanges","addListener","removeListener","AppHeaderControlsComponent","service","authService","router","onPageChange","AppHeaderComponent","AppSidebarComponent","_transformer","node","level","expandable","length","name","state","icon","treeControl","treeFlattener","dataSource","hasChild","_","currentUser","getItem","menu","data","JSON","parse","setting","get","options","where","$or","subscribe","entityRes","indexIni","url","indexOf","indexEnd","substring","navigate","routes","environmentUrl","buildUrl","route","split","api_url","ApiService","http","previewDialog","messagesErrors","required","email","taken","forbidden","settings","previewDialogRef","showPreviewDialog","open","appSubscriptionId","getAppSubscriptionId","post","getHttpOptions","pipe","handleError","close","value","map","text","entity","addId","Array","isArray","variable","put","_url","control","toLowerCase","validationError","ValidationError","field","valid","operation","result","res","message","error","msg","providedIn","ConfigService","hostApi","DEFAULT_CONFIG","hasBackdrop","backdropClass","panelClass","image","FilePreviewOverlayService","injector","overlay","config","max","min","Math","round","random","dialogConfig","overlayRef","createOverlay","dialogRef","overlayComponent","attachDialogContainer","overlayConfig","getOverlayConfig","create","createInjector","containerPortal","containerRef","attach","instance","injectionTokens","WeakMap","set","positionStrategy","position","global","centerHorizontally","centerVertically","scrollStrategy","scrollStrategies","block","AuthService","token","getAuthorizationToken","headers","localStorage","removeItem","setItem","key","stringify","object","console","log","AccordionDirective","navlinks","setTimeout","checkOpenLinks","selectedLink","forEach","link","selected","push","index","splice","group","routeUrl","currentUrl","closeOtherLinks","events","event","AccordionAnchorDirective","navlink","AccordionLinkDirective","nav","addLink","removeGroup","_selected","FilePreviewOverlayRef","dispose","FilePreviewOverlayComponent","template","styles","FILE_PREVIEW_DIALOG_DATA","SharedModule","SpinnerComponent","document","isSpinnerVisible","backgroundColor","encapsulation","None","Document","LoginComponent","entityApi","title","subtitle","user","password","loginForm","logout","auth","login","SecurityLoginRoutingModule","forChild","SecurityLoginModule","BasicDialog","onNoClick","WidgetsRoutingModule","WidgetsModule","environment","production","bootstrapModule","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<router-outlet><app-spinner></app-spinner></router-outlet>\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport {RouterModule} from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\nimport { LocationStrategy, PathLocationStrategy } from '@angular/common';\nimport { AppRoutes } from './app.routing';\nimport { AppComponent } from './app.component';\n\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport { FullComponent } from './layouts/full/full.component';\nimport {AppHeaderComponent} from './layouts/full/header/header.component';\nimport {AppHeaderControlsComponent} from './layouts/full/header-controls/header-controls.component';\nimport {AppSidebarComponent} from './layouts/full/sidebar/sidebar.component';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DemoMaterialModule } from './demo-material-module';\n\nimport {FilePreviewOverlayComponent} from './shared/preview-overlay/file-preview-overlay.component';\nimport { FilePreviewOverlayService } from './services/file-preview-overlay.service';\nimport {ConfigService} from './services/config.service';\n\nimport { SharedModule } from './shared/shared.module';\nimport { SpinnerComponent } from './shared/spinner.component';\n\nimport {SecurityLoginModule} from './views/security-login/security-login.module';\nimport {WidgetsModule} from './views/widgets/widgets.module';\nimport {BasicDialog} from './views/widgets/dialog-overviews/basic.dialog';\n// import {StarterModule} from './starter/starter.module';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    FilePreviewOverlayComponent,\n    FullComponent,\n    AppHeaderComponent,\n    AppHeaderControlsComponent,\n    AppSidebarComponent,\n    SpinnerComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    DemoMaterialModule,\n    WidgetsModule,\n    FormsModule,\n    // FlexLayoutModule,\n    HttpClientModule,\n    SharedModule,\n    RouterModule.forRoot(AppRoutes),\n    SecurityLoginModule\n    // StarterModule,\n  ],\n  providers: [\n    {\n      provide: LocationStrategy,\n      useClass: PathLocationStrategy,\n    },\n    FilePreviewOverlayService,\n    ConfigService\n  ],\n  bootstrap: [AppComponent],\n  entryComponents: [\n    // Needs to be added here because otherwise we can't     // dynamically render this component at runtime\n    FilePreviewOverlayComponent,\n    BasicDialog\n  ]\n})\nexport class AppModule { }\n","import { Routes } from '@angular/router';\n\nimport { FullComponent } from './layouts/full/full.component';\n\nexport const AppRoutes: Routes = [\n  {\n    path: '',\n    component: FullComponent,\n    children: [\n      {\n        path: '',\n        redirectTo: '/login',\n        pathMatch: 'full'\n      },\n      // {\n      //   path: ``, loadChildren: () =>\n      //     import('./starter/starter.module').then(o => o.StarterModule)\n      // },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/bet/bet.module').then(o => o.BetModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/biznet/biznet.module').then(o => o.BiznetModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/finance/finance.module').then(o => o.FinanceModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/graphics/graphics.module').then(o => o.GraphicsModule)\n      },\n      {\n        path: ``, loadChildren: () =>\n          import('./views/security/security.module').then(o => o.SecurityModule)\n      }\n    ]\n  }\n];\n","/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport {NgModule} from '@angular/core';\n\nimport {A11yModule} from '@angular/cdk/a11y';\nimport {ClipboardModule} from '@angular/cdk/clipboard';\nimport {DragDropModule} from '@angular/cdk/drag-drop';\nimport {PortalModule} from '@angular/cdk/portal';\nimport {ScrollingModule} from '@angular/cdk/scrolling';\nimport {CdkStepperModule} from '@angular/cdk/stepper';\nimport {CdkTableModule} from '@angular/cdk/table';\nimport {CdkTreeModule} from '@angular/cdk/tree';\nimport {MatAutocompleteModule} from '@angular/material/autocomplete';\nimport {MatBadgeModule} from '@angular/material/badge';\nimport {MatBottomSheetModule} from '@angular/material/bottom-sheet';\nimport {MatButtonModule} from '@angular/material/button';\nimport {MatButtonToggleModule} from '@angular/material/button-toggle';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatCheckboxModule} from '@angular/material/checkbox';\nimport {MatChipsModule} from '@angular/material/chips';\nimport {MatStepperModule} from '@angular/material/stepper';\nimport {MatDatepickerModule} from '@angular/material/datepicker';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {MatDividerModule} from '@angular/material/divider';\nimport {MatExpansionModule} from '@angular/material/expansion';\nimport {MatGridListModule} from '@angular/material/grid-list';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatListModule} from '@angular/material/list';\nimport {MatMenuModule} from '@angular/material/menu';\nimport {MatNativeDateModule, MatRippleModule} from '@angular/material/core';\nimport {MatPaginatorModule} from '@angular/material/paginator';\nimport {MatProgressBarModule} from '@angular/material/progress-bar';\nimport {MatProgressSpinnerModule} from '@angular/material/progress-spinner';\nimport {MatRadioModule} from '@angular/material/radio';\nimport {MatSelectModule} from '@angular/material/select';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport {MatSliderModule} from '@angular/material/slider';\nimport {MatSlideToggleModule} from '@angular/material/slide-toggle';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\nimport {MatSortModule} from '@angular/material/sort';\nimport {MatTableModule} from '@angular/material/table';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatTooltipModule} from '@angular/material/tooltip';\nimport {MatTreeModule} from '@angular/material/tree';\nimport {MatFormFieldModule} from '@angular/material/form-field';\n\nimport {CdkAccordionModule} from '@angular/cdk/accordion';\nimport {BidiModule} from '@angular/cdk/bidi';\nimport {OverlayModule} from '@angular/cdk/overlay';\nimport {PlatformModule} from '@angular/cdk/platform';\nimport {ObserversModule} from '@angular/cdk/observers';\n\n\n/**\n * NgModule that includes all Material modules that are required to serve the demo-app.\n */\n@NgModule({\n  exports: [\n    A11yModule,\n    ClipboardModule,\n    CdkStepperModule,\n    CdkTableModule,\n    CdkTreeModule,\n    DragDropModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n    PortalModule,\n    ScrollingModule,\n    MatFormFieldModule,\n    CdkAccordionModule,\n    BidiModule,\n    OverlayModule,\n    PlatformModule,\n    ObserversModule\n  ]\n})\nexport class DemoMaterialModule {}\n","import * as $ from 'jquery';\nimport { MediaMatcher } from '@angular/cdk/layout';\nimport { Router } from '@angular/router';\nimport {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit\n} from '@angular/core';\n// import { MenuItems } from '../../shared/menu-items/menu-items';\n// import {AppHeaderControlsComponent} from './header-controls/header-controls.component';\n// import { AppHeaderComponent } from './header/header.component';\n// import { AppSidebarComponent } from './sidebar/sidebar.component';\n\n\n/** @title Responsive sidenav */\n@Component({\n  selector: 'app-full-layout',\n  templateUrl: 'full.component.html',\n  styleUrls: []\n})\nexport class FullComponent implements OnDestroy, AfterViewInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    // public menuItems: MenuItems\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n  ngAfterViewInit() {}\n}\n","<!-- ============================================================== -->\n<!-- Main wrapper - style you can find in pages.scss -->\n<!-- ============================================================== -->\n<div class=\"main-container\"> \n    <!-- ============================================================== -->\n    <!-- Topbar - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <mat-toolbar color=\"primary\" class=\"topbar telative\">\n        <!-- ============================================================== -->\n        <!-- Logo - style you can find in header.scss -->\n        <!-- ============================================================== -->\n        <div class=\"navbar-header\" *ngIf=\"false\">\n            <a class=\"navbar-brand\" href=\"index.html\">\n                <!-- Logo icon --><b>\n                    <!--You can put here icon as well // <i class=\"wi wi-sunset\"></i> //-->\n                    <!-- Dark Logo icon -->\n                    <img src=\"assets/images/logo-icon.png\" alt=\"homepage\" class=\"dark-logo\">\n                    <!-- Light Logo icon -->\n                    <img src=\"assets/images/logo-light-icon.png\" alt=\"homepage\" class=\"light-logo\">\n                </b>\n                <!--End Logo icon -->\n                <!-- Logo text -->\n                <span fxShow=\"false\" fxShow.gt-xs>\n                 <!-- dark Logo text -->\n                 <img src=\"assets/images/logo-text.png\" alt=\"homepage\" class=\"dark-logo\">\n                 <!-- Light Logo text -->    \n                 <img src=\"assets/images/logo-light-text.png\" class=\"light-logo\" alt=\"homepage\">\n                </span> </a>\n        </div>\n        <!-- ============================================================== -->\n        <!-- sidebar toggle -->\n        <!-- ============================================================== -->\n        \n        <button mat-icon-button (click)=\"snav.toggle()\" value=\"sidebarclosed\">\n            <mat-icon>menu</mat-icon>\n        </button>\n        <span fxFlex></span>\n        <!-- ============================================================== -->\n        <!-- app header component - style you can find in header.scss / header.component.ts-->\n        <!-- ============================================================== -->\n\n        <app-header-controls></app-header-controls>\n\n        <app-header></app-header>\n    </mat-toolbar>\n    <!-- ============================================================== -->\n    <!-- End Topbar - style you can find in pages.scss -->\n    <!-- ============================================================== -->\n    <mat-sidenav-container class=\"example-sidenav-container\" [style.marginTop.px]=\"mobileQuery.matches ? 0 : 0\">\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav #snav id=\"snav\" class=\"dark-sidebar pl-xs\" [mode]=\"mobileQuery.matches ? 'side' : 'over'\" fixedTopGap=\"0\" [opened]=\"mobileQuery.matches\" [disableClose]=\"mobileQuery.matches\"  >\n            \n                <app-sidebar></app-sidebar>\n               \n            \n        </mat-sidenav>\n        <!-- ============================================================== -->\n        <!-- Sidebar - style you can find in sidebar.scss -->\n        <!-- ============================================================== -->\n        \n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n        <mat-sidenav-content class=\"page-wrapper\">\n                 \n                <div class=\"page-content\">\n                   \n                        <router-outlet><app-spinner></app-spinner></router-outlet>\n                    \n                </div>    \n               \n        </mat-sidenav-content>\n        <!-- ============================================================== -->\n        <!-- Page container - style you can find in pages.scss -->\n        <!-- ============================================================== -->\n    </mat-sidenav-container>\n</div>\n","import { Component } from '@angular/core';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-header-controls',\n  templateUrl: './header-controls.component.html',\n  styleUrls: []\n})\nexport class AppHeaderControlsComponent {\n\n  // companies: any[] = [];\n  // companyId = null;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router\n             ) {\n\n    this.onPageChange();\n  }\n\n  onPageChange() {\n\n    // this.service.getSelect('users', {value: 'id', text: 'name'})\n    //   .subscribe((res: any) => {\n    //     this.companies = res;\n    //\n    //     if (this.companies.length && !this.companyId) {\n    //\n    //       const company  = this.authService.getItem('company');\n    //\n    //       if (!company) {\n    //         this.companyId = this.companies[0].value;\n    //         this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //       }\n    //       else if (company && !company.id) {\n    //         this.companyId = this.companies[0].value;\n    //         this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //       }\n    //       else {\n    //         this.companyId = company.id;\n    //       }\n    //     }\n    //\n    //     // this.onChange();\n    //   });\n  }\n\n  onChange() {\n\n    // const company  = this.authService.getItem('company');\n    //\n    // if (company && company.id !== this.companyId) {\n    //   this.authService.setItem({key: 'company', object: {id: this.companyId}});\n    //   this.router.navigate(['/betalerts']);\n    // }\n  }\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: []\n})\nexport class AppHeaderComponent {}\n","        \n<!-- ============================================================== -->\n<!-- Profile - style you can find in header.scss -->\n<!-- ============================================================== -->\n<!--<a href=\"https://wrappixel.com/templates/materialpro-angular-dashboard/\" class=\" m-r-20 hidden-sm-up\" mat-raised-button color=\"warn\" *ngIf=\"false\">Upgrade To Pro</a>-->\n<!--<button  mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\" class=\"profile-pic\"> </button>-->\n<button [matMenuTriggerFor]=\"profile\" mat-icon-button class=\"m-r-5\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\" class=\"profile-pic\"> </button>\n<mat-menu #profile=\"matMenu\" class=\"mymegamenu\">\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>settings</mat-icon> Settings </button>-->\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>account_box</mat-icon> Profile </button>-->\n<!--    <button mat-menu-item>-->\n<!--        <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n    <button mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon><a routerLink=\"/login\" class=\"nav-link\">Sign Out</a></button>\n</mat-menu>\n\n","import {\n  ChangeDetectorRef,\n  Component,\n  NgZone,\n  OnDestroy,\n  ViewChild,\n  HostListener,\n  Directive,\n  AfterViewInit, OnInit\n} from '@angular/core';\nimport { MediaMatcher } from '@angular/cdk/layout';\n// import { MenuItems } from '../../../shared/menu-items/menu-items';\n\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\nimport {ApiService} from \"../../../services/api.service\";\n\n// interface FoodNode {\n//   name: string;\n//   children?: FoodNode[];\n// }\n\n// const TREE_DATA: any[] = [\n//   {\n//     name: 'Business Network',\n//     children: [\n//       { state: 'starter', type: 'link', name: 'Model Up', icon: 'av_timer'},\n//       { state: 'company', type: 'link', name: 'Company', icon: 'equalizer', show: true },\n//       { state: 'companies', type: 'link', name: 'Companies', icon: 'equalizer', show: true },\n//       // {name: 'Banana'},\n//       // {name: 'Fruit loops'},\n//     ]\n//   },\n//   // {\n//   //   name: 'Vegetables',\n//   //   children: [\n//   //     {\n//   //       name: 'Green',\n//   //       children: [\n//   //         {name: 'Broccoli'},\n//   //         {name: 'Brussel sprouts'},\n//   //       ]\n//   //     }, {\n//   //       name: 'Orange',\n//   //       children: [\n//   //         {name: 'Pumpkins'},\n//   //         {name: 'Carrots'},\n//   //       ]\n//   //     },\n//   //   ]\n//   // },\n// ];\n\n/** Flat node with expandable and level information */\n// interface ExampleFlatNode {\n//   expandable: boolean;\n//   name: string;\n//   level: number;\n// }\n\n@Component({\n  selector: 'app-sidebar',\n  templateUrl: './sidebar.component.html',\n  styleUrls: []\n})\nexport class AppSidebarComponent implements OnDestroy, OnInit {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  currentUser: any;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    // public menuItems: MenuItems,\n    private authService: AuthService,\n    private router: Router,\n    private service: ApiService,\n  ) {\n    this.mobileQuery = media.matchMedia('(min-width: 768px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n  }\n\n  ngOnInit() {\n\n    this.currentUser = this.authService.getItem('currentUser');\n\n    if (this.currentUser.menu) {\n      this.dataSource.data = JSON.parse(this.currentUser.menu.setting);\n    }\n    else {\n\n      this.service.get('menus', {options: {where: {$or: [{name: 'Default'}, {name: 'Default2'}]}}})\n        .subscribe((entityRes) => {\n\n          let menu: any;\n          if (entityRes.length) {\n            menu = entityRes[0];\n          }\n\n          this.dataSource.data = menu.setting;\n        });\n    }\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n\n  private _transformer = (node: any, level: number) => {\n    return {\n      expandable: !!node.children && node.children.length > 0,\n      name: node.name,\n      state: node.state,\n      icon: node.icon,\n      level: level,\n    };\n  };\n\n  treeControl = new FlatTreeControl<any>(\n    node => node.level, node => node.expandable);\n\n  treeFlattener = new MatTreeFlattener(\n    this._transformer, node => node.level, node => node.expandable, node => node.children);\n\n  dataSource = new MatTreeFlatDataSource(this.treeControl, this.treeFlattener);\n\n  hasChild = (_: number, node: any) => node.expandable;\n\n  routerLink(node: any) {\n\n    let indexIni = this.router.url.indexOf('/');\n    let indexEnd = this.router.url.indexOf(';');\n\n    let url = \"\";\n    if (indexIni != -1 && indexEnd != -1) {\n      url = this.router.url.substring(indexIni + 1, indexEnd);\n    }\n    else {\n      url = this.router.url.substring(indexIni + 1, this.router.url.length);\n    }\n\n    if (url != node.state) {\n\n      this.router.navigate(['/' + node.state]);\n    }\n  }\n}\n","<!-- ============================================================== -->\n<!-- sidebar -->\n<!-- ============================================================== -->\n <div class=\"user-profile\" style=\"background: url(assets/images/background/user-info.jpg) no-repeat;\">\n    <!-- User profile image -->\n    <div class=\"profile-img\"> <img src=\"assets/images/users/2.jpg\" alt=\"user\"> </div>\n    <!-- User profile text-->\n    <!-- ============================================================== -->\n    <!-- Profile - style you can find in header.scss -->\n    <!-- ============================================================== -->\n    <div class=\"profile-text\"><a class=\"\">{{currentUser.name}}<i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>\n<!--    <div class=\"profile-text\"><a [matMenuTriggerFor]=\"sdprofile\" class=\"\"> Kamadeva <i class=\"ti-angle-down font-12 m-l-5\"></i></a></div>-->\n<!--    <mat-menu #sdprofile=\"matMenu\" class=\"mymegamenu\">-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>settings</mat-icon> Settings </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>account_box</mat-icon> Profile </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>notifications_off</mat-icon> Disable notifications </button>-->\n<!--        <button mat-menu-item>-->\n<!--            <mat-icon>exit_to_app</mat-icon> Sign Out </button>-->\n<!--    </mat-menu>-->\n\n</div>\n<!--<mat-nav-list appAccordion>-->\n<!--    <mat-list-item appAccordionLink *ngFor=\"let menuItem of menuItems.getMenuitem()\" routerLinkActive=\"selected\" group=\"{{menuItem.state}}\">-->\n<!--        <a class=\"\" appAccordionToggle [routerLink]=\"['/', menuItem.state]\" *ngIf=\"menuItem.type === 'link' && menuItem.show\">-->\n<!--            <mat-icon>{{ menuItem.icon }}</mat-icon>-->\n<!--            <span>{{ menuItem.name }}</span>-->\n<!--            <span fxFlex></span> -->\n<!--            <span class=\"label label-{{ badge.type }}\" *ngFor=\"let badge of menuItem.badge\">{{ badge.value }}</span>-->\n<!--        </a>-->\n<!--    </mat-list-item>-->\n<!--</mat-nav-list>-->\n\n<mat-tree [dataSource]=\"dataSource\" [treeControl]=\"treeControl\">\n  <!-- This is the tree node template for leaf nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node\" matTreeNodePadding>\n    <!-- use a disabled button to provide padding for tree leaf -->\n    <button mat-icon-button disabled><mat-icon>{{ node.icon }}</mat-icon></button>\n    <mat-nav-list appAccordion>\n<!--      <mat-list-item appAccordionLink routerLinkActive=\"selected\" group=\"{{node.state}}\">-->\n      <mat-list-item appAccordionLink>\n        <a appAccordionToggle (click)=\"routerLink(node)\">\n          <span>{{ node.name }}</span>\n        </a>\n      </mat-list-item>\n    </mat-nav-list>\n  </mat-tree-node>\n\n\n  <!-- This is the tree node template for expandable nodes -->\n  <mat-tree-node *matTreeNodeDef=\"let node;when: hasChild\" matTreeNodePadding>\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon>\n<!--        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}-->\n        {{ node.icon }}\n      </mat-icon>\n<!--      <span>{{ node.name }}</span>-->\n    </button>\n\n    <span mat-icon-button matTreeNodeToggle\n          [attr.aria-label]=\"'toggle ' + node.name\"\n          style=\"cursor: pointer\"\n    >\n      {{ node.name }}\n    </span>\n\n    <button mat-icon-button matTreeNodeToggle\n            [attr.aria-label]=\"'toggle ' + node.name\">\n      <mat-icon>\n        {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\n      </mat-icon>\n    </button>\n  </mat-tree-node>\n</mat-tree>\n\n<!--<mat-tree>-->\n<!--  <mat-nested-tree-node>-->\n<!--    parent node-->\n<!--    <mat-nested-tree-node> &#45;&#45; child node1 </mat-nested-tree-node>-->\n<!--    <mat-nested-tree-node> &#45;&#45; child node2 </mat-nested-tree-node>-->\n<!--  </mat-nested-tree-node>-->\n<!--</mat-tree>-->\n","import {Injectable} from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport {catchError, finalize, map, take} from 'rxjs/operators';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { environment } from '../../environments/environment';\n// import {ConfigService} from './config.service';\nimport {AuthService} from './security/auth.service';\nimport {FilePreviewOverlayService} from './file-preview-overlay.service';\nimport {AsyncValidatorFn, ValidationErrors} from '@angular/forms';\n\n// const configService: ConfigService = new ConfigService();\n\n\nconst routes = [ 'api', 'globalize', 'socket', 'image', 'export', 'file', 'pdf' ];\n\nlet environmentUrl;\n\nconst buildUrl = (url: string) => {\n\n  const route = url.split('/')[0];\n\n  if (routes.indexOf(route) < 0) {\n    url = 'api/' + url;\n  }\n\n  url = environment.api_url + '/' + url;\n\n  // url = process.env.api_url;\n  return url;\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n\n  // private readonly host: string;\n  // private url: string;\n  // private module = '/companies';\n\n  constructor(private http: HttpClient,\n              private authService: AuthService,\n              private previewDialog: FilePreviewOverlayService) {\n\n    environmentUrl = environment.api_url;\n  }\n\n  public messagesErrors = {\n    required: 'Required',\n    email: 'Invalid email',\n    taken: 'Already exists',\n    forbidden: 'Número Prohibido'\n  };\n\n  getUrl() {\n    return environmentUrl\n  }\n\n   /** GET Data from the server */\n  get(url: string, settings?: any): Observable<any[]> {\n\n    settings = settings || {};\n\n    let previewDialogRef: any = null;\n\n    if (settings.showPreviewDialog) {\n      previewDialogRef = this.previewDialog.open();\n    }\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    return this.http.post<any[]>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any[]>('get ' + url)),\n      finalize(() => { if (previewDialogRef)  {previewDialogRef.close(); } })\n    );\n  }\n\n  /** GET Data from the server and map in array of {value: 'id', text: 'field'} */\n  getSelect(url: string, settings?: any): Observable<any[]> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    settings = settings || {};\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    return this.http.post<any[]>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      map(value => {\n        return value.map(value => { return {value: value[settings.value], text: value[settings.text]}})\n      }),\n      catchError(this.handleError<any[]>('getSelect ' + url)),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** GET hero by id. Return `undefined` when id not found */\n  getEntity<Data>(url, id: any, settings?: any): Observable<any> {\n\n    let previewDialogRef: any;\n\n    if (settings && settings.previewDialog == false) {\n      // const previewDialogRef = this.previewDialog.open();\n    }\n    else {\n      previewDialogRef = this.previewDialog.open();\n    }\n\n    if (settings) {\n      settings.id = id;\n    }\n    else {\n      settings = {\n        id\n      };\n    }\n\n    return this.http.post<any>(buildUrl(url), settings, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>(`getEntity id=${id}`)),\n      finalize(() => { if (previewDialogRef) {previewDialogRef.close()} })\n    );\n  }\n\n  /** POST: add a new hero to the server */\n  save(url, entity: any): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    let addId = (entity: any) => {\n\n      if (Array.isArray(entity)) {\n\n        for (let variable of entity) {\n          addId(variable);\n        }\n      }\n      else {\n\n        for (let variable in entity) {\n\n          if (Array.isArray(entity[variable])) {\n            addId(entity[variable]);\n          }\n        }\n\n        entity.id = entity.id || uuidv4();\n        entity.appSubscriptionId = this.authService.getAppSubscriptionId();\n      }\n    }\n\n    addId(entity);\n\n    return this.http.put<any>(buildUrl(url), entity, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError('add')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  delete(url, entity: any | number): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    const id = typeof entity === 'string' ? entity : entity.id;\n    const _url = `${buildUrl(url)}/${id}`;\n\n    return this.http.delete<any>(_url, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>('delete')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  /** DELETE: delete the hero from the server */\n  deleteOptions(url, settings?: any): Observable<any> {\n\n    const previewDialogRef = this.previewDialog.open();\n\n    // const id = typeof entity === 'string' ? entity : entity.id;\n    // const _url = `${buildUrl(url)}/${id}`;\n\n    settings = settings || {};\n\n    if (!settings.options) {\n      settings.options = {where: {appSubscriptionId: this.authService.getAppSubscriptionId()}};\n    }\n    else if (settings.options && !settings.options.where) {\n      settings.options.where = {appSubscriptionId: this.authService.getAppSubscriptionId()};\n    }\n    else if (settings.options && settings.options.where && !settings.options.where.appSubscriptionId) {\n      settings.options.where.appSubscriptionId = this.authService.getAppSubscriptionId();\n    }\n\n    // let options: any = {};\n    //\n    // options = this.authService.getHttpOptions();\n    // options.settings = settings\n\n    // const _url = `${buildUrl(url)}/${settings}`;\n\n    return this.http.post<any[]>(buildUrl(url) + '/delete', settings, this.authService.getHttpOptions()).pipe(\n    // return this.http.delete<any>(_url, this.authService.getHttpOptions()).pipe(\n      catchError(this.handleError<any>('deleteOptions')),\n      finalize(() => { previewDialogRef.close() })\n    );\n  }\n\n  takenValidator(url: string, settings?: any): AsyncValidatorFn {\n    return (control: any): Observable<{ [key: string]: any } | null> => {\n\n      settings = settings || {};\n\n      const text = `${control.value}`.toLowerCase();\n      let validationError: ValidationErrors = {'taken': true};\n\n      if (settings.ValidationError == 'forbidden') {\n        validationError = {'forbidden': true};\n      }\n\n      settings.showPreviewDialog = false;\n\n      return this.get(url, settings).pipe(\n        take(1),\n        map((data: any) => data.map((o:any) => o[settings.field].toLowerCase()).indexOf(text) === -1),\n        map(valid => valid ? null : validationError)\n      )\n    };\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (res: any): Observable<T> => {\n\n      // if (error && !error.auth) {\n      //\n      //   this.authService.logout();\n      // }\n\n      let message = res.message;\n\n      if (res.error && res.error.msg) {\n        message += ` ${res.error.msg}`;\n      }\n\n      if (res.error && res.error.message) {\n        message += ` ${res.error.message}`;\n      }\n\n      message += ` ${res.error.message}`;\n\n      this.previewDialog.open({message});\n\n      // Let the app keep running by returning an empty result.\n      return of(res as T);\n    };\n  }\n}\n","import {Injectable} from '@angular/core';\n\n@Injectable()\nexport class ConfigService {\n\n  public hostApi: string;\n\n  constructor() {\n    // let wnd: any = window;\n    // this.env =  wnd.traze.config.env;\n\n    // this.hostApi = 'https://lottery153-api.herokuapp.com';\n    this.hostApi = '//lotteryapi-staging.eba-tmkm7pg3.us-east-1.elasticbeanstalk.com';\n    // this.hostApi = 'https://lottery153-api-dev.herokuapp.com';\n    // this.hostApi = 'http://localhost:3000';\n  }\n\n}\n","import { Injectable, Inject, OnInit, Injector, ComponentRef } from '@angular/core';\nimport { Overlay, OverlayConfig, OverlayRef } from '@angular/cdk/overlay';\nimport { ComponentPortal, PortalInjector } from '@angular/cdk/portal';\n\nimport { FilePreviewOverlayComponent } from '../shared/preview-overlay/file-preview-overlay.component';\n\nimport { FilePreviewOverlayRef } from '../shared/preview-overlay/file-preview-overlay-ref';\nimport { FILE_PREVIEW_DIALOG_DATA } from '../shared/preview-overlay/file-preview-overlay.tokens';\n\nexport interface Image {\n  name: string;\n  url: string;\n}\n\ninterface FilePreviewDialogConfig {\n  panelClass?: string;\n  hasBackdrop?: boolean;\n  backdropClass?: string;\n  image?: Image;\n  message?: string;\n}\n\nconst DEFAULT_CONFIG: FilePreviewDialogConfig = {\n  hasBackdrop: true,\n  backdropClass: 'dark-backdrop',\n  panelClass: 'tm-file-preview-dialog-panel',\n  image: null,\n  message: null\n};\n\n@Injectable()\nexport class FilePreviewOverlayService {\n\n  constructor(\n    private injector: Injector,\n    private overlay: Overlay) {\n  }\n\n  open(config: FilePreviewDialogConfig = {}) {\n\n    if (!config.image && !config.message) {\n\n      const max: any = 8;\n      const min: any = 1;\n      const id: any = Math.round(Math.random() * (max - min) + min);\n\n      config.image = {name: id, url: 'assets/images/users/' + id + '.jpg'};\n    }\n\n    // Override default configuration\n    const dialogConfig = {...DEFAULT_CONFIG, ...config};\n\n    // Returns an OverlayRef which is a PortalHost\n    const overlayRef = this.createOverlay(dialogConfig);\n\n    // Instantiate remote control\n    const dialogRef = new FilePreviewOverlayRef(overlayRef);\n\n    const overlayComponent = this.attachDialogContainer(overlayRef, dialogConfig, dialogRef);\n\n    // overlayRef.backdropClick().subscribe(_ => dialogRef.close());\n\n    return dialogRef;\n  }\n\n  private createOverlay(config: FilePreviewDialogConfig) {\n    const overlayConfig = this.getOverlayConfig(config);\n    return this.overlay.create(overlayConfig);\n  }\n\n  private attachDialogContainer(overlayRef: OverlayRef, config: FilePreviewDialogConfig, dialogRef: FilePreviewOverlayRef) {\n    const injector = this.createInjector(config, dialogRef);\n\n    const containerPortal = new ComponentPortal(FilePreviewOverlayComponent, null, injector);\n    const containerRef: ComponentRef<FilePreviewOverlayComponent> = overlayRef.attach(containerPortal);\n\n    return containerRef.instance;\n  }\n\n  private createInjector(config: FilePreviewDialogConfig, dialogRef: FilePreviewOverlayRef): PortalInjector {\n    const injectionTokens = new WeakMap();\n\n    injectionTokens.set(FilePreviewOverlayRef, dialogRef);\n    injectionTokens.set(FILE_PREVIEW_DIALOG_DATA, config);\n\n    return new PortalInjector(this.injector, injectionTokens);\n  }\n\n  private getOverlayConfig(config: FilePreviewDialogConfig): OverlayConfig {\n    const positionStrategy = this.overlay.position()\n      .global()\n      .centerHorizontally()\n      .centerVertically();\n\n    const overlayConfig = new OverlayConfig({\n      hasBackdrop: config.hasBackdrop,\n      backdropClass: config.backdropClass,\n      panelClass: config.panelClass,\n      scrollStrategy: this.overlay.scrollStrategies.block(),\n      positionStrategy\n    });\n\n    return overlayConfig;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport { Observable, of } from 'rxjs';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n  // private host: string;\n  // private url: string;\n  // private module = '/users';\n\n  constructor(private http: HttpClient\n              // private messageService: MessageService) {\n  ) {\n\n  }\n\n  redirectUrl: string;\n\n  isLoggedIn() {\n    if (localStorage.getItem('currentUser')) {\n      return true;\n    }\n    return false;\n  }\n\n  getAuthorizationToken() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser ? currentUser.token : null;\n  }\n\n  getAppSubscriptionId() {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser'));\n    return currentUser.appSubscriptionId;\n  }\n\n  logout() {\n    localStorage.removeItem('currentUser');\n  }\n\n  getHttpOptions = () => {\n\n    const token = this.getAuthorizationToken();\n\n    const headers = {'Content-Type': 'application/json; charset=UTF-8'};\n\n    if (token) {\n      headers['X-Access-Token'] = token;\n    }\n\n    return {\n      headers: new HttpHeaders(headers)\n    };\n  }\n\n\n  setItem(settings: any) {\n    localStorage.setItem(settings.key, JSON.stringify(settings.object));\n  }\n\n  getItem(key: any) {\n    const object = JSON.parse(localStorage.getItem(key));\n    return object ? object : null;\n  }\n\n  /**\n   * Handle Http operation that failed.\n   * Let the app continue.\n   * @param operation - name of the operation that failed\n   * @param result - optional value to return as the observable result\n   */\n  private handleError<T>(operation = 'operation', result?: T) {\n    return (result: any): Observable<T> => {\n\n      // if (error && !error.auth) {\n      //\n      //   this.authService.logout();\n      // }\n\n      let message = result.message;\n\n      if (result.error && result.error.msg) {\n        message += ` ${result.error.msg}`;\n      }\n\n      console.log(message);\n      // this.previewDialog.open({message: message});\n\n      // Let the app keep running by returning an empty result.\n      return of(result as T);\n    };\n  }\n}\n","import {\n  Directive,\n  OnInit,\n  AfterViewInit,\n  AfterContentChecked\n} from '@angular/core';\nimport { Router, NavigationEnd } from '@angular/router';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\nimport { filter } from 'rxjs/operators';\n\n@Directive({\n  selector: '[appAccordion]'\n})\nexport class AccordionDirective implements AfterContentChecked {\n  protected navlinks: Array<AccordionLinkDirective> = [];\n\n  closeOtherLinks(selectedLink: AccordionLinkDirective): void {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link !== selectedLink) {\n        link.selected = false;\n      }\n    });\n  }\n\n  addLink(link: AccordionLinkDirective): void {\n    this.navlinks.push(link);\n  }\n\n  removeGroup(link: AccordionLinkDirective): void {\n    const index = this.navlinks.indexOf(link);\n    if (index !== -1) {\n      this.navlinks.splice(index, 1);\n    }\n  }\n\n  checkOpenLinks() {\n    this.navlinks.forEach((link: AccordionLinkDirective) => {\n      if (link.group) {\n        const routeUrl = this.router.url;\n        const currentUrl = routeUrl.split('/');\n        if (currentUrl.indexOf(link.group) > 0) {\n          link.selected = true;\n          this.closeOtherLinks(link);\n        }\n      }\n    });\n  }\n\n  ngAfterContentChecked(): void {\n    this.router.events\n      .pipe(filter(event => event instanceof NavigationEnd))\n      .subscribe(e => this.checkOpenLinks());\n  }\n\n  constructor(private router: Router) {\n    setTimeout(() => this.checkOpenLinks());\n  }\n}\n","import { Directive, HostListener, Inject } from '@angular/core';\n\nimport { AccordionLinkDirective } from './accordionlink.directive';\n\n@Directive({\n  selector: '[appAccordionToggle]'\n})\nexport class AccordionAnchorDirective {\n  protected navlink: AccordionLinkDirective;\n\n  constructor(@Inject(AccordionLinkDirective) navlink: AccordionLinkDirective) {\n    this.navlink = navlink;\n  }\n\n  @HostListener('click', ['$event'])\n  onClick(e: any) {\n    //todo para resaltar el item del menu seleccionado... pro no esta desactivando los otros.\n    // this.navlink.toggle();\n  }\n}\n","import {\n  Directive,\n  HostBinding,\n  Inject,\n  Input,\n  OnInit,\n  OnDestroy\n} from '@angular/core';\n\nimport { AccordionDirective } from './accordion.directive';\n\n@Directive({\n  selector: '[appAccordionLink]'\n})\nexport class AccordionLinkDirective implements OnInit, OnDestroy {\n  @Input()\n  public group: any;\n\n  @HostBinding('class.selected')\n  @Input()\n  get selected(): boolean {\n    return this._selected;\n  }\n\n  set selected(value: boolean) {\n    this._selected = value;\n    if (value) {\n      this.nav.closeOtherLinks(this);\n    }\n  }\n\n  protected _selected: boolean;\n  protected nav: AccordionDirective;\n\n  constructor(@Inject(AccordionDirective) nav: AccordionDirective) {\n    this.nav = nav;\n  }\n\n  ngOnInit(): any {\n    this.nav.addLink(this);\n  }\n\n  ngOnDestroy(): any {\n    this.nav.removeGroup(this);\n  }\n\n  toggle(): any {\n    this.selected = !this.selected;\n  }\n}\n","export * from './accordionanchor.directive';\nexport * from './accordionlink.directive';\nexport * from './accordion.directive';\n","import { OverlayRef } from '@angular/cdk/overlay';\n\nexport class FilePreviewOverlayRef {\n\n  constructor(private overlayRef: OverlayRef) { }\n\n  close(): void {\n    this.overlayRef.dispose();\n  }\n}\n","import { Component, Input, Inject } from '@angular/core';\n\nimport { FilePreviewOverlayRef } from './file-preview-overlay-ref';\nimport { FILE_PREVIEW_DIALOG_DATA } from './file-preview-overlay.tokens';\n\n@Component({\n  selector: 'file-preview-overlay',\n  template: `\n    <div class=\"overlay-content\">\n      <img *ngIf=\"data.image\" class=\"avatar\" [src]=\"data.image.url\">\n      <p *ngIf=\"data.message\" style=\"color: #f44336;\">{{data.message}}</p>\n    </div>\n  `,\n  styles: [`\n    :host {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n    }\n\n    h1 {\n      margin: 0;\n      padding: 1em;\n    }\n\n    img {\n      width: 100%;\n      max-width: 500px;\n      height: auto;\n    }\n\n    .overlay-content {\n      padding: 1em;\n    }\n\n    .avatar {\n      /* cambia estos dos valores para definir el tamaño de tu círculo */\n      height: 300px;\n      width: 300px;\n      /* los siguientes valores son independientes del tamaño del círculo */\n      background-repeat: no-repeat;\n      background-position: 50%;\n      border-radius: 50%;\n      background-size: 100% auto;\n    }\n  `]\n})\nexport class FilePreviewOverlayComponent {\n\n  constructor(\n    public dialogRef: FilePreviewOverlayRef,\n    @Inject(FILE_PREVIEW_DIALOG_DATA) public data: any) { }\n}\n","import { InjectionToken } from '@angular/core';\n\nimport { Image } from '../../services/file-preview-overlay.service';\n\nexport const FILE_PREVIEW_DIALOG_DATA = new InjectionToken<Image>('FILE_PREVIEW_DIALOG_DATA');\n","import { NgModule } from '@angular/core';\n\n// import { MenuItems } from './menu-items/menu-items';\nimport { AccordionAnchorDirective, AccordionLinkDirective, AccordionDirective } from './accordion';\n\n\n@NgModule({\n  declarations: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n  ],\n  exports: [\n    AccordionAnchorDirective,\n    AccordionLinkDirective,\n    AccordionDirective\n   ],\n  // providers: [ MenuItems ]\n})\nexport class SharedModule { }\n","import {\n  Component,\n  Input,\n  OnDestroy,\n  Inject,\n  ViewEncapsulation\n} from '@angular/core';\nimport {\n  Router,\n  NavigationStart,\n  NavigationEnd,\n  NavigationCancel,\n  NavigationError\n} from '@angular/router';\nimport { DOCUMENT } from '@angular/common';\n\n@Component({\n  selector: 'app-spinner',\n  template: `<div class=\"preloader\" *ngIf=\"isSpinnerVisible\">\n        <div class=\"spinner\">\n          <div class=\"double-bounce1\"></div>\n          <div class=\"double-bounce2\"></div>\n        </div>\n    </div>`,\n  encapsulation: ViewEncapsulation.None\n})\nexport class SpinnerComponent implements OnDestroy {\n  public isSpinnerVisible = true;\n\n  @Input()\n  public backgroundColor = 'rgba(0, 115, 170, 0.69)';\n\n  constructor(\n    private router: Router,\n    @Inject(DOCUMENT) private document: Document\n  ) {\n    this.router.events.subscribe(\n      event => {\n        if (event instanceof NavigationStart) {\n          this.isSpinnerVisible = true;\n        } else if (\n          event instanceof NavigationEnd ||\n          event instanceof NavigationCancel ||\n          event instanceof NavigationError\n        ) {\n          this.isSpinnerVisible = false;\n        }\n      },\n      () => {\n        this.isSpinnerVisible = false;\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.isSpinnerVisible = false;\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FormControl, FormGroup, Validators} from '@angular/forms';\n\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html'\n})\nexport class LoginComponent implements OnInit {\n\n  entityApi = 'login';\n  title: any;\n  subtitle: any;\n  entity: any;\n\n  loginForm: FormGroup;\n\n  constructor(private router: Router,\n              private service: ApiService,\n              private authService: AuthService\n  ) {\n  }\n\n  ngOnInit() {\n\n    this.title = 'Login';\n    this.subtitle = 'security';\n\n    this.entity = {\n      user: null,\n      password: null,\n      options : {where : {appSubscriptionId: 'login'}}\n    };\n\n    this.loginForm = new FormGroup({\n      user: new FormControl('', [Validators.required]),\n      password: new FormControl('', [Validators.required]),\n    });\n\n    this.authService.logout();\n  }\n\n  getErrorMessage() {\n\n    // return this.loginForm.controls.user.hasError('required') ? this.service.messagesErrors.required :\n    //   this.loginForm.controls.password.hasError('required') ? this.service.messagesErrors.required : '';\n\n  }\n\n  login() {\n\n    if (this.loginForm.valid) {\n\n      this.service.get(this.entityApi, this.entity).subscribe((entityRes: any) => {\n\n        if (entityRes && entityRes.auth) {\n\n          this.authService.setItem({key: 'currentUser', object: entityRes});\n          this.router.navigate(['/forbidden']);\n        }\n      });\n    }\n  }\n}\n","\n<mat-card>\n  <mat-card-header>\n    <mat-card-title>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <!-- column -->\n        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n          {{title}}\n        </div>\n      </div>\n    </mat-card-title>\n    <mat-card-subtitle>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <!-- column -->\n        <div fxFlex.gt-sm=\"50\" fxFlex.gt-xs=\"50\">\n          {{subtitle}}\n        </div>\n      </div>\n    </mat-card-subtitle>\n  </mat-card-header>\n  <mat-card-content>\n    <form [formGroup]=\"loginForm\">\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"25\">\n          <mat-form-field>\n            <input matInput placeholder=\"Enter your user\" formControlName=\"user\" [(ngModel)]=\"entity.user\" required>\n            <mat-error *ngIf=\"loginForm.invalid\">{{getErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n      <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n        <div fxFlex.gt-sm=\"25\" fxFlex.gt-xs=\"25\">\n          <mat-form-field>\n            <input type=\"password\" matInput placeholder=\"Enter your password\"  formControlName=\"password\" [(ngModel)]=\"entity.password\" required>\n            <mat-error *ngIf=\"loginForm.invalid\">{{getErrorMessage()}}</mat-error>\n          </mat-form-field>\n        </div>\n      </div>\n    </form>\n  </mat-card-content>\n  <mat-card-actions>\n    <button mat-fab color=\"accent\" [disabled]=\"!loginForm.valid\" (click)=\"login()\">Login</button>\n  </mat-card-actions>\n</mat-card>\n\n\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {LoginComponent} from './login/login.component';\n\nconst routes: Routes = [\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class SecurityLoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DemoMaterialModule } from '../../demo-material-module';\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\nimport { SecurityLoginRoutingModule } from './security-login-routing.module';\nimport { LoginComponent } from '../security-login/login/login.component';\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    SecurityLoginRoutingModule,\n    DemoMaterialModule,\n    // FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class SecurityLoginModule { }\n","import {Component, Inject} from '@angular/core';\nimport {MatDialogRef, MAT_DIALOG_DATA} from '@angular/material/dialog';\n\n@Component({\n  selector: 'basic-dialog',\n  templateUrl: './basic.dialog.html',\n})\nexport class BasicDialog {\n\n  constructor(\n    public dialogRef: MatDialogRef<BasicDialog>,\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\n\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n}\n","<h1 mat-dialog-title>{{data.title}}</h1>\n<div mat-dialog-content>\n  <mat-form-field>\n    <input matInput [(ngModel)]=\"data.name\">\n  </mat-form-field>\n</div>\n<div mat-dialog-actions>\n  <button mat-button (click)=\"onNoClick()\">{{data.cancel || 'Cancel'}} </button>\n  <button mat-button [mat-dialog-close]=\"data.name\" cdkFocusInitial>{{data.ok || 'Ok'}}</button>\n</div>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class WidgetsRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {DemoMaterialModule} from '../../demo-material-module';\n// import { FlexLayoutModule } from '@angular/flex-layout';\nimport { WidgetsRoutingModule } from './widgets-routing.module';\n\nimport {BasicDialog} from './dialog-overviews/basic.dialog';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\n\n@NgModule({\n  declarations: [\n    BasicDialog\n  ],\n  exports: [\n    BasicDialog\n  ],\n  imports: [\n    CommonModule,\n    WidgetsRoutingModule,\n    DemoMaterialModule,\n    // FlexLayoutModule,\n    FormsModule,\n    ReactiveFormsModule\n  ]\n})\nexport class WidgetsModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  // api_url: 'https://lottery153-api.herokuapp.com'\n  // api_url: 'https://lottery153-api-dev.herokuapp.com'\n  api_url: 'http://localhost:3000'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}