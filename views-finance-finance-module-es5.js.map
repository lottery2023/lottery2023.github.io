{"version":3,"sources":["webpack:///src/app/views/finance/finance-routing.module.ts","webpack:///src/app/views/finance/finance.module.ts","webpack:///src/app/views/finance/sales/sales.component.ts","webpack:///src/app/views/finance/sales/sales.component.html"],"names":["routes","path","canActivate","component","FinanceRoutingModule","forChild","imports","exports","FinanceModule","declarations","SalesComponent","service","authService","router","showCardHeader","entityApi","settings","query","table","options","where","displayedColumns","filtersColumns","createdDate","Date","title","subtitle","changes","loadChange","row","navigate","betId","id","element","dataSource","data","reduce","accum","curr","valor","datestring","getDate","getMonth","getFullYear","onPageChange","onSortChange","onPaginatorChange","selector","templateUrl"],"mappings":"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","file":"views-finance-finance-module-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport {AuthGuard} from '../../services/security/auth.guard';\nimport {SalesComponent} from './sales/sales.component';\n\n\n\nconst routes: Routes = [\n  {\n    path: 'sales',\n    canActivate: [AuthGuard],\n    component: SalesComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class FinanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {FinanceRoutingModule} from './finance-routing.module';\nimport {DemoMaterialModule} from '../../demo-material-module';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport { SalesComponent } from './sales/sales.component';\n\n\n@NgModule({\n  declarations: [SalesComponent],\n  imports: [\n    CommonModule,\n    FinanceRoutingModule,\n    DemoMaterialModule,\n    ReactiveFormsModule,\n    FormsModule\n  ]\n})\nexport class FinanceModule { }\n","import {Component, Input, OnChanges, OnInit} from '@angular/core';\nimport {BaseSearchView} from '../../baseSearchView';\n\nimport {MatTableDataSource} from '@angular/material/table';\nimport {ApiService} from '../../../services/api.service';\nimport {AuthService} from '../../../services/security/auth.service';\nimport {Router} from '@angular/router';\n\n@Component({\n  selector: 'app-sales',\n  templateUrl: './sales.component.html'\n})\nexport class SalesComponent extends BaseSearchView implements OnInit, OnChanges {\n\n  @Input() loadChange: any;\n  @Input() showCardHeader: boolean = true;\n\n  entityApi = 'bets';\n  settings: any = {\n    query: {\n      table: 'vw_sales'\n    },\n    options: {\n      where: {\n      }\n    }\n  };\n\n  title: any;\n  subtitle: any;\n\n  displayedColumns: string[] = ['employeeCode', 'valor'];\n  filtersColumns: string[] = ['employeeCode'];\n  dataSource: MatTableDataSource<any>;\n\n  number: any;\n  createdDate = new Date();\n  filter: any;\n\n  constructor(private service: ApiService,\n              private authService: AuthService,\n              private router: Router) {\n    super();\n  }\n\n  ngOnInit(): void {\n\n    this.title = 'Ventas';\n    this.subtitle = 'Finanzas';\n\n    super.init(this);\n    super.onPageChange();\n  }\n\n  ngOnChanges(changes: any): void {\n\n    if (this.loadChange) {\n      super.onPageChange();\n    }\n  }\n\n  onEdit(row: any) {\n\n    this.router.navigate(['/bet', { betId: row.id }]);\n  }\n\n  getText(element: any) {\n\n\n    if (element == 'employeeCode') {\n      return 'Total';\n    }\n    else if (element == 'valor') {\n\n      if (this.dataSource && this.dataSource.data) {\n        return this.dataSource.data.reduce((accum, curr) => accum + curr.valor, 0);\n      }\n      else {\n        return '';\n      }\n    }\n    else\n    {\n      return '';\n    }\n  }\n\n  beforePageChange(): void {\n\n    if (this.createdDate) {\n\n      var datestring = this.createdDate.getDate()  + \"/\" + (this.createdDate.getMonth()+1) + \"/\" + this.createdDate.getFullYear();\n      // + \" \" +         this.createdDate.getHours() + \":\" + this.createdDate.getMinutes();\n\n      this.settings.options.where.createdDate = datestring;\n    }\n    else {\n      delete this.settings.options.where.createdDate;\n    }\n  }\n}\n","<div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n  <!-- column -->\n  <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" fxFlex=\"100\">\n    <mat-card>\n      <mat-card-header *ngIf=\"showCardHeader\">\n        <mat-card-title>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{title}}\n            </div>\n          </div>\n        </mat-card-title>\n        <mat-card-subtitle>\n          <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n            <!-- column -->\n            <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\">\n              {{subtitle}}\n            </div>\n          </div>\n        </mat-card-subtitle>\n      </mat-card-header>\n      <mat-card-content>\n\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <mat-form-field style=\"float: left;width: 30%; margin-right: 10px;\">\n              <input matInput (keyup.enter)=\"onPageChange()\" [(ngModel)]=\"filter\" placeholder=\"Filtrar\">\n            </mat-form-field>\n            <mat-form-field style=\"width: 30%; margin-right: 10px;\">\n              <mat-label>Seleccione fecha</mat-label>\n              <input matInput [matDatepicker]=\"picker\" [(ngModel)]=\"createdDate\">\n              <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n              <mat-datepicker #picker></mat-datepicker>\n            </mat-form-field>\n          </div>\n        </div>\n        <div fxLayout=\"row\" fxLayoutWrap=\"wrap\">\n          <div fxFlex.gt-sm=\"100\" fxFlex.gt-xs=\"100\" style=\"overflow: hidden;\">\n            <button mat-fab color=\"basic\"  (click)=\"onPageChange()\" style=\"float: left;\">Refrescar</button>\n          </div>\n        </div>\n\n        <table mat-table [dataSource]=\"dataSource\" matSort (matSortChange)=\"onSortChange($event)\" class=\"mat-elevation-z8\">\n\n          <!-- id Column -->\n          <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef> Id </th>\n            <td mat-cell *matCellDef=\"let element\"> {{element.id}} </td>\n          </ng-container>\n\n          <ng-container [matColumnDef]=\"column\" *ngFor=\"let column of displayedColumns\">\n            <th mat-header-cell *matHeaderCellDef> {{column}} </th>\n            <td mat-cell *matCellDef=\"let element\">\n              <span>{{element[column]}}</span>\n              <button *ngIf=\"column === 'actions'\" mat-button (click)=\"onEdit(element)\"><mat-icon>launch</mat-icon></button>\n              <button *ngIf=\"column === 'actions'\" mat-button color=\"warn\" (click)=\"onDelete(element)\"><mat-icon>delete_outline</mat-icon></button>\n            </td>\n            <td mat-footer-cell *matFooterCellDef>{{getText(column)}}</td>\n          </ng-container>\n\n          <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n          <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"></tr>\n          <tr mat-footer-row *matFooterRowDef=\"displayedColumns\"></tr>\n        </table>\n        <mat-paginator [length]=\"length\" [pageSize]=\"pageSize\" [pageSizeOptions]=\"pageSizeOptions\"\n                       (page)=\"onPaginatorChange($event)\" showFirstLastButtons>\n        </mat-paginator>\n      </mat-card-content>\n    </mat-card>\n  </div>\n</div>\n\n"]}