{"version":3,"sources":["webpack:///src/app/services/security/auth.guard.ts","webpack:///src/app/views/baseEditView.ts","webpack:///src/app/views/baseSearchView.ts"],"names":["AuthGuard","authService","router","route","state","url","checkLogin","canActivate","isLoggedIn","redirectUrl","navigate","queryParams","returnUrl","providedIn","BaseEditView","view","entityForm","valid","beforeSaved","done","service","save","entityApi","entity","entities","subscribe","entityRes","iniEntity","_snackBar","open","duration","savedEvent","emit","Date","toString","afterSaved","id","settings","entityObservable","observer","getEntity","changeDetectorRef","detectChanges","next","field","controls","hasError","messagesErrors","required","email","taken","forbidden","getError","BaseSearchView","pageSizeOptions","length","pageSize","filtersColumns","count","options","limit","order","applyFilter","beforePageChange","get","res","beforePrint","rows","dataSource","event","offset","pageIndex","onPageChange","direction","active","where","filter","col","$or","indexProperty","findIndex","o","hasOwnProperty","$like","push","splice","row","confirm","deletedEvent"],"mappings":"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","file":"common-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router, CanActivateChild } from '@angular/router';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate, CanActivateChild {\n\n  constructor(private authService: AuthService, private router: Router) {}\n\n  canActivate(\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): boolean {\n    const url: string = state.url;\n    return this.checkLogin(url);\n  }\n\n  canActivateChild(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n    return this.canActivate(route, state);\n  }\n\n  checkLogin(url: string) {\n    if (this.authService.isLoggedIn()) {\n      return true;\n    }\n\n    this.authService.redirectUrl = url;\n\n    this.router.navigate(['/login'], {queryParams: { returnUrl: url }} );\n  }\n}\n","import {Observable} from 'rxjs';\n\n\nexport class BaseEditView {\n\n  view: any;\n\n  constructor() {\n  }\n\n  init(view?: any): any {\n    this.view = view || this.view;\n\n  }\n\n  save(): any {\n\n    if (this.view.entityForm.valid) {\n\n      if (this.view.beforeSaved) {\n       let done = this.view.beforeSaved()\n\n        if (!done) {\n          return;\n        }\n      }\n\n      this.view.service.save(this.view.entityApi, this.view.entity || this.view.entities).subscribe((entityRes) => {\n\n        if (this.view.entities) {\n          if (this.view.iniEntity) {\n            this.view.iniEntity();\n          }\n        }\n        else {\n          this.view.entity = entityRes ? entityRes : this.view.entity;\n        }\n\n        if (this.view._snackBar) {\n          this.view._snackBar.open('Salvo', 'Correctamente', {\n            duration: 2000,\n          });\n        }\n\n        if (this.view.savedEvent) {\n          this.view.savedEvent.emit(new Date().toString());\n        }\n\n        if (this.view.afterSaved) {\n          this.view.afterSaved()\n        }\n      });\n    }\n  }\n\n  getEntity(id: any, settings?: any): Observable<any> {\n\n    const entityObservable = new Observable(observer => {\n\n      this.view.service.getEntity(this.view.entityApi, id, settings)\n        .subscribe((entityRes) => {\n\n          this.view.entity = entityRes;\n\n          if (this.view.changeDetectorRef) {\n            this.view.changeDetectorRef.detectChanges();\n          }\n\n          observer.next();\n        });\n    });\n\n    return entityObservable\n  }\n\n  getErrorMessage(field: any): any {\n\n    return this.view.entityForm.controls[field].hasError('required') ? this.view.service.messagesErrors.required :\n      this.view.entityForm.controls[field].hasError('email') ? this.view.service.messagesErrors.email :\n        this.view.entityForm.controls[field].hasError('taken') ? this.view.service.messagesErrors.taken :\n          this.view.entityForm.controls[field].hasError('forbidden') ? this.view.service.messagesErrors.forbidden :\n            this.view.entityForm.controls[field].getError('min');\n  }\n\n}\n","/* tslint:disable:one-line no-trailing-whitespace */\nimport {MatTableDataSource} from '@angular/material/table';\n\nexport class BaseSearchView {\n\n  view: any;\n  pageSizeOptions = [100, 300, 500];\n  // pageSizeOptions = [1, 2, 3];\n  length = 0;\n  pageSize = this.pageSizeOptions[0];\n  filtersColumns = [];\n\n  dataSource: MatTableDataSource<any>;\n\n  constructor() {\n  }\n\n  init(view?: any) {\n    this.view = view || this.view;\n\n    this.pageSizeOptions = this.view.pageSizeOptions || this.pageSizeOptions;\n    this.length = this.view.length || this.length;\n    this.pageSize = this.view.pageSize || this.pageSize;\n\n    if (!this.view.settings) {\n      this.view.settings = {\n        count: true\n      };\n    }\n    else {\n      this.view.settings.count = true;\n    }\n\n    if (!this.view.settings.options) {\n      this.view.settings.options = {\n        limit: this.pageSize,\n        order: []\n      };\n    }\n    else {\n      this.view.settings.options.limit = this.view.settings.options.limit || this.pageSize;\n      this.view.settings.options.order = this.view.settings.options.order || [];\n    }\n\n    this.filtersColumns = this.view.filtersColumns || [];\n  }\n\n  onPageChange() {\n\n    this.applyFilter();\n\n    if (this.view.beforePageChange) {\n      this.view.beforePageChange();\n    }\n\n    this.view.service.get(this.view.entityApi, this.view.settings)\n      .subscribe((res: any) => {\n\n        this.length = res.count;\n\n        if (this.view.beforePrint) {\n          res.rows = this.view.beforePrint(res.rows);\n        }\n\n        this.dataSource = new MatTableDataSource<any>(res.rows);\n      });\n  }\n\n  onPaginatorChange(event: any) {\n\n    this.view.settings.options.limit = event.pageSize;\n    this.view.settings.options.offset = event.pageSize * event.pageIndex;\n\n    this.onPageChange();\n  }\n\n  onSortChange(event: any) {\n\n    if (event.direction) {\n      this.view.settings.options.order = [[event.active, event.direction]];\n    }\n    else {\n      this.view.settings.options.order = [];\n    }\n\n    this.onPageChange();\n  }\n\n  applyFilter() {\n\n    this.view.settings.options.where = this.view.settings.options.where || {};\n\n    if (this.view.filter) {\n\n      for (const col of this.filtersColumns) {\n\n        if (!('$or' in this.view.settings.options.where)) {\n\n          this.view.settings.options.where.$or = [];\n        }\n\n        let indexProperty = this.view.settings.options.where.$or.findIndex((o: any) => o.hasOwnProperty(col));\n\n        if (indexProperty != -1) {\n          this.view.settings.options.where.$or[indexProperty] = {[col]: {$like: `%${this.view.filter}%`}};\n        }\n        else {\n          this.view.settings.options.where.$or.push({[col]: {$like: `%${this.view.filter}%`}})\n        }\n      }\n    }\n    else {\n\n      if ('$or' in this.view.settings.options.where) {\n\n        for (const col of this.filtersColumns) {\n\n          let indexProperty = this.view.settings.options.where.$or.findIndex((o: any) => o.hasOwnProperty(col));\n\n          if (indexProperty != -1) {\n            this.view.settings.options.where.$or.splice(indexProperty, 1);\n          }\n        }\n\n        if (!this.view.settings.options.where.$or.length) {\n          delete this.view.settings.options.where.$or\n        }\n      }\n    }\n  }\n\n  onDelete(row: any) {\n\n    if (confirm('¿Está seguro de eliminar el registro?')) {\n\n      this.view.service.delete(this.view.entityApi, row.id)\n        .subscribe((res: any) => {\n\n          this.onPageChange();\n\n          if (this.view.deletedEvent) {\n            this.view.deletedEvent.emit(new Date().toString());\n          }\n        });\n    }\n  }\n\n}\n"]}